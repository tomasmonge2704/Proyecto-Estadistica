{"ast":null,"code":"(function (window, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else {\n    window.jStat = factory();\n  }\n})(this, function () {\n  var jStat = function (Math, undefined) {\n    // For quick reference.\n    var concat = Array.prototype.concat;\n    var slice = Array.prototype.slice;\n    var toString = Object.prototype.toString;\n\n    // Calculate correction for IEEE error\n    // TODO: This calculation can be improved.\n    function calcRdx(n, m) {\n      var val = n > m ? n : m;\n      return Math.pow(10, 17 - ~~(Math.log(val > 0 ? val : -val) * Math.LOG10E));\n    }\n    var isArray = Array.isArray || function isArray(arg) {\n      return toString.call(arg) === '[object Array]';\n    };\n    function isFunction(arg) {\n      return toString.call(arg) === '[object Function]';\n    }\n    function isNumber(num) {\n      return typeof num === 'number' ? num - num === 0 : false;\n    }\n\n    // Converts the jStat matrix to vector.\n    function toVector(arr) {\n      return concat.apply([], arr);\n    }\n\n    // The one and only jStat constructor.\n    function jStat() {\n      return new jStat._init(arguments);\n    }\n\n    // TODO: Remove after all references in src files have been removed.\n    jStat.fn = jStat.prototype;\n\n    // By separating the initializer from the constructor it's easier to handle\n    // always returning a new instance whether \"new\" was used or not.\n    jStat._init = function _init(args) {\n      // If first argument is an array, must be vector or matrix.\n      if (isArray(args[0])) {\n        // Check if matrix.\n        if (isArray(args[0][0])) {\n          // See if a mapping function was also passed.\n          if (isFunction(args[1])) args[0] = jStat.map(args[0], args[1]);\n          // Iterate over each is faster than this.push.apply(this, args[0].\n          for (var i = 0; i < args[0].length; i++) this[i] = args[0][i];\n          this.length = args[0].length;\n\n          // Otherwise must be a vector.\n        } else {\n          this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n          this.length = 1;\n        }\n\n        // If first argument is number, assume creation of sequence.\n      } else if (isNumber(args[0])) {\n        this[0] = jStat.seq.apply(null, args);\n        this.length = 1;\n\n        // Handle case when jStat object is passed to jStat.\n      } else if (args[0] instanceof jStat) {\n        // Duplicate the object and pass it back.\n        return jStat(args[0].toArray());\n\n        // Unexpected argument value, return empty jStat object.\n        // TODO: This is strange behavior. Shouldn't this throw or some such to let\n        // the user know they had bad arguments?\n      } else {\n        this[0] = [];\n        this.length = 1;\n      }\n      return this;\n    };\n    jStat._init.prototype = jStat.prototype;\n    jStat._init.constructor = jStat;\n\n    // Utility functions.\n    // TODO: for internal use only?\n    jStat.utils = {\n      calcRdx: calcRdx,\n      isArray: isArray,\n      isFunction: isFunction,\n      isNumber: isNumber,\n      toVector: toVector\n    };\n    jStat._random_fn = Math.random;\n    jStat.setRandom = function setRandom(fn) {\n      if (typeof fn !== 'function') throw new TypeError('fn is not a function');\n      jStat._random_fn = fn;\n    };\n\n    // Easily extend the jStat object.\n    // TODO: is this seriously necessary?\n    jStat.extend = function extend(obj) {\n      var i, j;\n      if (arguments.length === 1) {\n        for (j in obj) jStat[j] = obj[j];\n        return this;\n      }\n      for (i = 1; i < arguments.length; i++) {\n        for (j in arguments[i]) obj[j] = arguments[i][j];\n      }\n      return obj;\n    };\n\n    // Returns the number of rows in the matrix.\n    jStat.rows = function rows(arr) {\n      return arr.length || 1;\n    };\n\n    // Returns the number of columns in the matrix.\n    jStat.cols = function cols(arr) {\n      return arr[0].length || 1;\n    };\n\n    // Returns the dimensions of the object { rows: i, cols: j }\n    jStat.dimensions = function dimensions(arr) {\n      return {\n        rows: jStat.rows(arr),\n        cols: jStat.cols(arr)\n      };\n    };\n\n    // Returns a specified row as a vector or return a sub matrix by pick some rows\n    jStat.row = function row(arr, index) {\n      if (isArray(index)) {\n        return index.map(function (i) {\n          return jStat.row(arr, i);\n        });\n      }\n      return arr[index];\n    };\n\n    // return row as array\n    // rowa([[1,2],[3,4]],0) -> [1,2]\n    jStat.rowa = function rowa(arr, i) {\n      return jStat.row(arr, i);\n    };\n\n    // Returns the specified column as a vector or return a sub matrix by pick some\n    // columns\n    jStat.col = function col(arr, index) {\n      if (isArray(index)) {\n        var submat = jStat.arange(arr.length).map(function () {\n          return new Array(index.length);\n        });\n        index.forEach(function (ind, i) {\n          jStat.arange(arr.length).forEach(function (j) {\n            submat[j][i] = arr[j][ind];\n          });\n        });\n        return submat;\n      }\n      var column = new Array(arr.length);\n      for (var i = 0; i < arr.length; i++) column[i] = [arr[i][index]];\n      return column;\n    };\n\n    // return column as array\n    // cola([[1,2],[3,4]],0) -> [1,3]\n    jStat.cola = function cola(arr, i) {\n      return jStat.col(arr, i).map(function (a) {\n        return a[0];\n      });\n    };\n\n    // Returns the diagonal of the matrix\n    jStat.diag = function diag(arr) {\n      var nrow = jStat.rows(arr);\n      var res = new Array(nrow);\n      for (var row = 0; row < nrow; row++) res[row] = [arr[row][row]];\n      return res;\n    };\n\n    // Returns the anti-diagonal of the matrix\n    jStat.antidiag = function antidiag(arr) {\n      var nrow = jStat.rows(arr) - 1;\n      var res = new Array(nrow);\n      for (var i = 0; nrow >= 0; nrow--, i++) res[i] = [arr[i][nrow]];\n      return res;\n    };\n\n    // Transpose a matrix or array.\n    jStat.transpose = function transpose(arr) {\n      var obj = [];\n      var objArr, rows, cols, j, i;\n\n      // Make sure arr is in matrix format.\n      if (!isArray(arr[0])) arr = [arr];\n      rows = arr.length;\n      cols = arr[0].length;\n      for (i = 0; i < cols; i++) {\n        objArr = new Array(rows);\n        for (j = 0; j < rows; j++) objArr[j] = arr[j][i];\n        obj.push(objArr);\n      }\n\n      // If obj is vector, return only single array.\n      return obj.length === 1 ? obj[0] : obj;\n    };\n\n    // Map a function to an array or array of arrays.\n    // \"toAlter\" is an internal variable.\n    jStat.map = function map(arr, func, toAlter) {\n      var row, nrow, ncol, res, col;\n      if (!isArray(arr[0])) arr = [arr];\n      nrow = arr.length;\n      ncol = arr[0].length;\n      res = toAlter ? arr : new Array(nrow);\n      for (row = 0; row < nrow; row++) {\n        // if the row doesn't exist, create it\n        if (!res[row]) res[row] = new Array(ncol);\n        for (col = 0; col < ncol; col++) res[row][col] = func(arr[row][col], row, col);\n      }\n      return res.length === 1 ? res[0] : res;\n    };\n\n    // Cumulatively combine the elements of an array or array of arrays using a function.\n    jStat.cumreduce = function cumreduce(arr, func, toAlter) {\n      var row, nrow, ncol, res, col;\n      if (!isArray(arr[0])) arr = [arr];\n      nrow = arr.length;\n      ncol = arr[0].length;\n      res = toAlter ? arr : new Array(nrow);\n      for (row = 0; row < nrow; row++) {\n        // if the row doesn't exist, create it\n        if (!res[row]) res[row] = new Array(ncol);\n        if (ncol > 0) res[row][0] = arr[row][0];\n        for (col = 1; col < ncol; col++) res[row][col] = func(res[row][col - 1], arr[row][col]);\n      }\n      return res.length === 1 ? res[0] : res;\n    };\n\n    // Destructively alter an array.\n    jStat.alter = function alter(arr, func) {\n      return jStat.map(arr, func, true);\n    };\n\n    // Generate a rows x cols matrix according to the supplied function.\n    jStat.create = function create(rows, cols, func) {\n      var res = new Array(rows);\n      var i, j;\n      if (isFunction(cols)) {\n        func = cols;\n        cols = rows;\n      }\n      for (i = 0; i < rows; i++) {\n        res[i] = new Array(cols);\n        for (j = 0; j < cols; j++) res[i][j] = func(i, j);\n      }\n      return res;\n    };\n    function retZero() {\n      return 0;\n    }\n\n    // Generate a rows x cols matrix of zeros.\n    jStat.zeros = function zeros(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, retZero);\n    };\n    function retOne() {\n      return 1;\n    }\n\n    // Generate a rows x cols matrix of ones.\n    jStat.ones = function ones(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, retOne);\n    };\n\n    // Generate a rows x cols matrix of uniformly random numbers.\n    jStat.rand = function rand(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, jStat._random_fn);\n    };\n    function retIdent(i, j) {\n      return i === j ? 1 : 0;\n    }\n\n    // Generate an identity matrix of size row x cols.\n    jStat.identity = function identity(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, retIdent);\n    };\n\n    // Tests whether a matrix is symmetric\n    jStat.symmetric = function symmetric(arr) {\n      var size = arr.length;\n      var row, col;\n      if (arr.length !== arr[0].length) return false;\n      for (row = 0; row < size; row++) {\n        for (col = 0; col < size; col++) if (arr[col][row] !== arr[row][col]) return false;\n      }\n      return true;\n    };\n\n    // Set all values to zero.\n    jStat.clear = function clear(arr) {\n      return jStat.alter(arr, retZero);\n    };\n\n    // Generate sequence.\n    jStat.seq = function seq(min, max, length, func) {\n      if (!isFunction(func)) func = false;\n      var arr = [];\n      var hival = calcRdx(min, max);\n      var step = (max * hival - min * hival) / ((length - 1) * hival);\n      var current = min;\n      var cnt;\n\n      // Current is assigned using a technique to compensate for IEEE error.\n      // TODO: Needs better implementation.\n      for (cnt = 0; current <= max && cnt < length; cnt++, current = (min * hival + step * hival * cnt) / hival) {\n        arr.push(func ? func(current, cnt) : current);\n      }\n      return arr;\n    };\n\n    // arange(5) -> [0,1,2,3,4]\n    // arange(1,5) -> [1,2,3,4]\n    // arange(5,1,-1) -> [5,4,3,2]\n    jStat.arange = function arange(start, end, step) {\n      var rl = [];\n      var i;\n      step = step || 1;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      }\n      if (start === end || step === 0) {\n        return [];\n      }\n      if (start < end && step < 0) {\n        return [];\n      }\n      if (start > end && step > 0) {\n        return [];\n      }\n      if (step > 0) {\n        for (i = start; i < end; i += step) {\n          rl.push(i);\n        }\n      } else {\n        for (i = start; i > end; i += step) {\n          rl.push(i);\n        }\n      }\n      return rl;\n    };\n\n    // A=[[1,2,3],[4,5,6],[7,8,9]]\n    // slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n    // slice(A,1,{start:1}) -> [5,6]\n    // as numpy code A[:2,1:]\n    jStat.slice = function () {\n      function _slice(list, start, end, step) {\n        // note it's not equal to range.map mode it's a bug\n        var i;\n        var rl = [];\n        var length = list.length;\n        if (start === undefined && end === undefined && step === undefined) {\n          return jStat.copy(list);\n        }\n        start = start || 0;\n        end = end || list.length;\n        start = start >= 0 ? start : length + start;\n        end = end >= 0 ? end : length + end;\n        step = step || 1;\n        if (start === end || step === 0) {\n          return [];\n        }\n        if (start < end && step < 0) {\n          return [];\n        }\n        if (start > end && step > 0) {\n          return [];\n        }\n        if (step > 0) {\n          for (i = start; i < end; i += step) {\n            rl.push(list[i]);\n          }\n        } else {\n          for (i = start; i > end; i += step) {\n            rl.push(list[i]);\n          }\n        }\n        return rl;\n      }\n      function slice(list, rcSlice) {\n        var colSlice, rowSlice;\n        rcSlice = rcSlice || {};\n        if (isNumber(rcSlice.row)) {\n          if (isNumber(rcSlice.col)) return list[rcSlice.row][rcSlice.col];\n          var row = jStat.rowa(list, rcSlice.row);\n          colSlice = rcSlice.col || {};\n          return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n        }\n        if (isNumber(rcSlice.col)) {\n          var col = jStat.cola(list, rcSlice.col);\n          rowSlice = rcSlice.row || {};\n          return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n        }\n        rowSlice = rcSlice.row || {};\n        colSlice = rcSlice.col || {};\n        var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n        return rows.map(function (row) {\n          return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n        });\n      }\n      return slice;\n    }();\n\n    // A=[[1,2,3],[4,5,6],[7,8,9]]\n    // sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n    // A=[[1,2,3],[4,0,0],[7,0,0]]\n    jStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n      var nl, ml;\n      if (isNumber(rcSlice.row)) {\n        if (isNumber(rcSlice.col)) return A[rcSlice.row][rcSlice.col] = B;\n        rcSlice.col = rcSlice.col || {};\n        rcSlice.col.start = rcSlice.col.start || 0;\n        rcSlice.col.end = rcSlice.col.end || A[0].length;\n        rcSlice.col.step = rcSlice.col.step || 1;\n        nl = jStat.arange(rcSlice.col.start, Math.min(A.length, rcSlice.col.end), rcSlice.col.step);\n        var m = rcSlice.row;\n        nl.forEach(function (n, i) {\n          A[m][n] = B[i];\n        });\n        return A;\n      }\n      if (isNumber(rcSlice.col)) {\n        rcSlice.row = rcSlice.row || {};\n        rcSlice.row.start = rcSlice.row.start || 0;\n        rcSlice.row.end = rcSlice.row.end || A.length;\n        rcSlice.row.step = rcSlice.row.step || 1;\n        ml = jStat.arange(rcSlice.row.start, Math.min(A[0].length, rcSlice.row.end), rcSlice.row.step);\n        var n = rcSlice.col;\n        ml.forEach(function (m, j) {\n          A[m][n] = B[j];\n        });\n        return A;\n      }\n      if (B[0].length === undefined) {\n        B = [B];\n      }\n      rcSlice.row.start = rcSlice.row.start || 0;\n      rcSlice.row.end = rcSlice.row.end || A.length;\n      rcSlice.row.step = rcSlice.row.step || 1;\n      rcSlice.col.start = rcSlice.col.start || 0;\n      rcSlice.col.end = rcSlice.col.end || A[0].length;\n      rcSlice.col.step = rcSlice.col.step || 1;\n      ml = jStat.arange(rcSlice.row.start, Math.min(A.length, rcSlice.row.end), rcSlice.row.step);\n      nl = jStat.arange(rcSlice.col.start, Math.min(A[0].length, rcSlice.col.end), rcSlice.col.step);\n      ml.forEach(function (m, i) {\n        nl.forEach(function (n, j) {\n          A[m][n] = B[i][j];\n        });\n      });\n      return A;\n    };\n\n    // [1,2,3] ->\n    // [[1,0,0],[0,2,0],[0,0,3]]\n    jStat.diagonal = function diagonal(diagArray) {\n      var mat = jStat.zeros(diagArray.length, diagArray.length);\n      diagArray.forEach(function (t, i) {\n        mat[i][i] = t;\n      });\n      return mat;\n    };\n\n    // return copy of A\n    jStat.copy = function copy(A) {\n      return A.map(function (row) {\n        if (isNumber(row)) return row;\n        return row.map(function (t) {\n          return t;\n        });\n      });\n    };\n\n    // TODO: Go over this entire implementation. Seems a tragic waste of resources\n    // doing all this work. Instead, and while ugly, use new Function() to generate\n    // a custom function for each static method.\n\n    // Quick reference.\n    var jProto = jStat.prototype;\n\n    // Default length.\n    jProto.length = 0;\n\n    // For internal use only.\n    // TODO: Check if they're actually used, and if they are then rename them\n    // to _*\n    jProto.push = Array.prototype.push;\n    jProto.sort = Array.prototype.sort;\n    jProto.splice = Array.prototype.splice;\n    jProto.slice = Array.prototype.slice;\n\n    // Return a clean array.\n    jProto.toArray = function toArray() {\n      return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n    };\n\n    // Map a function to a matrix or vector.\n    jProto.map = function map(func, toAlter) {\n      return jStat(jStat.map(this, func, toAlter));\n    };\n\n    // Cumulatively combine the elements of a matrix or vector using a function.\n    jProto.cumreduce = function cumreduce(func, toAlter) {\n      return jStat(jStat.cumreduce(this, func, toAlter));\n    };\n\n    // Destructively alter an array.\n    jProto.alter = function alter(func) {\n      jStat.alter(this, func);\n      return this;\n    };\n\n    // Extend prototype with methods that have no argument.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function (func) {\n          var self = this,\n            results;\n          // Check for callback.\n          if (func) {\n            setTimeout(function () {\n              func.call(self, jProto[passfunc].call(self));\n            });\n            return this;\n          }\n          results = jStat[passfunc](this);\n          return isArray(results) ? jStat(results) : results;\n        };\n      })(funcs[i]);\n    })('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n    // Extend prototype with methods that have one argument.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function (index, func) {\n          var self = this;\n          // check for callback\n          if (func) {\n            setTimeout(function () {\n              func.call(self, jProto[passfunc].call(self, index));\n            });\n            return this;\n          }\n          return jStat(jStat[passfunc](this, index));\n        };\n      })(funcs[i]);\n    })('row col'.split(' '));\n\n    // Extend prototype with simple shortcut methods.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function () {\n          return jStat(jStat[passfunc].apply(null, arguments));\n        };\n      })(funcs[i]);\n    })('create zeros ones rand identity'.split(' '));\n\n    // Exposing jStat.\n    return jStat;\n  }(Math);\n  (function (jStat, Math) {\n    var isFunction = jStat.utils.isFunction;\n\n    // Ascending functions for sort\n    function ascNum(a, b) {\n      return a - b;\n    }\n    function clip(arg, min, max) {\n      return Math.max(min, Math.min(arg, max));\n    }\n\n    // sum of an array\n    jStat.sum = function sum(arr) {\n      var sum = 0;\n      var i = arr.length;\n      while (--i >= 0) sum += arr[i];\n      return sum;\n    };\n\n    // sum squared\n    jStat.sumsqrd = function sumsqrd(arr) {\n      var sum = 0;\n      var i = arr.length;\n      while (--i >= 0) sum += arr[i] * arr[i];\n      return sum;\n    };\n\n    // sum of squared errors of prediction (SSE)\n    jStat.sumsqerr = function sumsqerr(arr) {\n      var mean = jStat.mean(arr);\n      var sum = 0;\n      var i = arr.length;\n      var tmp;\n      while (--i >= 0) {\n        tmp = arr[i] - mean;\n        sum += tmp * tmp;\n      }\n      return sum;\n    };\n\n    // sum of an array in each row\n    jStat.sumrow = function sumrow(arr) {\n      var sum = 0;\n      var i = arr.length;\n      while (--i >= 0) sum += arr[i];\n      return sum;\n    };\n\n    // product of an array\n    jStat.product = function product(arr) {\n      var prod = 1;\n      var i = arr.length;\n      while (--i >= 0) prod *= arr[i];\n      return prod;\n    };\n\n    // minimum value of an array\n    jStat.min = function min(arr) {\n      var low = arr[0];\n      var i = 0;\n      while (++i < arr.length) if (arr[i] < low) low = arr[i];\n      return low;\n    };\n\n    // maximum value of an array\n    jStat.max = function max(arr) {\n      var high = arr[0];\n      var i = 0;\n      while (++i < arr.length) if (arr[i] > high) high = arr[i];\n      return high;\n    };\n\n    // unique values of an array\n    jStat.unique = function unique(arr) {\n      var hash = {},\n        _arr = [];\n      for (var i = 0; i < arr.length; i++) {\n        if (!hash[arr[i]]) {\n          hash[arr[i]] = true;\n          _arr.push(arr[i]);\n        }\n      }\n      return _arr;\n    };\n\n    // mean value of an array\n    jStat.mean = function mean(arr) {\n      return jStat.sum(arr) / arr.length;\n    };\n\n    // mean squared error (MSE)\n    jStat.meansqerr = function meansqerr(arr) {\n      return jStat.sumsqerr(arr) / arr.length;\n    };\n\n    // geometric mean of an array\n    jStat.geomean = function geomean(arr) {\n      return Math.pow(jStat.product(arr), 1 / arr.length);\n    };\n\n    // median of an array\n    jStat.median = function median(arr) {\n      var arrlen = arr.length;\n      var _arr = arr.slice().sort(ascNum);\n      // check if array is even or odd, then return the appropriate\n      return !(arrlen & 1) ? (_arr[arrlen / 2 - 1] + _arr[arrlen / 2]) / 2 : _arr[arrlen / 2 | 0];\n    };\n\n    // cumulative sum of an array\n    jStat.cumsum = function cumsum(arr) {\n      return jStat.cumreduce(arr, function (a, b) {\n        return a + b;\n      });\n    };\n\n    // cumulative product of an array\n    jStat.cumprod = function cumprod(arr) {\n      return jStat.cumreduce(arr, function (a, b) {\n        return a * b;\n      });\n    };\n\n    // successive differences of a sequence\n    jStat.diff = function diff(arr) {\n      var diffs = [];\n      var arrLen = arr.length;\n      var i;\n      for (i = 1; i < arrLen; i++) diffs.push(arr[i] - arr[i - 1]);\n      return diffs;\n    };\n\n    // ranks of an array\n    jStat.rank = function (arr) {\n      var i;\n      var distinctNumbers = [];\n      var numberCounts = {};\n      for (i = 0; i < arr.length; i++) {\n        var number = arr[i];\n        if (numberCounts[number]) {\n          numberCounts[number]++;\n        } else {\n          numberCounts[number] = 1;\n          distinctNumbers.push(number);\n        }\n      }\n      var sortedDistinctNumbers = distinctNumbers.sort(ascNum);\n      var numberRanks = {};\n      var currentRank = 1;\n      for (i = 0; i < sortedDistinctNumbers.length; i++) {\n        var number = sortedDistinctNumbers[i];\n        var count = numberCounts[number];\n        var first = currentRank;\n        var last = currentRank + count - 1;\n        var rank = (first + last) / 2;\n        numberRanks[number] = rank;\n        currentRank += count;\n      }\n      return arr.map(function (number) {\n        return numberRanks[number];\n      });\n    };\n\n    // mode of an array\n    // if there are multiple modes of an array, return all of them\n    // is this the appropriate way of handling it?\n    jStat.mode = function mode(arr) {\n      var arrLen = arr.length;\n      var _arr = arr.slice().sort(ascNum);\n      var count = 1;\n      var maxCount = 0;\n      var numMaxCount = 0;\n      var mode_arr = [];\n      var i;\n      for (i = 0; i < arrLen; i++) {\n        if (_arr[i] === _arr[i + 1]) {\n          count++;\n        } else {\n          if (count > maxCount) {\n            mode_arr = [_arr[i]];\n            maxCount = count;\n            numMaxCount = 0;\n          }\n          // are there multiple max counts\n          else if (count === maxCount) {\n            mode_arr.push(_arr[i]);\n            numMaxCount++;\n          }\n          // resetting count for new value in array\n          count = 1;\n        }\n      }\n      return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n    };\n\n    // range of an array\n    jStat.range = function range(arr) {\n      return jStat.max(arr) - jStat.min(arr);\n    };\n\n    // variance of an array\n    // flag = true indicates sample instead of population\n    jStat.variance = function variance(arr, flag) {\n      return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n    };\n\n    // pooled variance of an array of arrays\n    jStat.pooledvariance = function pooledvariance(arr) {\n      var sumsqerr = arr.reduce(function (a, samples) {\n        return a + jStat.sumsqerr(samples);\n      }, 0);\n      var count = arr.reduce(function (a, samples) {\n        return a + samples.length;\n      }, 0);\n      return sumsqerr / (count - arr.length);\n    };\n\n    // deviation of an array\n    jStat.deviation = function (arr) {\n      var mean = jStat.mean(arr);\n      var arrlen = arr.length;\n      var dev = new Array(arrlen);\n      for (var i = 0; i < arrlen; i++) {\n        dev[i] = arr[i] - mean;\n      }\n      return dev;\n    };\n\n    // standard deviation of an array\n    // flag = true indicates sample instead of population\n    jStat.stdev = function stdev(arr, flag) {\n      return Math.sqrt(jStat.variance(arr, flag));\n    };\n\n    // pooled standard deviation of an array of arrays\n    jStat.pooledstdev = function pooledstdev(arr) {\n      return Math.sqrt(jStat.pooledvariance(arr));\n    };\n\n    // mean deviation (mean absolute deviation) of an array\n    jStat.meandev = function meandev(arr) {\n      var mean = jStat.mean(arr);\n      var a = [];\n      for (var i = arr.length - 1; i >= 0; i--) {\n        a.push(Math.abs(arr[i] - mean));\n      }\n      return jStat.mean(a);\n    };\n\n    // median deviation (median absolute deviation) of an array\n    jStat.meddev = function meddev(arr) {\n      var median = jStat.median(arr);\n      var a = [];\n      for (var i = arr.length - 1; i >= 0; i--) {\n        a.push(Math.abs(arr[i] - median));\n      }\n      return jStat.median(a);\n    };\n\n    // coefficient of variation\n    jStat.coeffvar = function coeffvar(arr) {\n      return jStat.stdev(arr) / jStat.mean(arr);\n    };\n\n    // quartiles of an array\n    jStat.quartiles = function quartiles(arr) {\n      var arrlen = arr.length;\n      var _arr = arr.slice().sort(ascNum);\n      return [_arr[Math.round(arrlen / 4) - 1], _arr[Math.round(arrlen / 2) - 1], _arr[Math.round(arrlen * 3 / 4) - 1]];\n    };\n\n    // Arbitary quantiles of an array. Direct port of the scipy.stats\n    // implementation by Pierre GF Gerard-Marchant.\n    jStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n      var sortedArray = arr.slice().sort(ascNum);\n      var quantileVals = [quantilesArray.length];\n      var n = arr.length;\n      var i, p, m, aleph, k, gamma;\n      if (typeof alphap === 'undefined') alphap = 3 / 8;\n      if (typeof betap === 'undefined') betap = 3 / 8;\n      for (i = 0; i < quantilesArray.length; i++) {\n        p = quantilesArray[i];\n        m = alphap + p * (1 - alphap - betap);\n        aleph = n * p + m;\n        k = Math.floor(clip(aleph, 1, n - 1));\n        gamma = clip(aleph - k, 0, 1);\n        quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n      }\n      return quantileVals;\n    };\n\n    // Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n    // Passing true for the exclusive parameter excludes both endpoints of the range.\n    jStat.percentile = function percentile(arr, k, exclusive) {\n      var _arr = arr.slice().sort(ascNum);\n      var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n      var index = parseInt(realIndex);\n      var frac = realIndex - index;\n      if (index + 1 < _arr.length) {\n        return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n      } else {\n        return _arr[index - 1];\n      }\n    };\n\n    // The percentile rank of score in a given array. Returns the percentage\n    // of all values in the input array that are less than (kind='strict') or\n    // less or equal than (kind='weak') score. Default is weak.\n    jStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n      var counter = 0;\n      var len = arr.length;\n      var strict = false;\n      var value, i;\n      if (kind === 'strict') strict = true;\n      for (i = 0; i < len; i++) {\n        value = arr[i];\n        if (strict && value < score || !strict && value <= score) {\n          counter++;\n        }\n      }\n      return counter / len;\n    };\n\n    // Histogram (bin count) data\n    jStat.histogram = function histogram(arr, binCnt) {\n      binCnt = binCnt || 4;\n      var first = jStat.min(arr);\n      var binWidth = (jStat.max(arr) - first) / binCnt;\n      var len = arr.length;\n      var bins = [];\n      var i;\n      for (i = 0; i < binCnt; i++) bins[i] = 0;\n      for (i = 0; i < len; i++) bins[Math.min(Math.floor((arr[i] - first) / binWidth), binCnt - 1)] += 1;\n      return bins;\n    };\n\n    // covariance of two arrays\n    jStat.covariance = function covariance(arr1, arr2) {\n      var u = jStat.mean(arr1);\n      var v = jStat.mean(arr2);\n      var arr1Len = arr1.length;\n      var sq_dev = new Array(arr1Len);\n      var i;\n      for (i = 0; i < arr1Len; i++) sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n      return jStat.sum(sq_dev) / (arr1Len - 1);\n    };\n\n    // (pearson's) population correlation coefficient, rho\n    jStat.corrcoeff = function corrcoeff(arr1, arr2) {\n      return jStat.covariance(arr1, arr2) / jStat.stdev(arr1, 1) / jStat.stdev(arr2, 1);\n    };\n\n    // (spearman's) rank correlation coefficient, sp\n    jStat.spearmancoeff = function (arr1, arr2) {\n      arr1 = jStat.rank(arr1);\n      arr2 = jStat.rank(arr2);\n      //return pearson's correlation of the ranks:\n      return jStat.corrcoeff(arr1, arr2);\n    };\n\n    // statistical standardized moments (general form of skew/kurt)\n    jStat.stanMoment = function stanMoment(arr, n) {\n      var mu = jStat.mean(arr);\n      var sigma = jStat.stdev(arr);\n      var len = arr.length;\n      var skewSum = 0;\n      for (var i = 0; i < len; i++) skewSum += Math.pow((arr[i] - mu) / sigma, n);\n      return skewSum / arr.length;\n    };\n\n    // (pearson's) moment coefficient of skewness\n    jStat.skewness = function skewness(arr) {\n      return jStat.stanMoment(arr, 3);\n    };\n\n    // (pearson's) (excess) kurtosis\n    jStat.kurtosis = function kurtosis(arr) {\n      return jStat.stanMoment(arr, 4) - 3;\n    };\n    var jProto = jStat.prototype;\n\n    // Extend jProto with method for calculating cumulative sums and products.\n    // This differs from the similar extension below as cumsum and cumprod should\n    // not be run again in the case fullbool === true.\n    // If a matrix is passed, automatically assume operation should be done on the\n    // columns.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        // If a matrix is passed, automatically assume operation should be done on\n        // the columns.\n        jProto[passfunc] = function (fullbool, func) {\n          var arr = [];\n          var i = 0;\n          var tmpthis = this;\n          // Assignment reassignation depending on how parameters were passed in.\n          if (isFunction(fullbool)) {\n            func = fullbool;\n            fullbool = false;\n          }\n          // Check if a callback was passed with the function.\n          if (func) {\n            setTimeout(function () {\n              func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n            });\n            return this;\n          }\n          // Check if matrix and run calculations.\n          if (this.length > 1) {\n            tmpthis = fullbool === true ? this : this.transpose();\n            for (; i < tmpthis.length; i++) arr[i] = jStat[passfunc](tmpthis[i]);\n            return arr;\n          }\n          // Pass fullbool if only vector, not a matrix. for variance and stdev.\n          return jStat[passfunc](this[0], fullbool);\n        };\n      })(funcs[i]);\n    })('cumsum cumprod'.split(' '));\n\n    // Extend jProto with methods which don't require arguments and work on columns.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        // If a matrix is passed, automatically assume operation should be done on\n        // the columns.\n        jProto[passfunc] = function (fullbool, func) {\n          var arr = [];\n          var i = 0;\n          var tmpthis = this;\n          // Assignment reassignation depending on how parameters were passed in.\n          if (isFunction(fullbool)) {\n            func = fullbool;\n            fullbool = false;\n          }\n          // Check if a callback was passed with the function.\n          if (func) {\n            setTimeout(function () {\n              func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n            });\n            return this;\n          }\n          // Check if matrix and run calculations.\n          if (this.length > 1) {\n            if (passfunc !== 'sumrow') tmpthis = fullbool === true ? this : this.transpose();\n            for (; i < tmpthis.length; i++) arr[i] = jStat[passfunc](tmpthis[i]);\n            return fullbool === true ? jStat[passfunc](jStat.utils.toVector(arr)) : arr;\n          }\n          // Pass fullbool if only vector, not a matrix. for variance and stdev.\n          return jStat[passfunc](this[0], fullbool);\n        };\n      })(funcs[i]);\n    })(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' + 'geomean median diff rank mode range variance deviation stdev meandev ' + 'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n    // Extend jProto with functions that take arguments. Operations on matrices are\n    // done on columns.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function () {\n          var arr = [];\n          var i = 0;\n          var tmpthis = this;\n          var args = Array.prototype.slice.call(arguments);\n          var callbackFunction;\n\n          // If the last argument is a function, we assume it's a callback; we\n          // strip the callback out and call the function again.\n          if (isFunction(args[args.length - 1])) {\n            callbackFunction = args[args.length - 1];\n            var argsToPass = args.slice(0, args.length - 1);\n            setTimeout(function () {\n              callbackFunction.call(tmpthis, jProto[passfunc].apply(tmpthis, argsToPass));\n            });\n            return this;\n\n            // Otherwise we curry the function args and call normally.\n          } else {\n            callbackFunction = undefined;\n            var curriedFunction = function curriedFunction(vector) {\n              return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n            };\n          }\n\n          // If this is a matrix, run column-by-column.\n          if (this.length > 1) {\n            tmpthis = tmpthis.transpose();\n            for (; i < tmpthis.length; i++) arr[i] = curriedFunction(tmpthis[i]);\n            return arr;\n          }\n\n          // Otherwise run on the vector.\n          return curriedFunction(this[0]);\n        };\n      })(funcs[i]);\n    })('quantiles percentileOfScore'.split(' '));\n  })(jStat, Math);\n  // Special functions //\n  (function (jStat, Math) {\n    // Log-gamma function\n    jStat.gammaln = function gammaln(x) {\n      var j = 0;\n      var cof = [76.18009172947146, -86.50532032941677, 24.01409824083091, -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5];\n      var ser = 1.000000000190015;\n      var xx, y, tmp;\n      tmp = (y = xx = x) + 5.5;\n      tmp -= (xx + 0.5) * Math.log(tmp);\n      for (; j < 6; j++) ser += cof[j] / ++y;\n      return Math.log(2.5066282746310005 * ser / xx) - tmp;\n    };\n\n    /*\n     * log-gamma function to support poisson distribution sampling. The\n     * algorithm comes from SPECFUN by Shanjie Zhang and Jianming Jin and their\n     * book \"Computation of Special Functions\", 1996, John Wiley & Sons, Inc.\n     */\n    jStat.loggam = function loggam(x) {\n      var x0, x2, xp, gl, gl0;\n      var k, n;\n      var a = [8.333333333333333e-02, -2.777777777777778e-03, 7.936507936507937e-04, -5.952380952380952e-04, 8.417508417508418e-04, -1.917526917526918e-03, 6.410256410256410e-03, -2.955065359477124e-02, 1.796443723688307e-01, -1.39243221690590e+00];\n      x0 = x;\n      n = 0;\n      if (x == 1.0 || x == 2.0) {\n        return 0.0;\n      }\n      if (x <= 7.0) {\n        n = Math.floor(7 - x);\n        x0 = x + n;\n      }\n      x2 = 1.0 / (x0 * x0);\n      xp = 2 * Math.PI;\n      gl0 = a[9];\n      for (k = 8; k >= 0; k--) {\n        gl0 *= x2;\n        gl0 += a[k];\n      }\n      gl = gl0 / x0 + 0.5 * Math.log(xp) + (x0 - 0.5) * Math.log(x0) - x0;\n      if (x <= 7.0) {\n        for (k = 1; k <= n; k++) {\n          gl -= Math.log(x0 - 1.0);\n          x0 -= 1.0;\n        }\n      }\n      return gl;\n    };\n\n    // gamma of x\n    jStat.gammafn = function gammafn(x) {\n      var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563, 629.3311553128184, 866.9662027904133, -31451.272968848367, -36144.413418691176, 66456.14382024054];\n      var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192, -3107.771671572311, 22538.118420980151, 4755.8462775278811, -134659.9598649693, -115132.2596755535];\n      var fact = false;\n      var n = 0;\n      var xden = 0;\n      var xnum = 0;\n      var y = x;\n      var i, z, yi, res;\n      if (x > 171.6243769536076) {\n        return Infinity;\n      }\n      if (y <= 0) {\n        res = y % 1 + 3.6e-16;\n        if (res) {\n          fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n          y = 1 - y;\n        } else {\n          return Infinity;\n        }\n      }\n      yi = y;\n      if (y < 1) {\n        z = y++;\n      } else {\n        z = (y -= n = (y | 0) - 1) - 1;\n      }\n      for (i = 0; i < 8; ++i) {\n        xnum = (xnum + p[i]) * z;\n        xden = xden * z + q[i];\n      }\n      res = xnum / xden + 1;\n      if (yi < y) {\n        res /= yi;\n      } else if (yi > y) {\n        for (i = 0; i < n; ++i) {\n          res *= y;\n          y++;\n        }\n      }\n      if (fact) {\n        res = fact / res;\n      }\n      return res;\n    };\n\n    // lower incomplete gamma function, which is usually typeset with a\n    // lower-case greek gamma as the function symbol\n    jStat.gammap = function gammap(a, x) {\n      return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n    };\n\n    // The lower regularized incomplete gamma function, usually written P(a,x)\n    jStat.lowRegGamma = function lowRegGamma(a, x) {\n      var aln = jStat.gammaln(a);\n      var ap = a;\n      var sum = 1 / a;\n      var del = sum;\n      var b = x + 1 - a;\n      var c = 1 / 1.0e-30;\n      var d = 1 / b;\n      var h = d;\n      var i = 1;\n      // calculate maximum number of itterations required for a\n      var ITMAX = -~(Math.log(a >= 1 ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n      var an;\n      if (x < 0 || a <= 0) {\n        return NaN;\n      } else if (x < a + 1) {\n        for (; i <= ITMAX; i++) {\n          sum += del *= x / ++ap;\n        }\n        return sum * Math.exp(-x + a * Math.log(x) - aln);\n      }\n      for (; i <= ITMAX; i++) {\n        an = -i * (i - a);\n        b += 2;\n        d = an * d + b;\n        c = b + an / c;\n        d = 1 / d;\n        h *= d * c;\n      }\n      return 1 - h * Math.exp(-x + a * Math.log(x) - aln);\n    };\n\n    // natural log factorial of n\n    jStat.factorialln = function factorialln(n) {\n      return n < 0 ? NaN : jStat.gammaln(n + 1);\n    };\n\n    // factorial of n\n    jStat.factorial = function factorial(n) {\n      return n < 0 ? NaN : jStat.gammafn(n + 1);\n    };\n\n    // combinations of n, m\n    jStat.combination = function combination(n, m) {\n      // make sure n or m don't exceed the upper limit of usable values\n      return n > 170 || m > 170 ? Math.exp(jStat.combinationln(n, m)) : jStat.factorial(n) / jStat.factorial(m) / jStat.factorial(n - m);\n    };\n    jStat.combinationln = function combinationln(n, m) {\n      return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n    };\n\n    // permutations of n, m\n    jStat.permutation = function permutation(n, m) {\n      return jStat.factorial(n) / jStat.factorial(n - m);\n    };\n\n    // beta function\n    jStat.betafn = function betafn(x, y) {\n      // ensure arguments are positive\n      if (x <= 0 || y <= 0) return undefined;\n      // make sure x + y doesn't exceed the upper limit of usable values\n      return x + y > 170 ? Math.exp(jStat.betaln(x, y)) : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n    };\n\n    // natural logarithm of beta function\n    jStat.betaln = function betaln(x, y) {\n      return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n    };\n\n    // Evaluates the continued fraction for incomplete beta function by modified\n    // Lentz's method.\n    jStat.betacf = function betacf(x, a, b) {\n      var fpmin = 1e-30;\n      var m = 1;\n      var qab = a + b;\n      var qap = a + 1;\n      var qam = a - 1;\n      var c = 1;\n      var d = 1 - qab * x / qap;\n      var m2, aa, del, h;\n\n      // These q's will be used in factors that occur in the coefficients\n      if (Math.abs(d) < fpmin) d = fpmin;\n      d = 1 / d;\n      h = d;\n      for (; m <= 100; m++) {\n        m2 = 2 * m;\n        aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n        // One step (the even one) of the recurrence\n        d = 1 + aa * d;\n        if (Math.abs(d) < fpmin) d = fpmin;\n        c = 1 + aa / c;\n        if (Math.abs(c) < fpmin) c = fpmin;\n        d = 1 / d;\n        h *= d * c;\n        aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n        // Next step of the recurrence (the odd one)\n        d = 1 + aa * d;\n        if (Math.abs(d) < fpmin) d = fpmin;\n        c = 1 + aa / c;\n        if (Math.abs(c) < fpmin) c = fpmin;\n        d = 1 / d;\n        del = d * c;\n        h *= del;\n        if (Math.abs(del - 1.0) < 3e-7) break;\n      }\n      return h;\n    };\n\n    // Returns the inverse of the lower regularized inomplete gamma function\n    jStat.gammapinv = function gammapinv(p, a) {\n      var j = 0;\n      var a1 = a - 1;\n      var EPS = 1e-8;\n      var gln = jStat.gammaln(a);\n      var x, err, t, u, pp, lna1, afac;\n      if (p >= 1) return Math.max(100, a + 100 * Math.sqrt(a));\n      if (p <= 0) return 0;\n      if (a > 1) {\n        lna1 = Math.log(a1);\n        afac = Math.exp(a1 * (lna1 - 1) - gln);\n        pp = p < 0.5 ? p : 1 - p;\n        t = Math.sqrt(-2 * Math.log(pp));\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n        if (p < 0.5) x = -x;\n        x = Math.max(1e-3, a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n      } else {\n        t = 1 - a * (0.253 + a * 0.12);\n        if (p < t) x = Math.pow(p / t, 1 / a);else x = 1 - Math.log(1 - (p - t) / (1 - t));\n      }\n      for (; j < 12; j++) {\n        if (x <= 0) return 0;\n        err = jStat.lowRegGamma(a, x) - p;\n        if (a > 1) t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));else t = Math.exp(-x + a1 * Math.log(x) - gln);\n        u = err / t;\n        x -= t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1)));\n        if (x <= 0) x = 0.5 * (x + t);\n        if (Math.abs(t) < EPS * x) break;\n      }\n      return x;\n    };\n\n    // Returns the error function erf(x)\n    jStat.erf = function erf(x) {\n      var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2, -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4, 4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6, 1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8, 6.529054439e-9, 5.059343495e-9, -9.91364156e-10, -2.27365122e-10, 9.6467911e-11, 2.394038e-12, -6.886027e-12, 8.94487e-13, 3.13092e-13, -1.12708e-13, 3.81e-16, 7.106e-15, -1.523e-15, -9.4e-17, 1.21e-16, -2.8e-17];\n      var j = cof.length - 1;\n      var isneg = false;\n      var d = 0;\n      var dd = 0;\n      var t, ty, tmp, res;\n      if (x < 0) {\n        x = -x;\n        isneg = true;\n      }\n      t = 2 / (2 + x);\n      ty = 4 * t - 2;\n      for (; j > 0; j--) {\n        tmp = d;\n        d = ty * d - dd + cof[j];\n        dd = tmp;\n      }\n      res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n      return isneg ? res - 1 : 1 - res;\n    };\n\n    // Returns the complmentary error function erfc(x)\n    jStat.erfc = function erfc(x) {\n      return 1 - jStat.erf(x);\n    };\n\n    // Returns the inverse of the complementary error function\n    jStat.erfcinv = function erfcinv(p) {\n      var j = 0;\n      var x, err, t, pp;\n      if (p >= 2) return -100;\n      if (p <= 0) return 100;\n      pp = p < 1 ? p : 2 - p;\n      t = Math.sqrt(-2 * Math.log(pp / 2));\n      x = -0.70711 * ((2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t);\n      for (; j < 2; j++) {\n        err = jStat.erfc(x) - pp;\n        x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n      }\n      return p < 1 ? x : -x;\n    };\n\n    // Returns the inverse of the incomplete beta function\n    jStat.ibetainv = function ibetainv(p, a, b) {\n      var EPS = 1e-8;\n      var a1 = a - 1;\n      var b1 = b - 1;\n      var j = 0;\n      var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n      if (p <= 0) return 0;\n      if (p >= 1) return 1;\n      if (a >= 1 && b >= 1) {\n        pp = p < 0.5 ? p : 1 - p;\n        t = Math.sqrt(-2 * Math.log(pp));\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n        if (p < 0.5) x = -x;\n        al = (x * x - 3) / 6;\n        h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\n        w = x * Math.sqrt(al + h) / h - (1 / (2 * b - 1) - 1 / (2 * a - 1)) * (al + 5 / 6 - 2 / (3 * h));\n        x = a / (a + b * Math.exp(2 * w));\n      } else {\n        lna = Math.log(a / (a + b));\n        lnb = Math.log(b / (a + b));\n        t = Math.exp(a * lna) / a;\n        u = Math.exp(b * lnb) / b;\n        w = t + u;\n        if (p < t / w) x = Math.pow(a * w * p, 1 / a);else x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n      }\n      afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n      for (; j < 10; j++) {\n        if (x === 0 || x === 1) return x;\n        err = jStat.ibeta(x, a, b) - p;\n        t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n        u = err / t;\n        x -= t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x))));\n        if (x <= 0) x = 0.5 * (x + t);\n        if (x >= 1) x = 0.5 * (x + t + 1);\n        if (Math.abs(t) < EPS * x && j > 0) break;\n      }\n      return x;\n    };\n\n    // Returns the incomplete beta function I_x(a,b)\n    jStat.ibeta = function ibeta(x, a, b) {\n      // Factors in front of the continued fraction.\n      var bt = x === 0 || x === 1 ? 0 : Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) - jStat.gammaln(b) + a * Math.log(x) + b * Math.log(1 - x));\n      if (x < 0 || x > 1) return false;\n      if (x < (a + 1) / (a + b + 2))\n        // Use continued fraction directly.\n        return bt * jStat.betacf(x, a, b) / a;\n      // else use continued fraction after making the symmetry transformation.\n      return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n    };\n\n    // Returns a normal deviate (mu=0, sigma=1).\n    // If n and m are specified it returns a object of normal deviates.\n    jStat.randn = function randn(n, m) {\n      var u, v, x, y, q;\n      if (!m) m = n;\n      if (n) return jStat.create(n, m, function () {\n        return jStat.randn();\n      });\n      do {\n        u = jStat._random_fn();\n        v = 1.7156 * (jStat._random_fn() - 0.5);\n        x = u - 0.449871;\n        y = Math.abs(v) + 0.386595;\n        q = x * x + y * (0.19600 * y - 0.25472 * x);\n      } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n      return v / u;\n    };\n\n    // Returns a gamma deviate by the method of Marsaglia and Tsang.\n    jStat.randg = function randg(shape, n, m) {\n      var oalph = shape;\n      var a1, a2, u, v, x, mat;\n      if (!m) m = n;\n      if (!shape) shape = 1;\n      if (n) {\n        mat = jStat.zeros(n, m);\n        mat.alter(function () {\n          return jStat.randg(shape);\n        });\n        return mat;\n      }\n      if (shape < 1) shape += 1;\n      a1 = shape - 1 / 3;\n      a2 = 1 / Math.sqrt(9 * a1);\n      do {\n        do {\n          x = jStat.randn();\n          v = 1 + a2 * x;\n        } while (v <= 0);\n        v = v * v * v;\n        u = jStat._random_fn();\n      } while (u > 1 - 0.331 * Math.pow(x, 4) && Math.log(u) > 0.5 * x * x + a1 * (1 - v + Math.log(v)));\n      // alpha > 1\n      if (shape == oalph) return a1 * v;\n      // alpha < 1\n      do {\n        u = jStat._random_fn();\n      } while (u === 0);\n      return Math.pow(u, 1 / oalph) * a1 * v;\n    };\n\n    // making use of static methods on the instance\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jStat.fn[passfunc] = function () {\n          return jStat(jStat.map(this, function (value) {\n            return jStat[passfunc](value);\n          }));\n        };\n      })(funcs[i]);\n    })('gammaln gammafn factorial factorialln'.split(' '));\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jStat.fn[passfunc] = function () {\n          return jStat(jStat[passfunc].apply(null, arguments));\n        };\n      })(funcs[i]);\n    })('randn'.split(' '));\n  })(jStat, Math);\n  (function (jStat, Math) {\n    // generate all distribution instance methods\n    (function (list) {\n      for (var i = 0; i < list.length; i++) (function (func) {\n        // distribution instance method\n        jStat[func] = function f(a, b, c) {\n          if (!(this instanceof f)) return new f(a, b, c);\n          this._a = a;\n          this._b = b;\n          this._c = c;\n          return this;\n        };\n        // distribution method to be used on a jStat instance\n        jStat.fn[func] = function (a, b, c) {\n          var newthis = jStat[func](a, b, c);\n          newthis.data = this;\n          return newthis;\n        };\n        // sample instance method\n        jStat[func].prototype.sample = function (arr) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (arr) return jStat.alter(arr, function () {\n            return jStat[func].sample(a, b, c);\n          });else return jStat[func].sample(a, b, c);\n        };\n        // generate the pdf, cdf and inv instance methods\n        (function (vals) {\n          for (var i = 0; i < vals.length; i++) (function (fnfunc) {\n            jStat[func].prototype[fnfunc] = function (x) {\n              var a = this._a;\n              var b = this._b;\n              var c = this._c;\n              if (!x && x !== 0) x = this.data;\n              if (typeof x !== 'number') {\n                return jStat.fn.map.call(x, function (x) {\n                  return jStat[func][fnfunc](x, a, b, c);\n                });\n              }\n              return jStat[func][fnfunc](x, a, b, c);\n            };\n          })(vals[i]);\n        })('pdf cdf inv'.split(' '));\n        // generate the mean, median, mode and variance instance methods\n        (function (vals) {\n          for (var i = 0; i < vals.length; i++) (function (fnfunc) {\n            jStat[func].prototype[fnfunc] = function () {\n              return jStat[func][fnfunc](this._a, this._b, this._c);\n            };\n          })(vals[i]);\n        })('mean median mode variance'.split(' '));\n      })(list[i]);\n    })(('beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' + 'laplace lognormal noncentralt normal pareto studentt weibull uniform ' + 'binomial negbin hypgeom poisson triangular tukey arcsine').split(' '));\n\n    // extend beta function with static methods\n    jStat.extend(jStat.beta, {\n      pdf: function pdf(x, alpha, beta) {\n        // PDF is zero outside the support\n        if (x > 1 || x < 0) return 0;\n        // PDF is one for the uniform case\n        if (alpha == 1 && beta == 1) return 1;\n        if (alpha < 512 && beta < 512) {\n          return Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1) / jStat.betafn(alpha, beta);\n        } else {\n          return Math.exp((alpha - 1) * Math.log(x) + (beta - 1) * Math.log(1 - x) - jStat.betaln(alpha, beta));\n        }\n      },\n      cdf: function cdf(x, alpha, beta) {\n        return x > 1 || x < 0 ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n      },\n      inv: function inv(x, alpha, beta) {\n        return jStat.ibetainv(x, alpha, beta);\n      },\n      mean: function mean(alpha, beta) {\n        return alpha / (alpha + beta);\n      },\n      median: function median(alpha, beta) {\n        return jStat.ibetainv(0.5, alpha, beta);\n      },\n      mode: function mode(alpha, beta) {\n        return (alpha - 1) / (alpha + beta - 2);\n      },\n      // return a random sample\n      sample: function sample(alpha, beta) {\n        var u = jStat.randg(alpha);\n        return u / (u + jStat.randg(beta));\n      },\n      variance: function variance(alpha, beta) {\n        return alpha * beta / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n      }\n    });\n\n    // extend F function with static methods\n    jStat.extend(jStat.centralF, {\n      // This implementation of the pdf function avoids float overflow\n      // See the way that R calculates this value:\n      // https://svn.r-project.org/R/trunk/src/nmath/df.c\n      pdf: function pdf(x, df1, df2) {\n        var p, q, f;\n        if (x < 0) return 0;\n        if (df1 <= 2) {\n          if (x === 0 && df1 < 2) {\n            return Infinity;\n          }\n          if (x === 0 && df1 === 2) {\n            return 1;\n          }\n          return 1 / jStat.betafn(df1 / 2, df2 / 2) * Math.pow(df1 / df2, df1 / 2) * Math.pow(x, df1 / 2 - 1) * Math.pow(1 + df1 / df2 * x, -(df1 + df2) / 2);\n        }\n        p = df1 * x / (df2 + x * df1);\n        q = df2 / (df2 + x * df1);\n        f = df1 * q / 2.0;\n        return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n      },\n      cdf: function cdf(x, df1, df2) {\n        if (x < 0) return 0;\n        return jStat.ibeta(df1 * x / (df1 * x + df2), df1 / 2, df2 / 2);\n      },\n      inv: function inv(x, df1, df2) {\n        return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n      },\n      mean: function mean(df1, df2) {\n        return df2 > 2 ? df2 / (df2 - 2) : undefined;\n      },\n      mode: function mode(df1, df2) {\n        return df1 > 2 ? df2 * (df1 - 2) / (df1 * (df2 + 2)) : undefined;\n      },\n      // return a random sample\n      sample: function sample(df1, df2) {\n        var x1 = jStat.randg(df1 / 2) * 2;\n        var x2 = jStat.randg(df2 / 2) * 2;\n        return x1 / df1 / (x2 / df2);\n      },\n      variance: function variance(df1, df2) {\n        if (df2 <= 4) return undefined;\n        return 2 * df2 * df2 * (df1 + df2 - 2) / (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n      }\n    });\n\n    // extend cauchy function with static methods\n    jStat.extend(jStat.cauchy, {\n      pdf: function pdf(x, local, scale) {\n        if (scale < 0) {\n          return 0;\n        }\n        return scale / (Math.pow(x - local, 2) + Math.pow(scale, 2)) / Math.PI;\n      },\n      cdf: function cdf(x, local, scale) {\n        return Math.atan((x - local) / scale) / Math.PI + 0.5;\n      },\n      inv: function (p, local, scale) {\n        return local + scale * Math.tan(Math.PI * (p - 0.5));\n      },\n      median: function median(local /*, scale*/) {\n        return local;\n      },\n      mode: function mode(local /*, scale*/) {\n        return local;\n      },\n      sample: function sample(local, scale) {\n        return jStat.randn() * Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n      }\n    });\n\n    // extend chisquare function with static methods\n    jStat.extend(jStat.chisquare, {\n      pdf: function pdf(x, dof) {\n        if (x < 0) return 0;\n        return x === 0 && dof === 2 ? 0.5 : Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - dof / 2 * Math.log(2) - jStat.gammaln(dof / 2));\n      },\n      cdf: function cdf(x, dof) {\n        if (x < 0) return 0;\n        return jStat.lowRegGamma(dof / 2, x / 2);\n      },\n      inv: function (p, dof) {\n        return 2 * jStat.gammapinv(p, 0.5 * dof);\n      },\n      mean: function (dof) {\n        return dof;\n      },\n      // TODO: this is an approximation (is there a better way?)\n      median: function median(dof) {\n        return dof * Math.pow(1 - 2 / (9 * dof), 3);\n      },\n      mode: function mode(dof) {\n        return dof - 2 > 0 ? dof - 2 : 0;\n      },\n      sample: function sample(dof) {\n        return jStat.randg(dof / 2) * 2;\n      },\n      variance: function variance(dof) {\n        return 2 * dof;\n      }\n    });\n\n    // extend exponential function with static methods\n    jStat.extend(jStat.exponential, {\n      pdf: function pdf(x, rate) {\n        return x < 0 ? 0 : rate * Math.exp(-rate * x);\n      },\n      cdf: function cdf(x, rate) {\n        return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n      },\n      inv: function (p, rate) {\n        return -Math.log(1 - p) / rate;\n      },\n      mean: function (rate) {\n        return 1 / rate;\n      },\n      median: function (rate) {\n        return 1 / rate * Math.log(2);\n      },\n      mode: function mode( /*rate*/\n      ) {\n        return 0;\n      },\n      sample: function sample(rate) {\n        return -1 / rate * Math.log(jStat._random_fn());\n      },\n      variance: function (rate) {\n        return Math.pow(rate, -2);\n      }\n    });\n\n    // extend gamma function with static methods\n    jStat.extend(jStat.gamma, {\n      pdf: function pdf(x, shape, scale) {\n        if (x < 0) return 0;\n        return x === 0 && shape === 1 ? 1 / scale : Math.exp((shape - 1) * Math.log(x) - x / scale - jStat.gammaln(shape) - shape * Math.log(scale));\n      },\n      cdf: function cdf(x, shape, scale) {\n        if (x < 0) return 0;\n        return jStat.lowRegGamma(shape, x / scale);\n      },\n      inv: function (p, shape, scale) {\n        return jStat.gammapinv(p, shape) * scale;\n      },\n      mean: function (shape, scale) {\n        return shape * scale;\n      },\n      mode: function mode(shape, scale) {\n        if (shape > 1) return (shape - 1) * scale;\n        return undefined;\n      },\n      sample: function sample(shape, scale) {\n        return jStat.randg(shape) * scale;\n      },\n      variance: function variance(shape, scale) {\n        return shape * scale * scale;\n      }\n    });\n\n    // extend inverse gamma function with static methods\n    jStat.extend(jStat.invgamma, {\n      pdf: function pdf(x, shape, scale) {\n        if (x <= 0) return 0;\n        return Math.exp(-(shape + 1) * Math.log(x) - scale / x - jStat.gammaln(shape) + shape * Math.log(scale));\n      },\n      cdf: function cdf(x, shape, scale) {\n        if (x <= 0) return 0;\n        return 1 - jStat.lowRegGamma(shape, scale / x);\n      },\n      inv: function (p, shape, scale) {\n        return scale / jStat.gammapinv(1 - p, shape);\n      },\n      mean: function (shape, scale) {\n        return shape > 1 ? scale / (shape - 1) : undefined;\n      },\n      mode: function mode(shape, scale) {\n        return scale / (shape + 1);\n      },\n      sample: function sample(shape, scale) {\n        return scale / jStat.randg(shape);\n      },\n      variance: function variance(shape, scale) {\n        if (shape <= 2) return undefined;\n        return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n      }\n    });\n\n    // extend kumaraswamy function with static methods\n    jStat.extend(jStat.kumaraswamy, {\n      pdf: function pdf(x, alpha, beta) {\n        if (x === 0 && alpha === 1) return beta;else if (x === 1 && beta === 1) return alpha;\n        return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) * Math.log(x) + (beta - 1) * Math.log(1 - Math.pow(x, alpha)));\n      },\n      cdf: function cdf(x, alpha, beta) {\n        if (x < 0) return 0;else if (x > 1) return 1;\n        return 1 - Math.pow(1 - Math.pow(x, alpha), beta);\n      },\n      inv: function inv(p, alpha, beta) {\n        return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n      },\n      mean: function (alpha, beta) {\n        return beta * jStat.gammafn(1 + 1 / alpha) * jStat.gammafn(beta) / jStat.gammafn(1 + 1 / alpha + beta);\n      },\n      median: function median(alpha, beta) {\n        return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n      },\n      mode: function mode(alpha, beta) {\n        if (!(alpha >= 1 && beta >= 1 && alpha !== 1 && beta !== 1)) return undefined;\n        return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n      },\n      variance: function variance( /*alpha, beta*/\n      ) {\n        throw new Error('variance not yet implemented');\n        // TODO: complete this\n      }\n    });\n\n    // extend lognormal function with static methods\n    jStat.extend(jStat.lognormal, {\n      pdf: function pdf(x, mu, sigma) {\n        if (x <= 0) return 0;\n        return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) - Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) / (2 * sigma * sigma));\n      },\n      cdf: function cdf(x, mu, sigma) {\n        if (x < 0) return 0;\n        return 0.5 + 0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma));\n      },\n      inv: function (p, mu, sigma) {\n        return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n      },\n      mean: function mean(mu, sigma) {\n        return Math.exp(mu + sigma * sigma / 2);\n      },\n      median: function median(mu /*, sigma*/) {\n        return Math.exp(mu);\n      },\n      mode: function mode(mu, sigma) {\n        return Math.exp(mu - sigma * sigma);\n      },\n      sample: function sample(mu, sigma) {\n        return Math.exp(jStat.randn() * sigma + mu);\n      },\n      variance: function variance(mu, sigma) {\n        return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n      }\n    });\n\n    // extend noncentralt function with static methods\n    jStat.extend(jStat.noncentralt, {\n      pdf: function pdf(x, dof, ncp) {\n        var tol = 1e-14;\n        if (Math.abs(ncp) < tol)\n          // ncp approx 0; use student-t\n          return jStat.studentt.pdf(x, dof);\n        if (Math.abs(x) < tol) {\n          // different formula for x == 0\n          return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 - 0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n        }\n\n        // formula for x != 0\n        return dof / x * (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof + 2, ncp) - jStat.noncentralt.cdf(x, dof, ncp));\n      },\n      cdf: function cdf(x, dof, ncp) {\n        var tol = 1e-14;\n        var min_iterations = 200;\n        if (Math.abs(ncp) < tol)\n          // ncp approx 0; use student-t\n          return jStat.studentt.cdf(x, dof);\n\n        // turn negative x into positive and flip result afterwards\n        var flip = false;\n        if (x < 0) {\n          flip = true;\n          ncp = -ncp;\n        }\n        var prob = jStat.normal.cdf(-ncp, 0, 1);\n        var value = tol + 1;\n        // use value at last two steps to determine convergence\n        var lastvalue = value;\n        var y = x * x / (x * x + dof);\n        var j = 0;\n        var p = Math.exp(-ncp * ncp / 2);\n        var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) - jStat.gammaln(3 / 2)) * ncp;\n        while (j < min_iterations || lastvalue > tol || value > tol) {\n          lastvalue = value;\n          if (j > 0) {\n            p *= ncp * ncp / (2 * j);\n            q *= ncp * ncp / (2 * (j + 1 / 2));\n          }\n          value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) + q * jStat.beta.cdf(y, j + 1, dof / 2);\n          prob += 0.5 * value;\n          j++;\n        }\n        return flip ? 1 - prob : prob;\n      }\n    });\n\n    // extend normal function with static methods\n    jStat.extend(jStat.normal, {\n      pdf: function pdf(x, mean, std) {\n        return Math.exp(-0.5 * Math.log(2 * Math.PI) - Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n      },\n      cdf: function cdf(x, mean, std) {\n        return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n      },\n      inv: function (p, mean, std) {\n        return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n      },\n      mean: function (mean /*, std*/) {\n        return mean;\n      },\n      median: function median(mean /*, std*/) {\n        return mean;\n      },\n      mode: function (mean /*, std*/) {\n        return mean;\n      },\n      sample: function sample(mean, std) {\n        return jStat.randn() * std + mean;\n      },\n      variance: function (mean, std) {\n        return std * std;\n      }\n    });\n\n    // extend pareto function with static methods\n    jStat.extend(jStat.pareto, {\n      pdf: function pdf(x, scale, shape) {\n        if (x < scale) return 0;\n        return shape * Math.pow(scale, shape) / Math.pow(x, shape + 1);\n      },\n      cdf: function cdf(x, scale, shape) {\n        if (x < scale) return 0;\n        return 1 - Math.pow(scale / x, shape);\n      },\n      inv: function inv(p, scale, shape) {\n        return scale / Math.pow(1 - p, 1 / shape);\n      },\n      mean: function mean(scale, shape) {\n        if (shape <= 1) return undefined;\n        return shape * Math.pow(scale, shape) / (shape - 1);\n      },\n      median: function median(scale, shape) {\n        return scale * (shape * Math.SQRT2);\n      },\n      mode: function mode(scale /*, shape*/) {\n        return scale;\n      },\n      variance: function (scale, shape) {\n        if (shape <= 2) return undefined;\n        return scale * scale * shape / (Math.pow(shape - 1, 2) * (shape - 2));\n      }\n    });\n\n    // extend studentt function with static methods\n    jStat.extend(jStat.studentt, {\n      pdf: function pdf(x, dof) {\n        dof = dof > 1e100 ? 1e100 : dof;\n        return 1 / (Math.sqrt(dof) * jStat.betafn(0.5, dof / 2)) * Math.pow(1 + x * x / dof, -((dof + 1) / 2));\n      },\n      cdf: function cdf(x, dof) {\n        var dof2 = dof / 2;\n        return jStat.ibeta((x + Math.sqrt(x * x + dof)) / (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n      },\n      inv: function (p, dof) {\n        var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n        x = Math.sqrt(dof * (1 - x) / x);\n        return p > 0.5 ? x : -x;\n      },\n      mean: function mean(dof) {\n        return dof > 1 ? 0 : undefined;\n      },\n      median: function median( /*dof*/\n      ) {\n        return 0;\n      },\n      mode: function mode( /*dof*/\n      ) {\n        return 0;\n      },\n      sample: function sample(dof) {\n        return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n      },\n      variance: function variance(dof) {\n        return dof > 2 ? dof / (dof - 2) : dof > 1 ? Infinity : undefined;\n      }\n    });\n\n    // extend weibull function with static methods\n    jStat.extend(jStat.weibull, {\n      pdf: function pdf(x, scale, shape) {\n        if (x < 0 || scale < 0 || shape < 0) return 0;\n        return shape / scale * Math.pow(x / scale, shape - 1) * Math.exp(-Math.pow(x / scale, shape));\n      },\n      cdf: function cdf(x, scale, shape) {\n        return x < 0 ? 0 : 1 - Math.exp(-Math.pow(x / scale, shape));\n      },\n      inv: function (p, scale, shape) {\n        return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n      },\n      mean: function (scale, shape) {\n        return scale * jStat.gammafn(1 + 1 / shape);\n      },\n      median: function median(scale, shape) {\n        return scale * Math.pow(Math.log(2), 1 / shape);\n      },\n      mode: function mode(scale, shape) {\n        if (shape <= 1) return 0;\n        return scale * Math.pow((shape - 1) / shape, 1 / shape);\n      },\n      sample: function sample(scale, shape) {\n        return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n      },\n      variance: function variance(scale, shape) {\n        return scale * scale * jStat.gammafn(1 + 2 / shape) - Math.pow(jStat.weibull.mean(scale, shape), 2);\n      }\n    });\n\n    // extend uniform function with static methods\n    jStat.extend(jStat.uniform, {\n      pdf: function pdf(x, a, b) {\n        return x < a || x > b ? 0 : 1 / (b - a);\n      },\n      cdf: function cdf(x, a, b) {\n        if (x < a) return 0;else if (x < b) return (x - a) / (b - a);\n        return 1;\n      },\n      inv: function (p, a, b) {\n        return a + p * (b - a);\n      },\n      mean: function mean(a, b) {\n        return 0.5 * (a + b);\n      },\n      median: function median(a, b) {\n        return jStat.mean(a, b);\n      },\n      mode: function mode( /*a, b*/\n      ) {\n        throw new Error('mode is not yet implemented');\n      },\n      sample: function sample(a, b) {\n        return a / 2 + b / 2 + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n      },\n      variance: function variance(a, b) {\n        return Math.pow(b - a, 2) / 12;\n      }\n    });\n\n    // Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\n    function betinc(x, a, b, eps) {\n      var a0 = 0;\n      var b0 = 1;\n      var a1 = 1;\n      var b1 = 1;\n      var m9 = 0;\n      var a2 = 0;\n      var c9;\n      while (Math.abs((a1 - a2) / a1) > eps) {\n        a2 = a1;\n        c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n        a0 = a1 + c9 * a0;\n        b0 = b1 + c9 * b0;\n        m9 = m9 + 1;\n        c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n        a1 = a0 + c9 * a1;\n        b1 = b0 + c9 * b1;\n        a0 = a0 / b1;\n        b0 = b0 / b1;\n        a1 = a1 / b1;\n        b1 = 1;\n      }\n      return a1 / a;\n    }\n\n    // extend uniform function with static methods\n    jStat.extend(jStat.binomial, {\n      pdf: function pdf(k, n, p) {\n        return p === 0 || p === 1 ? n * p === k ? 1 : 0 : jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n      },\n      cdf: function cdf(x, n, p) {\n        var betacdf;\n        var eps = 1e-10;\n        if (x < 0) return 0;\n        if (x >= n) return 1;\n        if (p < 0 || p > 1 || n <= 0) return NaN;\n        x = Math.floor(x);\n        var z = p;\n        var a = x + 1;\n        var b = n - x;\n        var s = a + b;\n        var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) - jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n        if (z < (a + 1) / (s + 2)) betacdf = bt * betinc(z, a, b, eps);else betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n        return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n      }\n    });\n\n    // extend uniform function with static methods\n    jStat.extend(jStat.negbin, {\n      pdf: function pdf(k, r, p) {\n        if (k !== k >>> 0) return false;\n        if (k < 0) return 0;\n        return jStat.combination(k + r - 1, r - 1) * Math.pow(1 - p, k) * Math.pow(p, r);\n      },\n      cdf: function cdf(x, r, p) {\n        var sum = 0,\n          k = 0;\n        if (x < 0) return 0;\n        for (; k <= x; k++) {\n          sum += jStat.negbin.pdf(k, r, p);\n        }\n        return sum;\n      }\n    });\n\n    // extend uniform function with static methods\n    jStat.extend(jStat.hypgeom, {\n      pdf: function pdf(k, N, m, n) {\n        // Hypergeometric PDF.\n\n        // A simplification of the CDF algorithm below.\n\n        // k = number of successes drawn\n        // N = population size\n        // m = number of successes in population\n        // n = number of items drawn from population\n\n        if (k !== k | 0) {\n          return false;\n        } else if (k < 0 || k < m - (N - n)) {\n          // It's impossible to have this few successes drawn.\n          return 0;\n        } else if (k > n || k > m) {\n          // It's impossible to have this many successes drawn.\n          return 0;\n        } else if (m * 2 > N) {\n          // More than half the population is successes.\n\n          if (n * 2 > N) {\n            // More than half the population is sampled.\n\n            return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n);\n          } else {\n            // Half or less of the population is sampled.\n\n            return jStat.hypgeom.pdf(n - k, N, N - m, n);\n          }\n        } else if (n * 2 > N) {\n          // Half or less is successes.\n\n          return jStat.hypgeom.pdf(m - k, N, m, N - n);\n        } else if (m < n) {\n          // We want to have the number of things sampled to be less than the\n          // successes available. So swap the definitions of successful and sampled.\n          return jStat.hypgeom.pdf(k, N, n, m);\n        } else {\n          // If we get here, half or less of the population was sampled, half or\n          // less of it was successes, and we had fewer sampled things than\n          // successes. Now we can do this complicated iterative algorithm in an\n          // efficient way.\n\n          // The basic premise of the algorithm is that we partially normalize our\n          // intermediate product to keep it in a numerically good region, and then\n          // finish the normalization at the end.\n\n          // This variable holds the scaled probability of the current number of\n          // successes.\n          var scaledPDF = 1;\n\n          // This keeps track of how much we have normalized.\n          var samplesDone = 0;\n          for (var i = 0; i < k; i++) {\n            // For every possible number of successes up to that observed...\n\n            while (scaledPDF > 1 && samplesDone < n) {\n              // Intermediate result is growing too big. Apply some of the\n              // normalization to shrink everything.\n\n              scaledPDF *= 1 - m / (N - samplesDone);\n\n              // Say we've normalized by this sample already.\n              samplesDone++;\n            }\n\n            // Work out the partially-normalized hypergeometric PDF for the next\n            // number of successes\n            scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n          }\n          for (; samplesDone < n; samplesDone++) {\n            // Apply all the rest of the normalization\n            scaledPDF *= 1 - m / (N - samplesDone);\n          }\n\n          // Bound answer sanely before returning.\n          return Math.min(1, Math.max(0, scaledPDF));\n        }\n      },\n      cdf: function cdf(x, N, m, n) {\n        // Hypergeometric CDF.\n\n        // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n        // and comes from his hypergeometric test calculator at\n        // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n        // x = number of successes drawn\n        // N = population size\n        // m = number of successes in population\n        // n = number of items drawn from population\n\n        if (x < 0 || x < m - (N - n)) {\n          // It's impossible to have this few successes drawn or fewer.\n          return 0;\n        } else if (x >= n || x >= m) {\n          // We will always have this many successes or fewer.\n          return 1;\n        } else if (m * 2 > N) {\n          // More than half the population is successes.\n\n          if (n * 2 > N) {\n            // More than half the population is sampled.\n\n            return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n);\n          } else {\n            // Half or less of the population is sampled.\n\n            return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n          }\n        } else if (n * 2 > N) {\n          // Half or less is successes.\n\n          return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n        } else if (m < n) {\n          // We want to have the number of things sampled to be less than the\n          // successes available. So swap the definitions of successful and sampled.\n          return jStat.hypgeom.cdf(x, N, n, m);\n        } else {\n          // If we get here, half or less of the population was sampled, half or\n          // less of it was successes, and we had fewer sampled things than\n          // successes. Now we can do this complicated iterative algorithm in an\n          // efficient way.\n\n          // The basic premise of the algorithm is that we partially normalize our\n          // intermediate sum to keep it in a numerically good region, and then\n          // finish the normalization at the end.\n\n          // Holds the intermediate, scaled total CDF.\n          var scaledCDF = 1;\n\n          // This variable holds the scaled probability of the current number of\n          // successes.\n          var scaledPDF = 1;\n\n          // This keeps track of how much we have normalized.\n          var samplesDone = 0;\n          for (var i = 0; i < x; i++) {\n            // For every possible number of successes up to that observed...\n\n            while (scaledCDF > 1 && samplesDone < n) {\n              // Intermediate result is growing too big. Apply some of the\n              // normalization to shrink everything.\n\n              var factor = 1 - m / (N - samplesDone);\n              scaledPDF *= factor;\n              scaledCDF *= factor;\n\n              // Say we've normalized by this sample already.\n              samplesDone++;\n            }\n\n            // Work out the partially-normalized hypergeometric PDF for the next\n            // number of successes\n            scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n            // Add to the CDF answer.\n            scaledCDF += scaledPDF;\n          }\n          for (; samplesDone < n; samplesDone++) {\n            // Apply all the rest of the normalization\n            scaledCDF *= 1 - m / (N - samplesDone);\n          }\n\n          // Bound answer sanely before returning.\n          return Math.min(1, Math.max(0, scaledCDF));\n        }\n      }\n    });\n\n    // extend uniform function with static methods\n    jStat.extend(jStat.poisson, {\n      pdf: function pdf(k, l) {\n        if (l < 0 || k % 1 !== 0 || k < 0) {\n          return 0;\n        }\n        return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n      },\n      cdf: function cdf(x, l) {\n        var sumarr = [],\n          k = 0;\n        if (x < 0) return 0;\n        for (; k <= x; k++) {\n          sumarr.push(jStat.poisson.pdf(k, l));\n        }\n        return jStat.sum(sumarr);\n      },\n      mean: function (l) {\n        return l;\n      },\n      variance: function (l) {\n        return l;\n      },\n      sampleSmall: function sampleSmall(l) {\n        var p = 1,\n          k = 0,\n          L = Math.exp(-l);\n        do {\n          k++;\n          p *= jStat._random_fn();\n        } while (p > L);\n        return k - 1;\n      },\n      sampleLarge: function sampleLarge(l) {\n        var lam = l;\n        var k;\n        var U, V, slam, loglam, a, b, invalpha, vr, us;\n        slam = Math.sqrt(lam);\n        loglam = Math.log(lam);\n        b = 0.931 + 2.53 * slam;\n        a = -0.059 + 0.02483 * b;\n        invalpha = 1.1239 + 1.1328 / (b - 3.4);\n        vr = 0.9277 - 3.6224 / (b - 2);\n        while (1) {\n          U = Math.random() - 0.5;\n          V = Math.random();\n          us = 0.5 - Math.abs(U);\n          k = Math.floor((2 * a / us + b) * U + lam + 0.43);\n          if (us >= 0.07 && V <= vr) {\n            return k;\n          }\n          if (k < 0 || us < 0.013 && V > us) {\n            continue;\n          }\n          /* log(V) == log(0.0) ok here */\n          /* if U==0.0 so that us==0.0, log is ok since always returns */\n          if (Math.log(V) + Math.log(invalpha) - Math.log(a / (us * us) + b) <= -lam + k * loglam - jStat.loggam(k + 1)) {\n            return k;\n          }\n        }\n      },\n      sample: function sample(l) {\n        if (l < 10) return this.sampleSmall(l);else return this.sampleLarge(l);\n      }\n    });\n\n    // extend triangular function with static methods\n    jStat.extend(jStat.triangular, {\n      pdf: function pdf(x, a, b, c) {\n        if (b <= a || c < a || c > b) {\n          return NaN;\n        } else {\n          if (x < a || x > b) {\n            return 0;\n          } else if (x < c) {\n            return 2 * (x - a) / ((b - a) * (c - a));\n          } else if (x === c) {\n            return 2 / (b - a);\n          } else {\n            // x > c\n            return 2 * (b - x) / ((b - a) * (b - c));\n          }\n        }\n      },\n      cdf: function cdf(x, a, b, c) {\n        if (b <= a || c < a || c > b) return NaN;\n        if (x <= a) return 0;else if (x >= b) return 1;\n        if (x <= c) return Math.pow(x - a, 2) / ((b - a) * (c - a));else\n          // x > c\n          return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n      },\n      inv: function inv(p, a, b, c) {\n        if (b <= a || c < a || c > b) {\n          return NaN;\n        } else {\n          if (p <= (c - a) / (b - a)) {\n            return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n          } else {\n            // p > ((c - a) / (b - a))\n            return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - (c - a) / (b - a))));\n          }\n        }\n      },\n      mean: function mean(a, b, c) {\n        return (a + b + c) / 3;\n      },\n      median: function median(a, b, c) {\n        if (c <= (a + b) / 2) {\n          return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n        } else if (c > (a + b) / 2) {\n          return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n        }\n      },\n      mode: function mode(a, b, c) {\n        return c;\n      },\n      sample: function sample(a, b, c) {\n        var u = jStat._random_fn();\n        if (u < (c - a) / (b - a)) return a + Math.sqrt(u * (b - a) * (c - a));\n        return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n      },\n      variance: function variance(a, b, c) {\n        return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n      }\n    });\n\n    // extend arcsine function with static methods\n    jStat.extend(jStat.arcsine, {\n      pdf: function pdf(x, a, b) {\n        if (b <= a) return NaN;\n        return x <= a || x >= b ? 0 : 2 / Math.PI * Math.pow(Math.pow(b - a, 2) - Math.pow(2 * x - a - b, 2), -0.5);\n      },\n      cdf: function cdf(x, a, b) {\n        if (x < a) return 0;else if (x < b) return 2 / Math.PI * Math.asin(Math.sqrt((x - a) / (b - a)));\n        return 1;\n      },\n      inv: function (p, a, b) {\n        return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n      },\n      mean: function mean(a, b) {\n        if (b <= a) return NaN;\n        return (a + b) / 2;\n      },\n      median: function median(a, b) {\n        if (b <= a) return NaN;\n        return (a + b) / 2;\n      },\n      mode: function mode( /*a, b*/\n      ) {\n        throw new Error('mode is not yet implemented');\n      },\n      sample: function sample(a, b) {\n        return (a + b) / 2 + (b - a) / 2 * Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n      },\n      variance: function variance(a, b) {\n        if (b <= a) return NaN;\n        return Math.pow(b - a, 2) / 8;\n      }\n    });\n    function laplaceSign(x) {\n      return x / Math.abs(x);\n    }\n    jStat.extend(jStat.laplace, {\n      pdf: function pdf(x, mu, b) {\n        return b <= 0 ? 0 : Math.exp(-Math.abs(x - mu) / b) / (2 * b);\n      },\n      cdf: function cdf(x, mu, b) {\n        if (b <= 0) {\n          return 0;\n        }\n        if (x < mu) {\n          return 0.5 * Math.exp((x - mu) / b);\n        } else {\n          return 1 - 0.5 * Math.exp(-(x - mu) / b);\n        }\n      },\n      mean: function (mu /*, b*/) {\n        return mu;\n      },\n      median: function (mu /*, b*/) {\n        return mu;\n      },\n      mode: function (mu /*, b*/) {\n        return mu;\n      },\n      variance: function (mu, b) {\n        return 2 * b * b;\n      },\n      sample: function sample(mu, b) {\n        var u = jStat._random_fn() - 0.5;\n        return mu - b * laplaceSign(u) * Math.log(1 - 2 * Math.abs(u));\n      }\n    });\n    function tukeyWprob(w, rr, cc) {\n      var nleg = 12;\n      var ihalf = 6;\n      var C1 = -30;\n      var C2 = -50;\n      var C3 = 60;\n      var bb = 8;\n      var wlar = 3;\n      var wincr1 = 2;\n      var wincr2 = 3;\n      var xleg = [0.981560634246719250690549090149, 0.904117256370474856678465866119, 0.769902674194304687036893833213, 0.587317954286617447296702418941, 0.367831498998180193752691536644, 0.125233408511468915472441369464];\n      var aleg = [0.047175336386511827194615961485, 0.106939325995318430960254718194, 0.160078328543346226334652529543, 0.203167426723065921749064455810, 0.233492536538354808760849898925, 0.249147045813402785000562436043];\n      var qsqz = w * 0.5;\n\n      // if w >= 16 then the integral lower bound (occurs for c=20)\n      // is 0.99999999999995 so return a value of 1.\n\n      if (qsqz >= bb) return 1.0;\n\n      // find (f(w/2) - 1) ^ cc\n      // (first term in integral of hartley's form).\n\n      var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n      // if pr_w ^ cc < 2e-22 then set pr_w = 0\n      if (pr_w >= Math.exp(C2 / cc)) pr_w = Math.pow(pr_w, cc);else pr_w = 0.0;\n\n      // if w is large then the second component of the\n      // integral is small, so fewer intervals are needed.\n\n      var wincr;\n      if (w > wlar) wincr = wincr1;else wincr = wincr2;\n\n      // find the integral of second term of hartley's form\n      // for the integral of the range for equal-length\n      // intervals using legendre quadrature.  limits of\n      // integration are from (w/2, 8).  two or three\n      // equal-length intervals are used.\n\n      // blb and bub are lower and upper limits of integration.\n\n      var blb = qsqz;\n      var binc = (bb - qsqz) / wincr;\n      var bub = blb + binc;\n      var einsum = 0.0;\n\n      // integrate over each interval\n\n      var cc1 = cc - 1.0;\n      for (var wi = 1; wi <= wincr; wi++) {\n        var elsum = 0.0;\n        var a = 0.5 * (bub + blb);\n\n        // legendre quadrature with order = nleg\n\n        var b = 0.5 * (bub - blb);\n        for (var jj = 1; jj <= nleg; jj++) {\n          var j, xx;\n          if (ihalf < jj) {\n            j = nleg - jj + 1;\n            xx = xleg[j - 1];\n          } else {\n            j = jj;\n            xx = -xleg[j - 1];\n          }\n          var c = b * xx;\n          var ac = a + c;\n\n          // if exp(-qexpo/2) < 9e-14,\n          // then doesn't contribute to integral\n\n          var qexpo = ac * ac;\n          if (qexpo > C3) break;\n          var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n          var pminus = 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n          // if rinsum ^ (cc-1) < 9e-14,\n          // then doesn't contribute to integral\n\n          var rinsum = pplus * 0.5 - pminus * 0.5;\n          if (rinsum >= Math.exp(C1 / cc1)) {\n            rinsum = aleg[j - 1] * Math.exp(-(0.5 * qexpo)) * Math.pow(rinsum, cc1);\n            elsum += rinsum;\n          }\n        }\n        elsum *= 2.0 * b * cc / Math.sqrt(2 * Math.PI);\n        einsum += elsum;\n        blb = bub;\n        bub += binc;\n      }\n\n      // if pr_w ^ rr < 9e-14, then return 0\n      pr_w += einsum;\n      if (pr_w <= Math.exp(C1 / rr)) return 0;\n      pr_w = Math.pow(pr_w, rr);\n      if (pr_w >= 1)\n        // 1 was iMax was eps\n        return 1;\n      return pr_w;\n    }\n    function tukeyQinv(p, c, v) {\n      var p0 = 0.322232421088;\n      var q0 = 0.993484626060e-01;\n      var p1 = -1.0;\n      var q1 = 0.588581570495;\n      var p2 = -0.342242088547;\n      var q2 = 0.531103462366;\n      var p3 = -0.204231210125;\n      var q3 = 0.103537752850;\n      var p4 = -0.453642210148e-04;\n      var q4 = 0.38560700634e-02;\n      var c1 = 0.8832;\n      var c2 = 0.2368;\n      var c3 = 1.214;\n      var c4 = 1.208;\n      var c5 = 1.4142;\n      var vmax = 120.0;\n      var ps = 0.5 - 0.5 * p;\n      var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n      var t = yi + ((((yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0) / ((((yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n      if (v < vmax) t += (t * t * t + t) / v / 4.0;\n      var q = c1 - c2 * t;\n      if (v < vmax) q += -c3 / v + c4 * t / v;\n      return t * (q * Math.log(c - 1.0) + c5);\n    }\n    jStat.extend(jStat.tukey, {\n      cdf: function cdf(q, nmeans, df) {\n        // Identical implementation as the R ptukey() function as of commit 68947\n        var rr = 1;\n        var cc = nmeans;\n        var nlegq = 16;\n        var ihalfq = 8;\n        var eps1 = -30.0;\n        var eps2 = 1.0e-14;\n        var dhaf = 100.0;\n        var dquar = 800.0;\n        var deigh = 5000.0;\n        var dlarg = 25000.0;\n        var ulen1 = 1.0;\n        var ulen2 = 0.5;\n        var ulen3 = 0.25;\n        var ulen4 = 0.125;\n        var xlegq = [0.989400934991649932596154173450, 0.944575023073232576077988415535, 0.865631202387831743880467897712, 0.755404408355003033895101194847, 0.617876244402643748446671764049, 0.458016777657227386342419442984, 0.281603550779258913230460501460, 0.950125098376374401853193354250e-1];\n        var alegq = [0.271524594117540948517805724560e-1, 0.622535239386478928628438369944e-1, 0.951585116824927848099251076022e-1, 0.124628971255533872052476282192, 0.149595988816576732081501730547, 0.169156519395002538189312079030, 0.182603415044923588866763667969, 0.189450610455068496285396723208];\n        if (q <= 0) return 0;\n\n        // df must be > 1\n        // there must be at least two values\n\n        if (df < 2 || rr < 1 || cc < 2) return NaN;\n        if (!Number.isFinite(q)) return 1;\n        if (df > dlarg) return tukeyWprob(q, rr, cc);\n\n        // calculate leading constant\n\n        var f2 = df * 0.5;\n        var f2lf = f2 * Math.log(df) - df * Math.log(2) - jStat.gammaln(f2);\n        var f21 = f2 - 1.0;\n\n        // integral is divided into unit, half-unit, quarter-unit, or\n        // eighth-unit length intervals depending on the value of the\n        // degrees of freedom.\n\n        var ff4 = df * 0.25;\n        var ulen;\n        if (df <= dhaf) ulen = ulen1;else if (df <= dquar) ulen = ulen2;else if (df <= deigh) ulen = ulen3;else ulen = ulen4;\n        f2lf += Math.log(ulen);\n\n        // integrate over each subinterval\n\n        var ans = 0.0;\n        for (var i = 1; i <= 50; i++) {\n          var otsum = 0.0;\n\n          // legendre quadrature with order = nlegq\n          // nodes (stored in xlegq) are symmetric around zero.\n\n          var twa1 = (2 * i - 1) * ulen;\n          for (var jj = 1; jj <= nlegq; jj++) {\n            var j, t1;\n            if (ihalfq < jj) {\n              j = jj - ihalfq - 1;\n              t1 = f2lf + f21 * Math.log(twa1 + xlegq[j] * ulen) - (xlegq[j] * ulen + twa1) * ff4;\n            } else {\n              j = jj - 1;\n              t1 = f2lf + f21 * Math.log(twa1 - xlegq[j] * ulen) + (xlegq[j] * ulen - twa1) * ff4;\n            }\n\n            // if exp(t1) < 9e-14, then doesn't contribute to integral\n            var qsqz;\n            if (t1 >= eps1) {\n              if (ihalfq < jj) {\n                qsqz = q * Math.sqrt((xlegq[j] * ulen + twa1) * 0.5);\n              } else {\n                qsqz = q * Math.sqrt((-(xlegq[j] * ulen) + twa1) * 0.5);\n              }\n\n              // call wprob to find integral of range portion\n\n              var wprb = tukeyWprob(qsqz, rr, cc);\n              var rotsum = wprb * alegq[j] * Math.exp(t1);\n              otsum += rotsum;\n            }\n            // end legendre integral for interval i\n            // L200:\n          }\n\n          // if integral for interval i < 1e-14, then stop.\n          // However, in order to avoid small area under left tail,\n          // at least  1 / ulen  intervals are calculated.\n          if (i * ulen >= 1.0 && otsum <= eps2) break;\n\n          // end of interval i\n          // L330:\n\n          ans += otsum;\n        }\n        if (otsum > eps2) {\n          // not converged\n          throw new Error('tukey.cdf failed to converge');\n        }\n        if (ans > 1) ans = 1;\n        return ans;\n      },\n      inv: function (p, nmeans, df) {\n        // Identical implementation as the R qtukey() function as of commit 68947\n        var rr = 1;\n        var cc = nmeans;\n        var eps = 0.0001;\n        var maxiter = 50;\n\n        // df must be > 1 ; there must be at least two values\n        if (df < 2 || rr < 1 || cc < 2) return NaN;\n        if (p < 0 || p > 1) return NaN;\n        if (p === 0) return 0;\n        if (p === 1) return Infinity;\n\n        // Initial value\n\n        var x0 = tukeyQinv(p, cc, df);\n\n        // Find prob(value < x0)\n\n        var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n        // Find the second iterate and prob(value < x1).\n        // If the first iterate has probability value\n        // exceeding p then second iterate is 1 less than\n        // first iterate; otherwise it is 1 greater.\n\n        var x1;\n        if (valx0 > 0.0) x1 = Math.max(0.0, x0 - 1.0);else x1 = x0 + 1.0;\n        var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n        // Find new iterate\n\n        var ans;\n        for (var iter = 1; iter < maxiter; iter++) {\n          ans = x1 - valx1 * (x1 - x0) / (valx1 - valx0);\n          valx0 = valx1;\n\n          // New iterate must be >= 0\n\n          x0 = x1;\n          if (ans < 0.0) {\n            ans = 0.0;\n            valx1 = -p;\n          }\n          // Find prob(value < new iterate)\n\n          valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n          x1 = ans;\n\n          // If the difference between two successive\n          // iterates is less than eps, stop\n\n          var xabs = Math.abs(x1 - x0);\n          if (xabs < eps) return ans;\n        }\n        throw new Error('tukey.inv failed to converge');\n      }\n    });\n  })(jStat, Math);\n  /* Provides functions for the solution of linear system of equations, integration, extrapolation,\n   * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n  (function (jStat, Math) {\n    var push = Array.prototype.push;\n    var isArray = jStat.utils.isArray;\n    function isUsable(arg) {\n      return isArray(arg) || arg instanceof jStat;\n    }\n    jStat.extend({\n      // add a vector/matrix to a vector/matrix or scalar\n      add: function add(arr, arg) {\n        // check if arg is a vector or scalar\n        if (isUsable(arg)) {\n          if (!isUsable(arg[0])) arg = [arg];\n          return jStat.map(arr, function (value, row, col) {\n            return value + arg[row][col];\n          });\n        }\n        return jStat.map(arr, function (value) {\n          return value + arg;\n        });\n      },\n      // subtract a vector or scalar from the vector\n      subtract: function subtract(arr, arg) {\n        // check if arg is a vector or scalar\n        if (isUsable(arg)) {\n          if (!isUsable(arg[0])) arg = [arg];\n          return jStat.map(arr, function (value, row, col) {\n            return value - arg[row][col] || 0;\n          });\n        }\n        return jStat.map(arr, function (value) {\n          return value - arg;\n        });\n      },\n      // matrix division\n      divide: function divide(arr, arg) {\n        if (isUsable(arg)) {\n          if (!isUsable(arg[0])) arg = [arg];\n          return jStat.multiply(arr, jStat.inv(arg));\n        }\n        return jStat.map(arr, function (value) {\n          return value / arg;\n        });\n      },\n      // matrix multiplication\n      multiply: function multiply(arr, arg) {\n        var row, col, nrescols, sum, nrow, ncol, res, rescols;\n        // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n        if (arr.length === undefined && arg.length === undefined) {\n          return arr * arg;\n        }\n        nrow = arr.length, ncol = arr[0].length, res = jStat.zeros(nrow, nrescols = isUsable(arg) ? arg[0].length : ncol), rescols = 0;\n        if (isUsable(arg)) {\n          for (; rescols < nrescols; rescols++) {\n            for (row = 0; row < nrow; row++) {\n              sum = 0;\n              for (col = 0; col < ncol; col++) sum += arr[row][col] * arg[col][rescols];\n              res[row][rescols] = sum;\n            }\n          }\n          return nrow === 1 && rescols === 1 ? res[0][0] : res;\n        }\n        return jStat.map(arr, function (value) {\n          return value * arg;\n        });\n      },\n      // outer([1,2,3],[4,5,6])\n      // ===\n      // [[1],[2],[3]] times [[4,5,6]]\n      // ->\n      // [[4,5,6],[8,10,12],[12,15,18]]\n      outer: function outer(A, B) {\n        return jStat.multiply(A.map(function (t) {\n          return [t];\n        }), [B]);\n      },\n      // Returns the dot product of two matricies\n      dot: function dot(arr, arg) {\n        if (!isUsable(arr[0])) arr = [arr];\n        if (!isUsable(arg[0])) arg = [arg];\n        // convert column to row vector\n        var left = arr[0].length === 1 && arr.length !== 1 ? jStat.transpose(arr) : arr,\n          right = arg[0].length === 1 && arg.length !== 1 ? jStat.transpose(arg) : arg,\n          res = [],\n          row = 0,\n          nrow = left.length,\n          ncol = left[0].length,\n          sum,\n          col;\n        for (; row < nrow; row++) {\n          res[row] = [];\n          sum = 0;\n          for (col = 0; col < ncol; col++) sum += left[row][col] * right[row][col];\n          res[row] = sum;\n        }\n        return res.length === 1 ? res[0] : res;\n      },\n      // raise every element by a scalar\n      pow: function pow(arr, arg) {\n        return jStat.map(arr, function (value) {\n          return Math.pow(value, arg);\n        });\n      },\n      // exponentiate every element\n      exp: function exp(arr) {\n        return jStat.map(arr, function (value) {\n          return Math.exp(value);\n        });\n      },\n      // generate the natural log of every element\n      log: function exp(arr) {\n        return jStat.map(arr, function (value) {\n          return Math.log(value);\n        });\n      },\n      // generate the absolute values of the vector\n      abs: function abs(arr) {\n        return jStat.map(arr, function (value) {\n          return Math.abs(value);\n        });\n      },\n      // computes the p-norm of the vector\n      // In the case that a matrix is passed, uses the first row as the vector\n      norm: function norm(arr, p) {\n        var nnorm = 0,\n          i = 0;\n        // check the p-value of the norm, and set for most common case\n        if (isNaN(p)) p = 2;\n        // check if multi-dimensional array, and make vector correction\n        if (isUsable(arr[0])) arr = arr[0];\n        // vector norm\n        for (; i < arr.length; i++) {\n          nnorm += Math.pow(Math.abs(arr[i]), p);\n        }\n        return Math.pow(nnorm, 1 / p);\n      },\n      // computes the angle between two vectors in rads\n      // In case a matrix is passed, this uses the first row as the vector\n      angle: function angle(arr, arg) {\n        return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n      },\n      // augment one matrix by another\n      // Note: this function returns a matrix, not a jStat object\n      aug: function aug(a, b) {\n        var newarr = [];\n        var i;\n        for (i = 0; i < a.length; i++) {\n          newarr.push(a[i].slice());\n        }\n        for (i = 0; i < newarr.length; i++) {\n          push.apply(newarr[i], b[i]);\n        }\n        return newarr;\n      },\n      // The inv() function calculates the inverse of a matrix\n      // Create the inverse by augmenting the matrix by the identity matrix of the\n      // appropriate size, and then use G-J elimination on the augmented matrix.\n      inv: function inv(a) {\n        var rows = a.length;\n        var cols = a[0].length;\n        var b = jStat.identity(rows, cols);\n        var c = jStat.gauss_jordan(a, b);\n        var result = [];\n        var i = 0;\n        var j;\n\n        //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n        for (; i < rows; i++) {\n          result[i] = [];\n          for (j = cols; j < c[0].length; j++) result[i][j - cols] = c[i][j];\n        }\n        return result;\n      },\n      // calculate the determinant of a matrix\n      det: function det(a) {\n        var alen = a.length,\n          alend = alen * 2,\n          vals = new Array(alend),\n          rowshift = alen - 1,\n          colshift = alend - 1,\n          mrow = rowshift - alen + 1,\n          mcol = colshift,\n          i = 0,\n          result = 0,\n          j;\n        // check for special 2x2 case\n        if (alen === 2) {\n          return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n        }\n        for (; i < alend; i++) {\n          vals[i] = 1;\n        }\n        for (i = 0; i < alen; i++) {\n          for (j = 0; j < alen; j++) {\n            vals[mrow < 0 ? mrow + alen : mrow] *= a[i][j];\n            vals[mcol < alen ? mcol + alen : mcol] *= a[i][j];\n            mrow++;\n            mcol--;\n          }\n          mrow = --rowshift - alen + 1;\n          mcol = --colshift;\n        }\n        for (i = 0; i < alen; i++) {\n          result += vals[i];\n        }\n        for (; i < alend; i++) {\n          result -= vals[i];\n        }\n        return result;\n      },\n      gauss_elimination: function gauss_elimination(a, b) {\n        var i = 0,\n          j = 0,\n          n = a.length,\n          m = a[0].length,\n          factor = 1,\n          sum = 0,\n          x = [],\n          maug,\n          pivot,\n          temp,\n          k;\n        a = jStat.aug(a, b);\n        maug = a[0].length;\n        for (i = 0; i < n; i++) {\n          pivot = a[i][i];\n          j = i;\n          for (k = i + 1; k < m; k++) {\n            if (pivot < Math.abs(a[k][i])) {\n              pivot = a[k][i];\n              j = k;\n            }\n          }\n          if (j != i) {\n            for (k = 0; k < maug; k++) {\n              temp = a[i][k];\n              a[i][k] = a[j][k];\n              a[j][k] = temp;\n            }\n          }\n          for (j = i + 1; j < n; j++) {\n            factor = a[j][i] / a[i][i];\n            for (k = i; k < maug; k++) {\n              a[j][k] = a[j][k] - factor * a[i][k];\n            }\n          }\n        }\n        for (i = n - 1; i >= 0; i--) {\n          sum = 0;\n          for (j = i + 1; j <= n - 1; j++) {\n            sum = sum + x[j] * a[i][j];\n          }\n          x[i] = (a[i][maug - 1] - sum) / a[i][i];\n        }\n        return x;\n      },\n      gauss_jordan: function gauss_jordan(a, b) {\n        var m = jStat.aug(a, b);\n        var h = m.length;\n        var w = m[0].length;\n        var c = 0;\n        var x, y, y2;\n        // find max pivot\n        for (y = 0; y < h; y++) {\n          var maxrow = y;\n          for (y2 = y + 1; y2 < h; y2++) {\n            if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y])) maxrow = y2;\n          }\n          var tmp = m[y];\n          m[y] = m[maxrow];\n          m[maxrow] = tmp;\n          for (y2 = y + 1; y2 < h; y2++) {\n            c = m[y2][y] / m[y][y];\n            for (x = y; x < w; x++) {\n              m[y2][x] -= m[y][x] * c;\n            }\n          }\n        }\n        // backsubstitute\n        for (y = h - 1; y >= 0; y--) {\n          c = m[y][y];\n          for (y2 = 0; y2 < y; y2++) {\n            for (x = w - 1; x > y - 1; x--) {\n              m[y2][x] -= m[y][x] * m[y2][y] / c;\n            }\n          }\n          m[y][y] /= c;\n          for (x = h; x < w; x++) {\n            m[y][x] /= c;\n          }\n        }\n        return m;\n      },\n      // solve equation\n      // Ax=b\n      // A is upper triangular matrix\n      // A=[[1,2,3],[0,4,5],[0,6,7]]\n      // b=[1,2,3]\n      // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n      // if you use matrix style\n      // A=[[1,2,3],[0,4,5],[0,6,7]]\n      // b=[[1],[2],[3]]\n      // will return [[2.666],[0.1666],[1.666]]\n      triaUpSolve: function triaUpSolve(A, b) {\n        var size = A[0].length;\n        var x = jStat.zeros(1, size)[0];\n        var parts;\n        var matrix_mode = false;\n        if (b[0].length != undefined) {\n          b = b.map(function (i) {\n            return i[0];\n          });\n          matrix_mode = true;\n        }\n        jStat.arange(size - 1, -1, -1).forEach(function (i) {\n          parts = jStat.arange(i + 1, size).map(function (j) {\n            return x[j] * A[i][j];\n          });\n          x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n        });\n        if (matrix_mode) return x.map(function (i) {\n          return [i];\n        });\n        return x;\n      },\n      triaLowSolve: function triaLowSolve(A, b) {\n        // like to triaUpSolve but A is lower triangular matrix\n        var size = A[0].length;\n        var x = jStat.zeros(1, size)[0];\n        var parts;\n        var matrix_mode = false;\n        if (b[0].length != undefined) {\n          b = b.map(function (i) {\n            return i[0];\n          });\n          matrix_mode = true;\n        }\n        jStat.arange(size).forEach(function (i) {\n          parts = jStat.arange(i).map(function (j) {\n            return A[i][j] * x[j];\n          });\n          x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n        });\n        if (matrix_mode) return x.map(function (i) {\n          return [i];\n        });\n        return x;\n      },\n      // A -> [L,U]\n      // A=LU\n      // L is lower triangular matrix\n      // U is upper triangular matrix\n      lu: function lu(A) {\n        var size = A.length;\n        //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n        var L = jStat.identity(size);\n        var R = jStat.zeros(A.length, A[0].length);\n        var parts;\n        jStat.arange(size).forEach(function (t) {\n          R[0][t] = A[0][t];\n        });\n        jStat.arange(1, size).forEach(function (l) {\n          jStat.arange(l).forEach(function (i) {\n            parts = jStat.arange(i).map(function (jj) {\n              return L[l][jj] * R[jj][i];\n            });\n            L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n          });\n          jStat.arange(l, size).forEach(function (j) {\n            parts = jStat.arange(l).map(function (jj) {\n              return L[l][jj] * R[jj][j];\n            });\n            R[l][j] = A[parts.length][j] - jStat.sum(parts);\n          });\n        });\n        return [L, R];\n      },\n      // A -> T\n      // A=TT'\n      // T is lower triangular matrix\n      cholesky: function cholesky(A) {\n        var size = A.length;\n        var T = jStat.zeros(A.length, A[0].length);\n        var parts;\n        jStat.arange(size).forEach(function (i) {\n          parts = jStat.arange(i).map(function (t) {\n            return Math.pow(T[i][t], 2);\n          });\n          T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n          jStat.arange(i + 1, size).forEach(function (j) {\n            parts = jStat.arange(i).map(function (t) {\n              return T[i][t] * T[j][t];\n            });\n            T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n          });\n        });\n        return T;\n      },\n      gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n        var i = 0;\n        var j = 0;\n        var n = a.length;\n        var l = [];\n        var u = [];\n        var d = [];\n        var xv, c, h, xk;\n        for (; i < n; i++) {\n          l[i] = [];\n          u[i] = [];\n          d[i] = [];\n          for (j = 0; j < n; j++) {\n            if (i > j) {\n              l[i][j] = a[i][j];\n              u[i][j] = d[i][j] = 0;\n            } else if (i < j) {\n              u[i][j] = a[i][j];\n              l[i][j] = d[i][j] = 0;\n            } else {\n              d[i][j] = a[i][j];\n              l[i][j] = u[i][j] = 0;\n            }\n          }\n        }\n        h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n        c = jStat.multiply(jStat.inv(d), b);\n        xv = x;\n        xk = jStat.add(jStat.multiply(h, x), c);\n        i = 2;\n        while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n          xv = xk;\n          xk = jStat.add(jStat.multiply(h, xv), c);\n          i++;\n        }\n        return xk;\n      },\n      gauss_seidel: function gauss_seidel(a, b, x, r) {\n        var i = 0;\n        var n = a.length;\n        var l = [];\n        var u = [];\n        var d = [];\n        var j, xv, c, h, xk;\n        for (; i < n; i++) {\n          l[i] = [];\n          u[i] = [];\n          d[i] = [];\n          for (j = 0; j < n; j++) {\n            if (i > j) {\n              l[i][j] = a[i][j];\n              u[i][j] = d[i][j] = 0;\n            } else if (i < j) {\n              u[i][j] = a[i][j];\n              l[i][j] = d[i][j] = 0;\n            } else {\n              d[i][j] = a[i][j];\n              l[i][j] = u[i][j] = 0;\n            }\n          }\n        }\n        h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n        c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n        xv = x;\n        xk = jStat.add(jStat.multiply(h, x), c);\n        i = 2;\n        while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n          xv = xk;\n          xk = jStat.add(jStat.multiply(h, xv), c);\n          i = i + 1;\n        }\n        return xk;\n      },\n      SOR: function SOR(a, b, x, r, w) {\n        var i = 0;\n        var n = a.length;\n        var l = [];\n        var u = [];\n        var d = [];\n        var j, xv, c, h, xk;\n        for (; i < n; i++) {\n          l[i] = [];\n          u[i] = [];\n          d[i] = [];\n          for (j = 0; j < n; j++) {\n            if (i > j) {\n              l[i][j] = a[i][j];\n              u[i][j] = d[i][j] = 0;\n            } else if (i < j) {\n              u[i][j] = a[i][j];\n              l[i][j] = d[i][j] = 0;\n            } else {\n              d[i][j] = a[i][j];\n              l[i][j] = u[i][j] = 0;\n            }\n          }\n        }\n        h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))), jStat.subtract(jStat.multiply(d, 1 - w), jStat.multiply(u, w)));\n        c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))), b), w);\n        xv = x;\n        xk = jStat.add(jStat.multiply(h, x), c);\n        i = 2;\n        while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n          xv = xk;\n          xk = jStat.add(jStat.multiply(h, xv), c);\n          i++;\n        }\n        return xk;\n      },\n      householder: function householder(a) {\n        var m = a.length;\n        var n = a[0].length;\n        var i = 0;\n        var w = [];\n        var p = [];\n        var alpha, r, k, j, factor;\n        for (; i < m - 1; i++) {\n          alpha = 0;\n          for (j = i + 1; j < n; j++) alpha += a[j][i] * a[j][i];\n          factor = a[i + 1][i] > 0 ? -1 : 1;\n          alpha = factor * Math.sqrt(alpha);\n          r = Math.sqrt((alpha * alpha - a[i + 1][i] * alpha) / 2);\n          w = jStat.zeros(m, 1);\n          w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n          for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n          p = jStat.subtract(jStat.identity(m, n), jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n          a = jStat.multiply(p, jStat.multiply(a, p));\n        }\n        return a;\n      },\n      // A -> [Q,R]\n      // Q is orthogonal matrix\n      // R is upper triangular\n      QR: function () {\n        // x -> Q\n        // find a orthogonal matrix Q st.\n        // Qx=y\n        // y is [||x||,0,0,...]\n\n        // quick ref\n        var sum = jStat.sum;\n        var range = jStat.arange;\n        function qr2(x) {\n          // quick impletation\n          // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n          var n = x.length;\n          var p = x[0].length;\n          var r = jStat.zeros(p, p);\n          x = jStat.copy(x);\n          var i, j, k;\n          for (j = 0; j < p; j++) {\n            r[j][j] = Math.sqrt(sum(range(n).map(function (i) {\n              return x[i][j] * x[i][j];\n            })));\n            for (i = 0; i < n; i++) {\n              x[i][j] = x[i][j] / r[j][j];\n            }\n            for (k = j + 1; k < p; k++) {\n              r[j][k] = sum(range(n).map(function (i) {\n                return x[i][j] * x[i][k];\n              }));\n              for (i = 0; i < n; i++) {\n                x[i][k] = x[i][k] - x[i][j] * r[j][k];\n              }\n            }\n          }\n          return [x, r];\n        }\n        return qr2;\n      }(),\n      lstsq: function () {\n        // solve least squard problem for Ax=b as QR decomposition way if b is\n        // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n        // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n        function R_I(A) {\n          A = jStat.copy(A);\n          var size = A.length;\n          var I = jStat.identity(size);\n          jStat.arange(size - 1, -1, -1).forEach(function (i) {\n            jStat.sliceAssign(I, {\n              row: i\n            }, jStat.divide(jStat.slice(I, {\n              row: i\n            }), A[i][i]));\n            jStat.sliceAssign(A, {\n              row: i\n            }, jStat.divide(jStat.slice(A, {\n              row: i\n            }), A[i][i]));\n            jStat.arange(i).forEach(function (j) {\n              var c = jStat.multiply(A[j][i], -1);\n              var Aj = jStat.slice(A, {\n                row: j\n              });\n              var cAi = jStat.multiply(jStat.slice(A, {\n                row: i\n              }), c);\n              jStat.sliceAssign(A, {\n                row: j\n              }, jStat.add(Aj, cAi));\n              var Ij = jStat.slice(I, {\n                row: j\n              });\n              var cIi = jStat.multiply(jStat.slice(I, {\n                row: i\n              }), c);\n              jStat.sliceAssign(I, {\n                row: j\n              }, jStat.add(Ij, cIi));\n            });\n          });\n          return I;\n        }\n        function qr_solve(A, b) {\n          var array_mode = false;\n          if (b[0].length === undefined) {\n            // [c1,c2,c3] mode\n            b = b.map(function (x) {\n              return [x];\n            });\n            array_mode = true;\n          }\n          var QR = jStat.QR(A);\n          var Q = QR[0];\n          var R = QR[1];\n          var attrs = A[0].length;\n          var Q1 = jStat.slice(Q, {\n            col: {\n              end: attrs\n            }\n          });\n          var R1 = jStat.slice(R, {\n            row: {\n              end: attrs\n            }\n          });\n          var RI = R_I(R1);\n          var Q2 = jStat.transpose(Q1);\n          if (Q2[0].length === undefined) {\n            Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n          }\n\n          var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n          if (x.length === undefined) {\n            x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n          }\n\n          if (array_mode) return x.map(function (i) {\n            return i[0];\n          });\n          return x;\n        }\n        return qr_solve;\n      }(),\n      jacobi: function jacobi(a) {\n        var condition = 1;\n        var n = a.length;\n        var e = jStat.identity(n, n);\n        var ev = [];\n        var b, i, j, p, q, maxim, theta, s;\n        // condition === 1 only if tolerance is not reached\n        while (condition === 1) {\n          maxim = a[0][1];\n          p = 0;\n          q = 1;\n          for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n              if (i != j) {\n                if (maxim < Math.abs(a[i][j])) {\n                  maxim = Math.abs(a[i][j]);\n                  p = i;\n                  q = j;\n                }\n              }\n            }\n          }\n          if (a[p][p] === a[q][q]) theta = a[p][q] > 0 ? Math.PI / 4 : -Math.PI / 4;else theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n          s = jStat.identity(n, n);\n          s[p][p] = Math.cos(theta);\n          s[p][q] = -Math.sin(theta);\n          s[q][p] = Math.sin(theta);\n          s[q][q] = Math.cos(theta);\n          // eigen vector matrix\n          e = jStat.multiply(e, s);\n          b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n          a = b;\n          condition = 0;\n          for (i = 1; i < n; i++) {\n            for (j = 1; j < n; j++) {\n              if (i != j && Math.abs(a[i][j]) > 0.001) {\n                condition = 1;\n              }\n            }\n          }\n        }\n        for (i = 0; i < n; i++) ev.push(a[i][i]);\n        //returns both the eigenvalue and eigenmatrix\n        return [e, ev];\n      },\n      rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n        var k1, k2, u_j1, k3, k4;\n        if (order === 2) {\n          while (t_j <= p) {\n            k1 = h * f(t_j, u_j);\n            k2 = h * f(t_j + h, u_j + k1);\n            u_j1 = u_j + (k1 + k2) / 2;\n            u_j = u_j1;\n            t_j = t_j + h;\n          }\n        }\n        if (order === 4) {\n          while (t_j <= p) {\n            k1 = h * f(t_j, u_j);\n            k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n            k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n            k4 = h * f(t_j + h, u_j + k3);\n            u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n            u_j = u_j1;\n            t_j = t_j + h;\n          }\n        }\n        return u_j;\n      },\n      romberg: function romberg(f, a, b, order) {\n        var i = 0;\n        var h = (b - a) / 2;\n        var x = [];\n        var h1 = [];\n        var g = [];\n        var m, a1, j, k, I;\n        while (i < order / 2) {\n          I = f(a);\n          for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n          m = x.length;\n          for (j = 1; j < m - 1; j++) {\n            I += (j % 2 !== 0 ? 4 : 2) * f(x[j]);\n          }\n          I = h / 3 * (I + f(b));\n          g[i] = I;\n          h /= 2;\n          i++;\n        }\n        a1 = g.length;\n        m = 1;\n        while (a1 !== 1) {\n          for (j = 0; j < a1 - 1; j++) h1[j] = (Math.pow(4, m) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n          a1 = h1.length;\n          g = h1;\n          h1 = [];\n          m++;\n        }\n        return g;\n      },\n      richardson: function richardson(X, f, x, h) {\n        function pos(X, x) {\n          var i = 0;\n          var n = X.length;\n          var p;\n          for (; i < n; i++) if (X[i] === x) p = i;\n          return p;\n        }\n        var h_min = Math.abs(x - X[pos(X, x) + 1]);\n        var i = 0;\n        var g = [];\n        var h1 = [];\n        var y1, y2, m, a, j;\n        while (h >= h_min) {\n          y1 = pos(X, x + h);\n          y2 = pos(X, x);\n          g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n          h /= 2;\n          i++;\n        }\n        a = g.length;\n        m = 1;\n        while (a != 1) {\n          for (j = 0; j < a - 1; j++) h1[j] = (Math.pow(4, m) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n          a = h1.length;\n          g = h1;\n          h1 = [];\n          m++;\n        }\n        return g;\n      },\n      simpson: function simpson(f, a, b, n) {\n        var h = (b - a) / n;\n        var I = f(a);\n        var x = [];\n        var j = a;\n        var k = 0;\n        var i = 1;\n        var m;\n        for (; j <= b; j = j + h, k++) x[k] = j;\n        m = x.length;\n        for (; i < m - 1; i++) {\n          I += (i % 2 !== 0 ? 4 : 2) * f(x[i]);\n        }\n        return h / 3 * (I + f(b));\n      },\n      hermite: function hermite(X, F, dF, value) {\n        var n = X.length;\n        var p = 0;\n        var i = 0;\n        var l = [];\n        var dl = [];\n        var A = [];\n        var B = [];\n        var j;\n        for (; i < n; i++) {\n          l[i] = 1;\n          for (j = 0; j < n; j++) {\n            if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n          }\n          dl[i] = 0;\n          for (j = 0; j < n; j++) {\n            if (i != j) dl[i] += 1 / (X[i] - X[j]);\n          }\n          A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n          B[i] = (value - X[i]) * (l[i] * l[i]);\n          p += A[i] * F[i] + B[i] * dF[i];\n        }\n        return p;\n      },\n      lagrange: function lagrange(X, F, value) {\n        var p = 0;\n        var i = 0;\n        var j, l;\n        var n = X.length;\n        for (; i < n; i++) {\n          l = F[i];\n          for (j = 0; j < n; j++) {\n            // calculating the lagrange polynomial L_i\n            if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n          }\n          // adding the lagrange polynomials found above\n          p += l;\n        }\n        return p;\n      },\n      cubic_spline: function cubic_spline(X, F, value) {\n        var n = X.length;\n        var i = 0,\n          j;\n        var A = [];\n        var B = [];\n        var alpha = [];\n        var c = [];\n        var h = [];\n        var b = [];\n        var d = [];\n        for (; i < n - 1; i++) h[i] = X[i + 1] - X[i];\n        alpha[0] = 0;\n        for (i = 1; i < n - 1; i++) {\n          alpha[i] = 3 / h[i] * (F[i + 1] - F[i]) - 3 / h[i - 1] * (F[i] - F[i - 1]);\n        }\n        for (i = 1; i < n - 1; i++) {\n          A[i] = [];\n          B[i] = [];\n          A[i][i - 1] = h[i - 1];\n          A[i][i] = 2 * (h[i - 1] + h[i]);\n          A[i][i + 1] = h[i];\n          B[i][0] = alpha[i];\n        }\n        c = jStat.multiply(jStat.inv(A), B);\n        for (j = 0; j < n - 1; j++) {\n          b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n          d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n        }\n        for (j = 0; j < n; j++) {\n          if (X[j] > value) break;\n        }\n        j -= 1;\n        return F[j] + (value - X[j]) * b[j] + jStat.sq(value - X[j]) * c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n      },\n      gauss_quadrature: function gauss_quadrature() {\n        throw new Error('gauss_quadrature not yet implemented');\n      },\n      PCA: function PCA(X) {\n        var m = X.length;\n        var n = X[0].length;\n        var i = 0;\n        var j, temp1;\n        var u = [];\n        var D = [];\n        var result = [];\n        var temp2 = [];\n        var Y = [];\n        var Bt = [];\n        var B = [];\n        var C = [];\n        var V = [];\n        var Vt = [];\n        for (i = 0; i < m; i++) {\n          u[i] = jStat.sum(X[i]) / n;\n        }\n        for (i = 0; i < n; i++) {\n          B[i] = [];\n          for (j = 0; j < m; j++) {\n            B[i][j] = X[j][i] - u[j];\n          }\n        }\n        B = jStat.transpose(B);\n        for (i = 0; i < m; i++) {\n          C[i] = [];\n          for (j = 0; j < m; j++) {\n            C[i][j] = jStat.dot([B[i]], [B[j]]) / (n - 1);\n          }\n        }\n        result = jStat.jacobi(C);\n        V = result[0];\n        D = result[1];\n        Vt = jStat.transpose(V);\n        for (i = 0; i < D.length; i++) {\n          for (j = i; j < D.length; j++) {\n            if (D[i] < D[j]) {\n              temp1 = D[i];\n              D[i] = D[j];\n              D[j] = temp1;\n              temp2 = Vt[i];\n              Vt[i] = Vt[j];\n              Vt[j] = temp2;\n            }\n          }\n        }\n        Bt = jStat.transpose(B);\n        for (i = 0; i < m; i++) {\n          Y[i] = [];\n          for (j = 0; j < Bt.length; j++) {\n            Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n          }\n        }\n        return [X, D, Vt, Y];\n      }\n    });\n\n    // extend jStat.fn with methods that require one argument\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jStat.fn[passfunc] = function (arg, func) {\n          var tmpthis = this;\n          // check for callback\n          if (func) {\n            setTimeout(function () {\n              func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n            }, 15);\n            return this;\n          }\n          if (typeof jStat[passfunc](this, arg) === 'number') return jStat[passfunc](this, arg);else return jStat(jStat[passfunc](this, arg));\n        };\n      })(funcs[i]);\n    })('add divide multiply subtract dot pow exp log abs norm angle'.split(' '));\n  })(jStat, Math);\n  (function (jStat, Math) {\n    var slice = [].slice;\n    var isNumber = jStat.utils.isNumber;\n    var isArray = jStat.utils.isArray;\n\n    // flag==true denotes use of sample standard deviation\n    // Z Statistics\n    jStat.extend({\n      // 2 different parameter lists:\n      // (value, mean, sd)\n      // (value, array, flag)\n      zscore: function zscore() {\n        var args = slice.call(arguments);\n        if (isNumber(args[1])) {\n          return (args[0] - args[1]) / args[2];\n        }\n        return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n      },\n      // 3 different paramter lists:\n      // (value, mean, sd, sides)\n      // (zscore, sides)\n      // (value, array, sides, flag)\n      ztest: function ztest() {\n        var args = slice.call(arguments);\n        var z;\n        if (isArray(args[1])) {\n          // (value, array, sides, flag)\n          z = jStat.zscore(args[0], args[1], args[3]);\n          return args[2] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n        } else {\n          if (args.length > 2) {\n            // (value, mean, sd, sides)\n            z = jStat.zscore(args[0], args[1], args[2]);\n            return args[3] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n          } else {\n            // (zscore, sides)\n            z = args[0];\n            return args[1] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n          }\n        }\n      }\n    });\n    jStat.extend(jStat.fn, {\n      zscore: function zscore(value, flag) {\n        return (value - this.mean()) / this.stdev(flag);\n      },\n      ztest: function ztest(value, sides, flag) {\n        var zscore = Math.abs(this.zscore(value, flag));\n        return sides === 1 ? jStat.normal.cdf(-zscore, 0, 1) : jStat.normal.cdf(-zscore, 0, 1) * 2;\n      }\n    });\n\n    // T Statistics\n    jStat.extend({\n      // 2 parameter lists\n      // (value, mean, sd, n)\n      // (value, array)\n      tscore: function tscore() {\n        var args = slice.call(arguments);\n        return args.length === 4 ? (args[0] - args[1]) / (args[2] / Math.sqrt(args[3])) : (args[0] - jStat.mean(args[1])) / (jStat.stdev(args[1], true) / Math.sqrt(args[1].length));\n      },\n      // 3 different paramter lists:\n      // (value, mean, sd, n, sides)\n      // (tscore, n, sides)\n      // (value, array, sides)\n      ttest: function ttest() {\n        var args = slice.call(arguments);\n        var tscore;\n        if (args.length === 5) {\n          tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n          return args[4] === 1 ? jStat.studentt.cdf(-tscore, args[3] - 1) : jStat.studentt.cdf(-tscore, args[3] - 1) * 2;\n        }\n        if (isNumber(args[1])) {\n          tscore = Math.abs(args[0]);\n          return args[2] == 1 ? jStat.studentt.cdf(-tscore, args[1] - 1) : jStat.studentt.cdf(-tscore, args[1] - 1) * 2;\n        }\n        tscore = Math.abs(jStat.tscore(args[0], args[1]));\n        return args[2] == 1 ? jStat.studentt.cdf(-tscore, args[1].length - 1) : jStat.studentt.cdf(-tscore, args[1].length - 1) * 2;\n      }\n    });\n    jStat.extend(jStat.fn, {\n      tscore: function tscore(value) {\n        return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n      },\n      ttest: function ttest(value, sides) {\n        return sides === 1 ? 1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols() - 1) : jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols() - 1) * 2;\n      }\n    });\n\n    // F Statistics\n    jStat.extend({\n      // Paramter list is as follows:\n      // (array1, array2, array3, ...)\n      // or it is an array of arrays\n      // array of arrays conversion\n      anovafscore: function anovafscore() {\n        var args = slice.call(arguments),\n          expVar,\n          sample,\n          sampMean,\n          sampSampMean,\n          tmpargs,\n          unexpVar,\n          i,\n          j;\n        if (args.length === 1) {\n          tmpargs = new Array(args[0].length);\n          for (i = 0; i < args[0].length; i++) {\n            tmpargs[i] = args[0][i];\n          }\n          args = tmpargs;\n        }\n        // Builds sample array\n        sample = new Array();\n        for (i = 0; i < args.length; i++) {\n          sample = sample.concat(args[i]);\n        }\n        sampMean = jStat.mean(sample);\n        // Computes the explained variance\n        expVar = 0;\n        for (i = 0; i < args.length; i++) {\n          expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n        }\n        expVar /= args.length - 1;\n        // Computes unexplained variance\n        unexpVar = 0;\n        for (i = 0; i < args.length; i++) {\n          sampSampMean = jStat.mean(args[i]);\n          for (j = 0; j < args[i].length; j++) {\n            unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n          }\n        }\n        unexpVar /= sample.length - args.length;\n        return expVar / unexpVar;\n      },\n      // 2 different paramter setups\n      // (array1, array2, array3, ...)\n      // (anovafscore, df1, df2)\n      anovaftest: function anovaftest() {\n        var args = slice.call(arguments),\n          df1,\n          df2,\n          n,\n          i;\n        if (isNumber(args[0])) {\n          return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n        }\n        var anovafscore = jStat.anovafscore(args);\n        df1 = args.length - 1;\n        n = 0;\n        for (i = 0; i < args.length; i++) {\n          n = n + args[i].length;\n        }\n        df2 = n - df1 - 1;\n        return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n      },\n      ftest: function ftest(fscore, df1, df2) {\n        return 1 - jStat.centralF.cdf(fscore, df1, df2);\n      }\n    });\n    jStat.extend(jStat.fn, {\n      anovafscore: function anovafscore() {\n        return jStat.anovafscore(this.toArray());\n      },\n      anovaftes: function anovaftes() {\n        var n = 0;\n        var i;\n        for (i = 0; i < this.length; i++) {\n          n = n + this[i].length;\n        }\n        return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n      }\n    });\n\n    // Tukey's range test\n    jStat.extend({\n      // 2 parameter lists\n      // (mean1, mean2, n1, n2, sd)\n      // (array1, array2, sd)\n      qscore: function qscore() {\n        var args = slice.call(arguments);\n        var mean1, mean2, n1, n2, sd;\n        if (isNumber(args[0])) {\n          mean1 = args[0];\n          mean2 = args[1];\n          n1 = args[2];\n          n2 = args[3];\n          sd = args[4];\n        } else {\n          mean1 = jStat.mean(args[0]);\n          mean2 = jStat.mean(args[1]);\n          n1 = args[0].length;\n          n2 = args[1].length;\n          sd = args[2];\n        }\n        return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n      },\n      // 3 different parameter lists:\n      // (qscore, n, k)\n      // (mean1, mean2, n1, n2, sd, n, k)\n      // (array1, array2, sd, n, k)\n      qtest: function qtest() {\n        var args = slice.call(arguments);\n        var qscore;\n        if (args.length === 3) {\n          qscore = args[0];\n          args = args.slice(1);\n        } else if (args.length === 7) {\n          qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n          args = args.slice(5);\n        } else {\n          qscore = jStat.qscore(args[0], args[1], args[2]);\n          args = args.slice(3);\n        }\n        var n = args[0];\n        var k = args[1];\n        return 1 - jStat.tukey.cdf(qscore, k, n - k);\n      },\n      tukeyhsd: function tukeyhsd(arrays) {\n        var sd = jStat.pooledstdev(arrays);\n        var means = arrays.map(function (arr) {\n          return jStat.mean(arr);\n        });\n        var n = arrays.reduce(function (n, arr) {\n          return n + arr.length;\n        }, 0);\n        var results = [];\n        for (var i = 0; i < arrays.length; ++i) {\n          for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n          }\n        }\n        return results;\n      }\n    });\n\n    // Error Bounds\n    jStat.extend({\n      // 2 different parameter setups\n      // (value, alpha, sd, n)\n      // (value, alpha, array)\n      normalci: function normalci() {\n        var args = slice.call(arguments),\n          ans = new Array(2),\n          change;\n        if (args.length === 4) {\n          change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) * args[2] / Math.sqrt(args[3]));\n        } else {\n          change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) * jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n        }\n        ans[0] = args[0] - change;\n        ans[1] = args[0] + change;\n        return ans;\n      },\n      // 2 different parameter setups\n      // (value, alpha, sd, n)\n      // (value, alpha, array)\n      tci: function tci() {\n        var args = slice.call(arguments),\n          ans = new Array(2),\n          change;\n        if (args.length === 4) {\n          change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) * args[2] / Math.sqrt(args[3]));\n        } else {\n          change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) * jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n        }\n        ans[0] = args[0] - change;\n        ans[1] = args[0] + change;\n        return ans;\n      },\n      significant: function significant(pvalue, alpha) {\n        return pvalue < alpha;\n      }\n    });\n    jStat.extend(jStat.fn, {\n      normalci: function normalci(value, alpha) {\n        return jStat.normalci(value, alpha, this.toArray());\n      },\n      tci: function tci(value, alpha) {\n        return jStat.tci(value, alpha, this.toArray());\n      }\n    });\n\n    // internal method for calculating the z-score for a difference of proportions test\n    function differenceOfProportions(p1, n1, p2, n2) {\n      if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n        throw new Error(\"Proportions should be greater than 0 and less than 1\");\n      }\n      var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n      var se = Math.sqrt(pooled * (1 - pooled) * (1 / n1 + 1 / n2));\n      return (p1 - p2) / se;\n    }\n\n    // Difference of Proportions\n    jStat.extend(jStat.fn, {\n      oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n        var z = differenceOfProportions(p1, n1, p2, n2);\n        return jStat.ztest(z, 1);\n      },\n      twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n        var z = differenceOfProportions(p1, n1, p2, n2);\n        return jStat.ztest(z, 2);\n      }\n    });\n  })(jStat, Math);\n  jStat.models = function () {\n    function sub_regress(exog) {\n      var var_count = exog[0].length;\n      var modelList = jStat.arange(var_count).map(function (endog_index) {\n        var exog_index = jStat.arange(var_count).filter(function (i) {\n          return i !== endog_index;\n        });\n        return ols(jStat.col(exog, endog_index).map(function (x) {\n          return x[0];\n        }), jStat.col(exog, exog_index));\n      });\n      return modelList;\n    }\n\n    // do OLS model regress\n    // exog have include const columns ,it will not generate it .In fact, exog is\n    // \"design matrix\" look at\n    //https://en.wikipedia.org/wiki/Design_matrix\n    function ols(endog, exog) {\n      var nobs = endog.length;\n      var df_model = exog[0].length - 1;\n      var df_resid = nobs - df_model - 1;\n      var coef = jStat.lstsq(exog, endog);\n      var predict = jStat.multiply(exog, coef.map(function (x) {\n        return [x];\n      })).map(function (p) {\n        return p[0];\n      });\n      var resid = jStat.subtract(endog, predict);\n      var ybar = jStat.mean(endog);\n      // constant cause problem\n      // var SST = jStat.sum(endog.map(function(y) {\n      //   return Math.pow(y-ybar,2);\n      // }));\n      var SSE = jStat.sum(predict.map(function (f) {\n        return Math.pow(f - ybar, 2);\n      }));\n      var SSR = jStat.sum(endog.map(function (y, i) {\n        return Math.pow(y - predict[i], 2);\n      }));\n      var SST = SSE + SSR;\n      var R2 = SSE / SST;\n      return {\n        exog: exog,\n        endog: endog,\n        nobs: nobs,\n        df_model: df_model,\n        df_resid: df_resid,\n        coef: coef,\n        predict: predict,\n        resid: resid,\n        ybar: ybar,\n        SST: SST,\n        SSE: SSE,\n        SSR: SSR,\n        R2: R2\n      };\n    }\n\n    // H0: b_I=0\n    // H1: b_I!=0\n    function t_test(model) {\n      var subModelList = sub_regress(model.exog);\n      //var sigmaHat=jStat.stdev(model.resid);\n      var sigmaHat = Math.sqrt(model.SSR / model.df_resid);\n      var seBetaHat = subModelList.map(function (mod) {\n        var SST = mod.SST;\n        var R2 = mod.R2;\n        return sigmaHat / Math.sqrt(SST * (1 - R2));\n      });\n      var tStatistic = model.coef.map(function (coef, i) {\n        return (coef - 0) / seBetaHat[i];\n      });\n      var pValue = tStatistic.map(function (t) {\n        var leftppf = jStat.studentt.cdf(t, model.df_resid);\n        return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n      });\n      var c = jStat.studentt.inv(0.975, model.df_resid);\n      var interval95 = model.coef.map(function (coef, i) {\n        var d = c * seBetaHat[i];\n        return [coef - d, coef + d];\n      });\n      return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n      };\n    }\n    function F_test(model) {\n      var F_statistic = model.R2 / model.df_model / ((1 - model.R2) / model.df_resid);\n      var fcdf = function (x, n1, n2) {\n        return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2);\n      };\n      var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n      return {\n        F_statistic: F_statistic,\n        pvalue: pvalue\n      };\n    }\n    function ols_wrap(endog, exog) {\n      var model = ols(endog, exog);\n      var ttest = t_test(model);\n      var ftest = F_test(model);\n      // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n      // Which matches the 'adjusted R^2' provided by R's lm package\n      var adjust_R2 = 1 - (1 - model.R2) * ((model.nobs - 1) / model.df_resid);\n      model.t = ttest;\n      model.f = ftest;\n      model.adjust_R2 = adjust_R2;\n      return model;\n    }\n    return {\n      ols: ols_wrap\n    };\n  }();\n  //To regress, simply build X matrix\n  //(append column of 1's) using\n  //buildxmatrix and build the Y\n  //matrix using buildymatrix\n  //(simply the transpose)\n  //and run regress.\n\n  //Regressions\n\n  jStat.extend({\n    buildxmatrix: function buildxmatrix() {\n      //Parameters will be passed in as such\n      //(array1,array2,array3,...)\n      //as (x1,x2,x3,...)\n      //needs to be (1,x1,x2,x3,...)\n      var matrixRows = new Array(arguments.length);\n      for (var i = 0; i < arguments.length; i++) {\n        var array = [1];\n        matrixRows[i] = array.concat(arguments[i]);\n      }\n      return jStat(matrixRows);\n    },\n    builddxmatrix: function builddxmatrix() {\n      //Paramters will be passed in as such\n      //([array1,array2,...]\n      var matrixRows = new Array(arguments[0].length);\n      for (var i = 0; i < arguments[0].length; i++) {\n        var array = [1];\n        matrixRows[i] = array.concat(arguments[0][i]);\n      }\n      return jStat(matrixRows);\n    },\n    buildjxmatrix: function buildjxmatrix(jMat) {\n      //Builds from jStat Matrix\n      var pass = new Array(jMat.length);\n      for (var i = 0; i < jMat.length; i++) {\n        pass[i] = jMat[i];\n      }\n      return jStat.builddxmatrix(pass);\n    },\n    buildymatrix: function buildymatrix(array) {\n      return jStat(array).transpose();\n    },\n    buildjymatrix: function buildjymatrix(jMat) {\n      return jMat.transpose();\n    },\n    matrixmult: function matrixmult(A, B) {\n      var i, j, k, result, sum;\n      if (A.cols() == B.rows()) {\n        if (B.rows() > 1) {\n          result = [];\n          for (i = 0; i < A.rows(); i++) {\n            result[i] = [];\n            for (j = 0; j < B.cols(); j++) {\n              sum = 0;\n              for (k = 0; k < A.cols(); k++) {\n                sum += A.toArray()[i][k] * B.toArray()[k][j];\n              }\n              result[i][j] = sum;\n            }\n          }\n          return jStat(result);\n        }\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n    },\n    //regress and regresst to be fixed\n\n    regress: function regress(jMatX, jMatY) {\n      //print(\"regressin!\");\n      //print(jMatX.toArray());\n      var innerinv = jStat.xtranspxinv(jMatX);\n      //print(innerinv);\n      var xtransp = jMatX.transpose();\n      var next = jStat.matrixmult(jStat(innerinv), xtransp);\n      return jStat.matrixmult(next, jMatY);\n    },\n    regresst: function regresst(jMatX, jMatY, sides) {\n      var beta = jStat.regress(jMatX, jMatY);\n      var compile = {};\n      compile.anova = {};\n      var jMatYBar = jStat.jMatYBar(jMatX, beta);\n      compile.yBar = jMatYBar;\n      var yAverage = jMatY.mean();\n      compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n      compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n      compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n      compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n      compile.anova.mse = compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n      compile.anova.sst = jStat.sst(jMatY, yAverage);\n      compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n      compile.anova.r2 = 1 - compile.anova.sse / compile.anova.sst;\n      if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n      compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n      compile.anova.pvalue = jStat.anovaftest(compile.anova.fratio, jMatX[0].length - 1, jMatY.length - (jMatX[0].length - 1) - 1);\n      compile.anova.rmse = Math.sqrt(compile.anova.mse);\n      compile.anova.r2adj = 1 - compile.anova.mse / compile.anova.mst;\n      if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n      compile.stats = new Array(jMatX[0].length);\n      var covar = jStat.xtranspxinv(jMatX);\n      var sds, ts, ps;\n      for (var i = 0; i < beta.length; i++) {\n        sds = Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n        ts = Math.abs(beta[i] / sds);\n        ps = jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n        compile.stats[i] = [beta[i], sds, ts, ps];\n      }\n      compile.regress = beta;\n      return compile;\n    },\n    xtranspx: function xtranspx(jMatX) {\n      return jStat.matrixmult(jMatX.transpose(), jMatX);\n    },\n    xtranspxinv: function xtranspxinv(jMatX) {\n      var inner = jStat.matrixmult(jMatX.transpose(), jMatX);\n      var innerinv = jStat.inv(inner);\n      return innerinv;\n    },\n    jMatYBar: function jMatYBar(jMatX, beta) {\n      var yBar = jStat.matrixmult(jMatX, beta);\n      return new jStat(yBar);\n    },\n    residuals: function residuals(jMatY, jMatYBar) {\n      return jStat.matrixsubtract(jMatY, jMatYBar);\n    },\n    ssr: function ssr(jMatYBar, yAverage) {\n      var ssr = 0;\n      for (var i = 0; i < jMatYBar.length; i++) {\n        ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n      }\n      return ssr;\n    },\n    sse: function sse(jMatY, jMatYBar) {\n      var sse = 0;\n      for (var i = 0; i < jMatY.length; i++) {\n        sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n      }\n      return sse;\n    },\n    sst: function sst(jMatY, yAverage) {\n      var sst = 0;\n      for (var i = 0; i < jMatY.length; i++) {\n        sst += Math.pow(jMatY[i] - yAverage, 2);\n      }\n      return sst;\n    },\n    matrixsubtract: function matrixsubtract(A, B) {\n      var ans = new Array(A.length);\n      for (var i = 0; i < A.length; i++) {\n        ans[i] = new Array(A[i].length);\n        for (var j = 0; j < A[i].length; j++) {\n          ans[i][j] = A[i][j] - B[i][j];\n        }\n      }\n      return jStat(ans);\n    }\n  });\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n  return jStat;\n});","map":{"version":3,"names":["window","factory","exports","module","define","amd","jStat","Math","undefined","concat","Array","prototype","slice","toString","Object","calcRdx","n","m","val","pow","log","LOG10E","isArray","arg","call","isFunction","isNumber","num","toVector","arr","apply","_init","arguments","fn","args","map","i","length","seq","toArray","constructor","utils","_random_fn","random","setRandom","TypeError","extend","obj","j","rows","cols","dimensions","row","index","rowa","col","submat","arange","forEach","ind","column","cola","a","diag","nrow","res","antidiag","transpose","objArr","push","func","toAlter","ncol","cumreduce","alter","create","retZero","zeros","retOne","ones","rand","retIdent","identity","symmetric","size","clear","min","max","hival","step","current","cnt","start","end","rl","_slice","list","copy","rcSlice","colSlice","rowSlice","sliceAssign","A","B","nl","ml","diagonal","diagArray","mat","t","jProto","sort","splice","funcs","passfunc","self","results","setTimeout","split","ascNum","b","clip","sum","sumsqrd","sumsqerr","mean","tmp","sumrow","product","prod","low","high","unique","hash","_arr","meansqerr","geomean","median","arrlen","cumsum","cumprod","diff","diffs","arrLen","rank","distinctNumbers","numberCounts","number","sortedDistinctNumbers","numberRanks","currentRank","count","first","last","mode","maxCount","numMaxCount","mode_arr","range","variance","flag","pooledvariance","reduce","samples","deviation","dev","stdev","sqrt","pooledstdev","meandev","abs","meddev","coeffvar","quartiles","round","quantiles","quantilesArray","alphap","betap","sortedArray","quantileVals","p","aleph","k","gamma","floor","percentile","exclusive","realIndex","parseInt","frac","percentileOfScore","score","kind","counter","len","strict","value","histogram","binCnt","binWidth","bins","covariance","arr1","arr2","u","v","arr1Len","sq_dev","corrcoeff","spearmancoeff","stanMoment","mu","sigma","skewSum","skewness","kurtosis","fullbool","tmpthis","callbackFunction","argsToPass","curriedFunction","vector","gammaln","x","cof","ser","xx","y","loggam","x0","x2","xp","gl","gl0","PI","gammafn","q","fact","xden","xnum","z","yi","Infinity","sin","gammap","lowRegGamma","aln","ap","del","c","d","h","ITMAX","an","NaN","exp","factorialln","factorial","combination","combinationln","permutation","betafn","betaln","betacf","fpmin","qab","qap","qam","m2","aa","gammapinv","a1","EPS","gln","err","pp","lna1","afac","erf","isneg","dd","ty","erfc","erfcinv","ibetainv","b1","lna","lnb","al","w","ibeta","bt","randn","randg","shape","oalph","a2","f","_a","_b","_c","newthis","data","sample","vals","fnfunc","beta","pdf","alpha","cdf","inv","centralF","df1","df2","binomial","x1","cauchy","local","scale","atan","tan","chisquare","dof","exponential","rate","invgamma","kumaraswamy","Error","lognormal","noncentralt","ncp","tol","studentt","min_iterations","flip","prob","normal","lastvalue","std","pareto","SQRT2","dof2","weibull","uniform","betinc","eps","a0","b0","m9","c9","betacdf","s","negbin","r","hypgeom","N","scaledPDF","samplesDone","scaledCDF","factor","poisson","l","sumarr","sampleSmall","L","sampleLarge","lam","U","V","slam","loglam","invalpha","vr","us","triangular","arcsine","asin","cos","laplaceSign","laplace","tukeyWprob","rr","cc","nleg","ihalf","C1","C2","C3","bb","wlar","wincr1","wincr2","xleg","aleg","qsqz","pr_w","wincr","blb","binc","bub","einsum","cc1","wi","elsum","jj","ac","qexpo","pplus","pminus","rinsum","tukeyQinv","p0","q0","p1","q1","p2","q2","p3","q3","p4","q4","c1","c2","c3","c4","c5","vmax","ps","tukey","nmeans","df","nlegq","ihalfq","eps1","eps2","dhaf","dquar","deigh","dlarg","ulen1","ulen2","ulen3","ulen4","xlegq","alegq","Number","isFinite","f2","f2lf","f21","ff4","ulen","ans","otsum","twa1","t1","wprb","rotsum","maxiter","valx0","valx1","iter","xabs","isUsable","add","subtract","divide","multiply","nrescols","rescols","outer","dot","left","right","norm","nnorm","isNaN","angle","acos","aug","newarr","gauss_jordan","result","det","alen","alend","rowshift","colshift","mrow","mcol","gauss_elimination","maug","pivot","temp","y2","maxrow","triaUpSolve","parts","matrix_mode","triaLowSolve","lu","R","cholesky","T","gauss_jacobi","xv","xk","gauss_seidel","SOR","householder","QR","qr2","lstsq","R_I","I","Aj","cAi","Ij","cIi","qr_solve","array_mode","Q","attrs","Q1","R1","RI","Q2","jacobi","condition","e","ev","maxim","theta","rungekutta","t_j","u_j","order","k1","k2","u_j1","k3","k4","romberg","h1","g","richardson","X","pos","h_min","y1","simpson","hermite","F","dF","dl","lagrange","cubic_spline","sq","gauss_quadrature","PCA","temp1","D","temp2","Y","Bt","C","Vt","zscore","ztest","sides","tscore","ttest","anovafscore","expVar","sampMean","sampSampMean","tmpargs","unexpVar","anovaftest","ftest","fscore","anovaftes","qscore","mean1","mean2","n1","n2","sd","qtest","tukeyhsd","arrays","means","normalci","change","tci","significant","pvalue","differenceOfProportions","pooled","se","oneSidedDifferenceOfProportions","twoSidedDifferenceOfProportions","models","sub_regress","exog","var_count","modelList","endog_index","exog_index","filter","ols","endog","nobs","df_model","df_resid","coef","predict","resid","ybar","SSE","SSR","SST","R2","t_test","model","subModelList","sigmaHat","seBetaHat","mod","tStatistic","pValue","leftppf","interval95","F_test","F_statistic","fcdf","ols_wrap","adjust_R2","buildxmatrix","matrixRows","array","builddxmatrix","buildjxmatrix","jMat","pass","buildymatrix","buildjymatrix","matrixmult","regress","jMatX","jMatY","innerinv","xtranspxinv","xtransp","next","regresst","compile","anova","jMatYBar","yBar","yAverage","residuals","ssr","msr","sse","mse","sst","mst","r2","fratio","rmse","r2adj","stats","covar","sds","ts","xtranspx","inner","matrixsubtract"],"sources":["/Users/tomasmonge/Desktop/proyecto Estadistica/node_modules/jstat/dist/jstat.js"],"sourcesContent":["(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.jStat = factory();\n    }\n})(this, function () {\nvar jStat = (function(Math, undefined) {\n\n// For quick reference.\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n// Calculate correction for IEEE error\n// TODO: This calculation can be improved.\nfunction calcRdx(n, m) {\n  var val = n > m ? n : m;\n  return Math.pow(10,\n                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));\n}\n\n\nvar isArray = Array.isArray || function isArray(arg) {\n  return toString.call(arg) === '[object Array]';\n};\n\n\nfunction isFunction(arg) {\n  return toString.call(arg) === '[object Function]';\n}\n\n\nfunction isNumber(num) {\n  return (typeof num === 'number') ? num - num === 0 : false;\n}\n\n\n// Converts the jStat matrix to vector.\nfunction toVector(arr) {\n  return concat.apply([], arr);\n}\n\n\n// The one and only jStat constructor.\nfunction jStat() {\n  return new jStat._init(arguments);\n}\n\n\n// TODO: Remove after all references in src files have been removed.\njStat.fn = jStat.prototype;\n\n\n// By separating the initializer from the constructor it's easier to handle\n// always returning a new instance whether \"new\" was used or not.\njStat._init = function _init(args) {\n  // If first argument is an array, must be vector or matrix.\n  if (isArray(args[0])) {\n    // Check if matrix.\n    if (isArray(args[0][0])) {\n      // See if a mapping function was also passed.\n      if (isFunction(args[1]))\n        args[0] = jStat.map(args[0], args[1]);\n      // Iterate over each is faster than this.push.apply(this, args[0].\n      for (var i = 0; i < args[0].length; i++)\n        this[i] = args[0][i];\n      this.length = args[0].length;\n\n    // Otherwise must be a vector.\n    } else {\n      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n      this.length = 1;\n    }\n\n  // If first argument is number, assume creation of sequence.\n  } else if (isNumber(args[0])) {\n    this[0] = jStat.seq.apply(null, args);\n    this.length = 1;\n\n  // Handle case when jStat object is passed to jStat.\n  } else if (args[0] instanceof jStat) {\n    // Duplicate the object and pass it back.\n    return jStat(args[0].toArray());\n\n  // Unexpected argument value, return empty jStat object.\n  // TODO: This is strange behavior. Shouldn't this throw or some such to let\n  // the user know they had bad arguments?\n  } else {\n    this[0] = [];\n    this.length = 1;\n  }\n\n  return this;\n};\njStat._init.prototype = jStat.prototype;\njStat._init.constructor = jStat;\n\n\n// Utility functions.\n// TODO: for internal use only?\njStat.utils = {\n  calcRdx: calcRdx,\n  isArray: isArray,\n  isFunction: isFunction,\n  isNumber: isNumber,\n  toVector: toVector\n};\n\n\njStat._random_fn = Math.random;\njStat.setRandom = function setRandom(fn) {\n  if (typeof fn !== 'function')\n    throw new TypeError('fn is not a function');\n  jStat._random_fn = fn;\n};\n\n\n// Easily extend the jStat object.\n// TODO: is this seriously necessary?\njStat.extend = function extend(obj) {\n  var i, j;\n\n  if (arguments.length === 1) {\n    for (j in obj)\n      jStat[j] = obj[j];\n    return this;\n  }\n\n  for (i = 1; i < arguments.length; i++) {\n    for (j in arguments[i])\n      obj[j] = arguments[i][j];\n  }\n\n  return obj;\n};\n\n\n// Returns the number of rows in the matrix.\njStat.rows = function rows(arr) {\n  return arr.length || 1;\n};\n\n\n// Returns the number of columns in the matrix.\njStat.cols = function cols(arr) {\n  return arr[0].length || 1;\n};\n\n\n// Returns the dimensions of the object { rows: i, cols: j }\njStat.dimensions = function dimensions(arr) {\n  return {\n    rows: jStat.rows(arr),\n    cols: jStat.cols(arr)\n  };\n};\n\n\n// Returns a specified row as a vector or return a sub matrix by pick some rows\njStat.row = function row(arr, index) {\n  if (isArray(index)) {\n    return index.map(function(i) {\n      return jStat.row(arr, i);\n    })\n  }\n  return arr[index];\n};\n\n\n// return row as array\n// rowa([[1,2],[3,4]],0) -> [1,2]\njStat.rowa = function rowa(arr, i) {\n  return jStat.row(arr, i);\n};\n\n\n// Returns the specified column as a vector or return a sub matrix by pick some\n// columns\njStat.col = function col(arr, index) {\n  if (isArray(index)) {\n    var submat = jStat.arange(arr.length).map(function() {\n      return new Array(index.length);\n    });\n    index.forEach(function(ind, i){\n      jStat.arange(arr.length).forEach(function(j) {\n        submat[j][i] = arr[j][ind];\n      });\n    });\n    return submat;\n  }\n  var column = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++)\n    column[i] = [arr[i][index]];\n  return column;\n};\n\n\n// return column as array\n// cola([[1,2],[3,4]],0) -> [1,3]\njStat.cola = function cola(arr, i) {\n  return jStat.col(arr, i).map(function(a){ return a[0] });\n};\n\n\n// Returns the diagonal of the matrix\njStat.diag = function diag(arr) {\n  var nrow = jStat.rows(arr);\n  var res = new Array(nrow);\n  for (var row = 0; row < nrow; row++)\n    res[row] = [arr[row][row]];\n  return res;\n};\n\n\n// Returns the anti-diagonal of the matrix\njStat.antidiag = function antidiag(arr) {\n  var nrow = jStat.rows(arr) - 1;\n  var res = new Array(nrow);\n  for (var i = 0; nrow >= 0; nrow--, i++)\n    res[i] = [arr[i][nrow]];\n  return res;\n};\n\n// Transpose a matrix or array.\njStat.transpose = function transpose(arr) {\n  var obj = [];\n  var objArr, rows, cols, j, i;\n\n  // Make sure arr is in matrix format.\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  rows = arr.length;\n  cols = arr[0].length;\n\n  for (i = 0; i < cols; i++) {\n    objArr = new Array(rows);\n    for (j = 0; j < rows; j++)\n      objArr[j] = arr[j][i];\n    obj.push(objArr);\n  }\n\n  // If obj is vector, return only single array.\n  return obj.length === 1 ? obj[0] : obj;\n};\n\n\n// Map a function to an array or array of arrays.\n// \"toAlter\" is an internal variable.\njStat.map = function map(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    for (col = 0; col < ncol; col++)\n      res[row][col] = func(arr[row][col], row, col);\n  }\n\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Cumulatively combine the elements of an array or array of arrays using a function.\njStat.cumreduce = function cumreduce(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    if (ncol > 0)\n      res[row][0] = arr[row][0];\n    for (col = 1; col < ncol; col++)\n      res[row][col] = func(res[row][col-1], arr[row][col]);\n  }\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Destructively alter an array.\njStat.alter = function alter(arr, func) {\n  return jStat.map(arr, func, true);\n};\n\n\n// Generate a rows x cols matrix according to the supplied function.\njStat.create = function  create(rows, cols, func) {\n  var res = new Array(rows);\n  var i, j;\n\n  if (isFunction(cols)) {\n    func = cols;\n    cols = rows;\n  }\n\n  for (i = 0; i < rows; i++) {\n    res[i] = new Array(cols);\n    for (j = 0; j < cols; j++)\n      res[i][j] = func(i, j);\n  }\n\n  return res;\n};\n\n\nfunction retZero() { return 0; }\n\n\n// Generate a rows x cols matrix of zeros.\njStat.zeros = function zeros(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retZero);\n};\n\n\nfunction retOne() { return 1; }\n\n\n// Generate a rows x cols matrix of ones.\njStat.ones = function ones(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retOne);\n};\n\n\n// Generate a rows x cols matrix of uniformly random numbers.\njStat.rand = function rand(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, jStat._random_fn);\n};\n\n\nfunction retIdent(i, j) { return i === j ? 1 : 0; }\n\n\n// Generate an identity matrix of size row x cols.\njStat.identity = function identity(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retIdent);\n};\n\n\n// Tests whether a matrix is symmetric\njStat.symmetric = function symmetric(arr) {\n  var size = arr.length;\n  var row, col;\n\n  if (arr.length !== arr[0].length)\n    return false;\n\n  for (row = 0; row < size; row++) {\n    for (col = 0; col < size; col++)\n      if (arr[col][row] !== arr[row][col])\n        return false;\n  }\n\n  return true;\n};\n\n\n// Set all values to zero.\njStat.clear = function clear(arr) {\n  return jStat.alter(arr, retZero);\n};\n\n\n// Generate sequence.\njStat.seq = function seq(min, max, length, func) {\n  if (!isFunction(func))\n    func = false;\n\n  var arr = [];\n  var hival = calcRdx(min, max);\n  var step = (max * hival - min * hival) / ((length - 1) * hival);\n  var current = min;\n  var cnt;\n\n  // Current is assigned using a technique to compensate for IEEE error.\n  // TODO: Needs better implementation.\n  for (cnt = 0;\n       current <= max && cnt < length;\n       cnt++, current = (min * hival + step * hival * cnt) / hival) {\n    arr.push((func ? func(current, cnt) : current));\n  }\n\n  return arr;\n};\n\n\n// arange(5) -> [0,1,2,3,4]\n// arange(1,5) -> [1,2,3,4]\n// arange(5,1,-1) -> [5,4,3,2]\njStat.arange = function arange(start, end, step) {\n  var rl = [];\n  var i;\n  step = step || 1;\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  if (start === end || step === 0) {\n    return [];\n  }\n  if (start < end && step < 0) {\n    return [];\n  }\n  if (start > end && step > 0) {\n    return [];\n  }\n  if (step > 0) {\n    for (i = start; i < end; i += step) {\n      rl.push(i);\n    }\n  } else {\n    for (i = start; i > end; i += step) {\n      rl.push(i);\n    }\n  }\n  return rl;\n};\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n// slice(A,1,{start:1}) -> [5,6]\n// as numpy code A[:2,1:]\njStat.slice = (function(){\n  function _slice(list, start, end, step) {\n    // note it's not equal to range.map mode it's a bug\n    var i;\n    var rl = [];\n    var length = list.length;\n    if (start === undefined && end === undefined && step === undefined) {\n      return jStat.copy(list);\n    }\n\n    start = start || 0;\n    end = end || list.length;\n    start = start >= 0 ? start : length + start;\n    end = end >= 0 ? end : length + end;\n    step = step || 1;\n    if (start === end || step === 0) {\n      return [];\n    }\n    if (start < end && step < 0) {\n      return [];\n    }\n    if (start > end && step > 0) {\n      return [];\n    }\n    if (step > 0) {\n      for (i = start; i < end; i += step) {\n        rl.push(list[i]);\n      }\n    } else {\n      for (i = start; i > end;i += step) {\n        rl.push(list[i]);\n      }\n    }\n    return rl;\n  }\n\n  function slice(list, rcSlice) {\n    var colSlice, rowSlice;\n    rcSlice = rcSlice || {};\n    if (isNumber(rcSlice.row)) {\n      if (isNumber(rcSlice.col))\n        return list[rcSlice.row][rcSlice.col];\n      var row = jStat.rowa(list, rcSlice.row);\n      colSlice = rcSlice.col || {};\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    }\n\n    if (isNumber(rcSlice.col)) {\n      var col = jStat.cola(list, rcSlice.col);\n      rowSlice = rcSlice.row || {};\n      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n    }\n\n    rowSlice = rcSlice.row || {};\n    colSlice = rcSlice.col || {};\n    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n    return rows.map(function(row) {\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    });\n  }\n\n  return slice;\n}());\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n// A=[[1,2,3],[4,0,0],[7,0,0]]\njStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n  var nl, ml;\n  if (isNumber(rcSlice.row)) {\n    if (isNumber(rcSlice.col))\n      return A[rcSlice.row][rcSlice.col] = B;\n    rcSlice.col = rcSlice.col || {};\n    rcSlice.col.start = rcSlice.col.start || 0;\n    rcSlice.col.end = rcSlice.col.end || A[0].length;\n    rcSlice.col.step = rcSlice.col.step || 1;\n    nl = jStat.arange(rcSlice.col.start,\n                          Math.min(A.length, rcSlice.col.end),\n                          rcSlice.col.step);\n    var m = rcSlice.row;\n    nl.forEach(function(n, i) {\n      A[m][n] = B[i];\n    });\n    return A;\n  }\n\n  if (isNumber(rcSlice.col)) {\n    rcSlice.row = rcSlice.row || {};\n    rcSlice.row.start = rcSlice.row.start || 0;\n    rcSlice.row.end = rcSlice.row.end || A.length;\n    rcSlice.row.step = rcSlice.row.step || 1;\n    ml = jStat.arange(rcSlice.row.start,\n                          Math.min(A[0].length, rcSlice.row.end),\n                          rcSlice.row.step);\n    var n = rcSlice.col;\n    ml.forEach(function(m, j) {\n      A[m][n] = B[j];\n    });\n    return A;\n  }\n\n  if (B[0].length === undefined) {\n    B = [B];\n  }\n  rcSlice.row.start = rcSlice.row.start || 0;\n  rcSlice.row.end = rcSlice.row.end || A.length;\n  rcSlice.row.step = rcSlice.row.step || 1;\n  rcSlice.col.start = rcSlice.col.start || 0;\n  rcSlice.col.end = rcSlice.col.end || A[0].length;\n  rcSlice.col.step = rcSlice.col.step || 1;\n  ml = jStat.arange(rcSlice.row.start,\n                        Math.min(A.length, rcSlice.row.end),\n                        rcSlice.row.step);\n  nl = jStat.arange(rcSlice.col.start,\n                        Math.min(A[0].length, rcSlice.col.end),\n                        rcSlice.col.step);\n  ml.forEach(function(m, i) {\n    nl.forEach(function(n, j) {\n      A[m][n] = B[i][j];\n    });\n  });\n  return A;\n};\n\n\n// [1,2,3] ->\n// [[1,0,0],[0,2,0],[0,0,3]]\njStat.diagonal = function diagonal(diagArray) {\n  var mat = jStat.zeros(diagArray.length, diagArray.length);\n  diagArray.forEach(function(t, i) {\n    mat[i][i] = t;\n  });\n  return mat;\n};\n\n\n// return copy of A\njStat.copy = function copy(A) {\n  return A.map(function(row) {\n    if (isNumber(row))\n      return row;\n    return row.map(function(t) {\n      return t;\n    });\n  });\n};\n\n\n// TODO: Go over this entire implementation. Seems a tragic waste of resources\n// doing all this work. Instead, and while ugly, use new Function() to generate\n// a custom function for each static method.\n\n// Quick reference.\nvar jProto = jStat.prototype;\n\n// Default length.\njProto.length = 0;\n\n// For internal use only.\n// TODO: Check if they're actually used, and if they are then rename them\n// to _*\njProto.push = Array.prototype.push;\njProto.sort = Array.prototype.sort;\njProto.splice = Array.prototype.splice;\njProto.slice = Array.prototype.slice;\n\n\n// Return a clean array.\njProto.toArray = function toArray() {\n  return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n};\n\n\n// Map a function to a matrix or vector.\njProto.map = function map(func, toAlter) {\n  return jStat(jStat.map(this, func, toAlter));\n};\n\n\n// Cumulatively combine the elements of a matrix or vector using a function.\njProto.cumreduce = function cumreduce(func, toAlter) {\n  return jStat(jStat.cumreduce(this, func, toAlter));\n};\n\n\n// Destructively alter an array.\njProto.alter = function alter(func) {\n  jStat.alter(this, func);\n  return this;\n};\n\n\n// Extend prototype with methods that have no argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(func) {\n      var self = this,\n      results;\n      // Check for callback.\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self));\n        });\n        return this;\n      }\n      results = jStat[passfunc](this);\n      return isArray(results) ? jStat(results) : results;\n    };\n  })(funcs[i]);\n})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n\n// Extend prototype with methods that have one argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(index, func) {\n      var self = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self, index));\n        });\n        return this;\n      }\n      return jStat(jStat[passfunc](this, index));\n    };\n  })(funcs[i]);\n})('row col'.split(' '));\n\n\n// Extend prototype with simple shortcut methods.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('create zeros ones rand identity'.split(' '));\n\n\n// Exposing jStat.\nreturn jStat;\n\n}(Math));\n(function(jStat, Math) {\n\nvar isFunction = jStat.utils.isFunction;\n\n// Ascending functions for sort\nfunction ascNum(a, b) { return a - b; }\n\nfunction clip(arg, min, max) {\n  return Math.max(min, Math.min(arg, max));\n}\n\n\n// sum of an array\njStat.sum = function sum(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n\n// sum squared\njStat.sumsqrd = function sumsqrd(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i] * arr[i];\n  return sum;\n};\n\n\n// sum of squared errors of prediction (SSE)\njStat.sumsqerr = function sumsqerr(arr) {\n  var mean = jStat.mean(arr);\n  var sum = 0;\n  var i = arr.length;\n  var tmp;\n  while (--i >= 0) {\n    tmp = arr[i] - mean;\n    sum += tmp * tmp;\n  }\n  return sum;\n};\n\n// sum of an array in each row\njStat.sumrow = function sumrow(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n// product of an array\njStat.product = function product(arr) {\n  var prod = 1;\n  var i = arr.length;\n  while (--i >= 0)\n    prod *= arr[i];\n  return prod;\n};\n\n\n// minimum value of an array\njStat.min = function min(arr) {\n  var low = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] < low)\n      low = arr[i];\n  return low;\n};\n\n\n// maximum value of an array\njStat.max = function max(arr) {\n  var high = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] > high)\n      high = arr[i];\n  return high;\n};\n\n\n// unique values of an array\njStat.unique = function unique(arr) {\n  var hash = {}, _arr = [];\n  for(var i = 0; i < arr.length; i++) {\n    if (!hash[arr[i]]) {\n      hash[arr[i]] = true;\n      _arr.push(arr[i]);\n    }\n  }\n  return _arr;\n};\n\n\n// mean value of an array\njStat.mean = function mean(arr) {\n  return jStat.sum(arr) / arr.length;\n};\n\n\n// mean squared error (MSE)\njStat.meansqerr = function meansqerr(arr) {\n  return jStat.sumsqerr(arr) / arr.length;\n};\n\n\n// geometric mean of an array\njStat.geomean = function geomean(arr) {\n  return Math.pow(jStat.product(arr), 1 / arr.length);\n};\n\n\n// median of an array\njStat.median = function median(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  // check if array is even or odd, then return the appropriate\n  return !(arrlen & 1)\n    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2\n    : _arr[(arrlen / 2) | 0 ];\n};\n\n\n// cumulative sum of an array\njStat.cumsum = function cumsum(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a + b; });\n};\n\n\n// cumulative product of an array\njStat.cumprod = function cumprod(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a * b; });\n};\n\n\n// successive differences of a sequence\njStat.diff = function diff(arr) {\n  var diffs = [];\n  var arrLen = arr.length;\n  var i;\n  for (i = 1; i < arrLen; i++)\n    diffs.push(arr[i] - arr[i - 1]);\n  return diffs;\n};\n\n\n// ranks of an array\njStat.rank = function (arr) {\n  var i;\n  var distinctNumbers = [];\n  var numberCounts = {};\n  for (i = 0; i < arr.length; i++) {\n    var number = arr[i];\n    if (numberCounts[number]) {\n      numberCounts[number]++;\n    } else {\n      numberCounts[number] = 1;\n      distinctNumbers.push(number);\n    }\n  }\n\n  var sortedDistinctNumbers = distinctNumbers.sort(ascNum);\n  var numberRanks = {};\n  var currentRank = 1;\n  for (i = 0; i < sortedDistinctNumbers.length; i++) {\n    var number = sortedDistinctNumbers[i];\n    var count = numberCounts[number];\n    var first = currentRank;\n    var last = currentRank + count - 1;\n    var rank = (first + last) / 2;\n    numberRanks[number] = rank;\n    currentRank += count;\n  }\n\n  return arr.map(function (number) {\n    return numberRanks[number];\n  });\n};\n\n\n// mode of an array\n// if there are multiple modes of an array, return all of them\n// is this the appropriate way of handling it?\njStat.mode = function mode(arr) {\n  var arrLen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  var count = 1;\n  var maxCount = 0;\n  var numMaxCount = 0;\n  var mode_arr = [];\n  var i;\n\n  for (i = 0; i < arrLen; i++) {\n    if (_arr[i] === _arr[i + 1]) {\n      count++;\n    } else {\n      if (count > maxCount) {\n        mode_arr = [_arr[i]];\n        maxCount = count;\n        numMaxCount = 0;\n      }\n      // are there multiple max counts\n      else if (count === maxCount) {\n        mode_arr.push(_arr[i]);\n        numMaxCount++;\n      }\n      // resetting count for new value in array\n      count = 1;\n    }\n  }\n\n  return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n};\n\n\n// range of an array\njStat.range = function range(arr) {\n  return jStat.max(arr) - jStat.min(arr);\n};\n\n// variance of an array\n// flag = true indicates sample instead of population\njStat.variance = function variance(arr, flag) {\n  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n};\n\n// pooled variance of an array of arrays\njStat.pooledvariance = function pooledvariance(arr) {\n  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);\n  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);\n  return sumsqerr / (count - arr.length);\n};\n\n// deviation of an array\njStat.deviation = function (arr) {\n  var mean = jStat.mean(arr);\n  var arrlen = arr.length;\n  var dev = new Array(arrlen);\n  for (var i = 0; i < arrlen; i++) {\n    dev[i] = arr[i] - mean;\n  }\n  return dev;\n};\n\n// standard deviation of an array\n// flag = true indicates sample instead of population\njStat.stdev = function stdev(arr, flag) {\n  return Math.sqrt(jStat.variance(arr, flag));\n};\n\n// pooled standard deviation of an array of arrays\njStat.pooledstdev = function pooledstdev(arr) {\n  return Math.sqrt(jStat.pooledvariance(arr));\n};\n\n// mean deviation (mean absolute deviation) of an array\njStat.meandev = function meandev(arr) {\n  var mean = jStat.mean(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - mean));\n  }\n  return jStat.mean(a);\n};\n\n\n// median deviation (median absolute deviation) of an array\njStat.meddev = function meddev(arr) {\n  var median = jStat.median(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - median));\n  }\n  return jStat.median(a);\n};\n\n\n// coefficient of variation\njStat.coeffvar = function coeffvar(arr) {\n  return jStat.stdev(arr) / jStat.mean(arr);\n};\n\n\n// quartiles of an array\njStat.quartiles = function quartiles(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  return [\n    _arr[ Math.round((arrlen) / 4) - 1 ],\n    _arr[ Math.round((arrlen) / 2) - 1 ],\n    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]\n  ];\n};\n\n\n// Arbitary quantiles of an array. Direct port of the scipy.stats\n// implementation by Pierre GF Gerard-Marchant.\njStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n  var sortedArray = arr.slice().sort(ascNum);\n  var quantileVals = [quantilesArray.length];\n  var n = arr.length;\n  var i, p, m, aleph, k, gamma;\n\n  if (typeof alphap === 'undefined')\n    alphap = 3 / 8;\n  if (typeof betap === 'undefined')\n    betap = 3 / 8;\n\n  for (i = 0; i < quantilesArray.length; i++) {\n    p = quantilesArray[i];\n    m = alphap + p * (1 - alphap - betap);\n    aleph = n * p + m;\n    k = Math.floor(clip(aleph, 1, n - 1));\n    gamma = clip(aleph - k, 0, 1);\n    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n  }\n\n  return quantileVals;\n};\n\n// Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n// Passing true for the exclusive parameter excludes both endpoints of the range.\njStat.percentile = function percentile(arr, k, exclusive) {\n  var _arr = arr.slice().sort(ascNum);\n  var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n  var index = parseInt(realIndex);\n  var frac = realIndex - index;\n  if (index + 1 < _arr.length) {\n    return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n  } else {\n    return _arr[index - 1];\n  }\n}\n\n// The percentile rank of score in a given array. Returns the percentage\n// of all values in the input array that are less than (kind='strict') or\n// less or equal than (kind='weak') score. Default is weak.\njStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n  var counter = 0;\n  var len = arr.length;\n  var strict = false;\n  var value, i;\n\n  if (kind === 'strict')\n    strict = true;\n\n  for (i = 0; i < len; i++) {\n    value = arr[i];\n    if ((strict && value < score) ||\n        (!strict && value <= score)) {\n      counter++;\n    }\n  }\n\n  return counter / len;\n};\n\n\n// Histogram (bin count) data\njStat.histogram = function histogram(arr, binCnt) {\n  binCnt = binCnt || 4;\n  var first = jStat.min(arr);\n  var binWidth = (jStat.max(arr) - first) / binCnt;\n  var len = arr.length;\n  var bins = [];\n  var i;\n\n  for (i = 0; i < binCnt; i++)\n    bins[i] = 0;\n  for (i = 0; i < len; i++)\n    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;\n\n  return bins;\n};\n\n\n// covariance of two arrays\njStat.covariance = function covariance(arr1, arr2) {\n  var u = jStat.mean(arr1);\n  var v = jStat.mean(arr2);\n  var arr1Len = arr1.length;\n  var sq_dev = new Array(arr1Len);\n  var i;\n\n  for (i = 0; i < arr1Len; i++)\n    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n\n  return jStat.sum(sq_dev) / (arr1Len - 1);\n};\n\n\n// (pearson's) population correlation coefficient, rho\njStat.corrcoeff = function corrcoeff(arr1, arr2) {\n  return jStat.covariance(arr1, arr2) /\n      jStat.stdev(arr1, 1) /\n      jStat.stdev(arr2, 1);\n};\n\n  // (spearman's) rank correlation coefficient, sp\njStat.spearmancoeff =  function (arr1, arr2) {\n  arr1 = jStat.rank(arr1);\n  arr2 = jStat.rank(arr2);\n  //return pearson's correlation of the ranks:\n  return jStat.corrcoeff(arr1, arr2);\n}\n\n\n// statistical standardized moments (general form of skew/kurt)\njStat.stanMoment = function stanMoment(arr, n) {\n  var mu = jStat.mean(arr);\n  var sigma = jStat.stdev(arr);\n  var len = arr.length;\n  var skewSum = 0;\n\n  for (var i = 0; i < len; i++)\n    skewSum += Math.pow((arr[i] - mu) / sigma, n);\n\n  return skewSum / arr.length;\n};\n\n// (pearson's) moment coefficient of skewness\njStat.skewness = function skewness(arr) {\n  return jStat.stanMoment(arr, 3);\n};\n\n// (pearson's) (excess) kurtosis\njStat.kurtosis = function kurtosis(arr) {\n  return jStat.stanMoment(arr, 4) - 3;\n};\n\n\nvar jProto = jStat.prototype;\n\n\n// Extend jProto with method for calculating cumulative sums and products.\n// This differs from the similar extension below as cumsum and cumprod should\n// not be run again in the case fullbool === true.\n// If a matrix is passed, automatically assume operation should be done on the\n// columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('cumsum cumprod').split(' '));\n\n\n// Extend jProto with methods which don't require arguments and work on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        if (passfunc !== 'sumrow')\n          tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return fullbool === true\n            ? jStat[passfunc](jStat.utils.toVector(arr))\n            : arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +\n    'geomean median diff rank mode range variance deviation stdev meandev ' +\n    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n\n// Extend jProto with functions that take arguments. Operations on matrices are\n// done on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callbackFunction;\n\n      // If the last argument is a function, we assume it's a callback; we\n      // strip the callback out and call the function again.\n      if (isFunction(args[args.length - 1])) {\n        callbackFunction = args[args.length - 1];\n        var argsToPass = args.slice(0, args.length - 1);\n\n        setTimeout(function() {\n          callbackFunction.call(tmpthis,\n                                jProto[passfunc].apply(tmpthis, argsToPass));\n        });\n        return this;\n\n      // Otherwise we curry the function args and call normally.\n      } else {\n        callbackFunction = undefined;\n        var curriedFunction = function curriedFunction(vector) {\n          return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n        }\n      }\n\n      // If this is a matrix, run column-by-column.\n      if (this.length > 1) {\n        tmpthis = tmpthis.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = curriedFunction(tmpthis[i]);\n        return arr;\n      }\n\n      // Otherwise run on the vector.\n      return curriedFunction(this[0]);\n    };\n  })(funcs[i]);\n})('quantiles percentileOfScore'.split(' '));\n\n}(jStat, Math));\n// Special functions //\n(function(jStat, Math) {\n\n// Log-gamma function\njStat.gammaln = function gammaln(x) {\n  var j = 0;\n  var cof = [\n    76.18009172947146, -86.50532032941677, 24.01409824083091,\n    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n  ];\n  var ser = 1.000000000190015;\n  var xx, y, tmp;\n  tmp = (y = xx = x) + 5.5;\n  tmp -= (xx + 0.5) * Math.log(tmp);\n  for (; j < 6; j++)\n    ser += cof[j] / ++y;\n  return Math.log(2.5066282746310005 * ser / xx) - tmp;\n};\n\n/*\n * log-gamma function to support poisson distribution sampling. The\n * algorithm comes from SPECFUN by Shanjie Zhang and Jianming Jin and their\n * book \"Computation of Special Functions\", 1996, John Wiley & Sons, Inc.\n */\njStat.loggam = function loggam(x) {\n  var x0, x2, xp, gl, gl0;\n  var k, n;\n\n  var a = [8.333333333333333e-02, -2.777777777777778e-03,\n          7.936507936507937e-04, -5.952380952380952e-04,\n          8.417508417508418e-04, -1.917526917526918e-03,\n          6.410256410256410e-03, -2.955065359477124e-02,\n          1.796443723688307e-01, -1.39243221690590e+00];\n  x0 = x;\n  n = 0;\n  if ((x == 1.0) || (x == 2.0)) {\n      return 0.0;\n  }\n  if (x <= 7.0) {\n      n = Math.floor(7 - x);\n      x0 = x + n;\n  }\n  x2 = 1.0 / (x0 * x0);\n  xp = 2 * Math.PI;\n  gl0 = a[9];\n  for (k = 8; k >= 0; k--) {\n      gl0 *= x2;\n      gl0 += a[k];\n  }\n  gl = gl0 / x0 + 0.5 * Math.log(xp) + (x0 - 0.5) * Math.log(x0) - x0;\n  if (x <= 7.0) {\n      for (k = 1; k <= n; k++) {\n          gl -= Math.log(x0 - 1.0);\n          x0 -= 1.0;\n      }\n  }\n  return gl;\n}\n\n// gamma of x\njStat.gammafn = function gammafn(x) {\n  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\n           629.3311553128184, 866.9662027904133, -31451.272968848367,\n           -36144.413418691176, 66456.14382024054\n  ];\n  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\n           -3107.771671572311, 22538.118420980151, 4755.8462775278811,\n           -134659.9598649693, -115132.2596755535];\n  var fact = false;\n  var n = 0;\n  var xden = 0;\n  var xnum = 0;\n  var y = x;\n  var i, z, yi, res;\n  if (x > 171.6243769536076) {\n    return Infinity;\n  }\n  if (y <= 0) {\n    res = y % 1 + 3.6e-16;\n    if (res) {\n      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n      y = 1 - y;\n    } else {\n      return Infinity;\n    }\n  }\n  yi = y;\n  if (y < 1) {\n    z = y++;\n  } else {\n    z = (y -= n = (y | 0) - 1) - 1;\n  }\n  for (i = 0; i < 8; ++i) {\n    xnum = (xnum + p[i]) * z;\n    xden = xden * z + q[i];\n  }\n  res = xnum / xden + 1;\n  if (yi < y) {\n    res /= yi;\n  } else if (yi > y) {\n    for (i = 0; i < n; ++i) {\n      res *= y;\n      y++;\n    }\n  }\n  if (fact) {\n    res = fact / res;\n  }\n  return res;\n};\n\n\n// lower incomplete gamma function, which is usually typeset with a\n// lower-case greek gamma as the function symbol\njStat.gammap = function gammap(a, x) {\n  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n};\n\n\n// The lower regularized incomplete gamma function, usually written P(a,x)\njStat.lowRegGamma = function lowRegGamma(a, x) {\n  var aln = jStat.gammaln(a);\n  var ap = a;\n  var sum = 1 / a;\n  var del = sum;\n  var b = x + 1 - a;\n  var c = 1 / 1.0e-30;\n  var d = 1 / b;\n  var h = d;\n  var i = 1;\n  // calculate maximum number of itterations required for a\n  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n  var an;\n\n  if (x < 0 || a <= 0) {\n    return NaN;\n  } else if (x < a + 1) {\n    for (; i <= ITMAX; i++) {\n      sum += del *= x / ++ap;\n    }\n    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\n  }\n\n  for (; i <= ITMAX; i++) {\n    an = -i * (i - a);\n    b += 2;\n    d = an * d + b;\n    c = b + an / c;\n    d = 1 / d;\n    h *= d * c;\n  }\n\n  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\n};\n\n// natural log factorial of n\njStat.factorialln = function factorialln(n) {\n  return n < 0 ? NaN : jStat.gammaln(n + 1);\n};\n\n// factorial of n\njStat.factorial = function factorial(n) {\n  return n < 0 ? NaN : jStat.gammafn(n + 1);\n};\n\n// combinations of n, m\njStat.combination = function combination(n, m) {\n  // make sure n or m don't exceed the upper limit of usable values\n  return (n > 170 || m > 170)\n      ? Math.exp(jStat.combinationln(n, m))\n      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);\n};\n\n\njStat.combinationln = function combinationln(n, m){\n  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n};\n\n\n// permutations of n, m\njStat.permutation = function permutation(n, m) {\n  return jStat.factorial(n) / jStat.factorial(n - m);\n};\n\n\n// beta function\njStat.betafn = function betafn(x, y) {\n  // ensure arguments are positive\n  if (x <= 0 || y <= 0)\n    return undefined;\n  // make sure x + y doesn't exceed the upper limit of usable values\n  return (x + y > 170)\n      ? Math.exp(jStat.betaln(x, y))\n      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n};\n\n\n// natural logarithm of beta function\njStat.betaln = function betaln(x, y) {\n  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n};\n\n\n// Evaluates the continued fraction for incomplete beta function by modified\n// Lentz's method.\njStat.betacf = function betacf(x, a, b) {\n  var fpmin = 1e-30;\n  var m = 1;\n  var qab = a + b;\n  var qap = a + 1;\n  var qam = a - 1;\n  var c = 1;\n  var d = 1 - qab * x / qap;\n  var m2, aa, del, h;\n\n  // These q's will be used in factors that occur in the coefficients\n  if (Math.abs(d) < fpmin)\n    d = fpmin;\n  d = 1 / d;\n  h = d;\n\n  for (; m <= 100; m++) {\n    m2 = 2 * m;\n    aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n    // One step (the even one) of the recurrence\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    h *= d * c;\n    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n    // Next step of the recurrence (the odd one)\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    del = d * c;\n    h *= del;\n    if (Math.abs(del - 1.0) < 3e-7)\n      break;\n  }\n\n  return h;\n};\n\n\n// Returns the inverse of the lower regularized inomplete gamma function\njStat.gammapinv = function gammapinv(p, a) {\n  var j = 0;\n  var a1 = a - 1;\n  var EPS = 1e-8;\n  var gln = jStat.gammaln(a);\n  var x, err, t, u, pp, lna1, afac;\n\n  if (p >= 1)\n    return Math.max(100, a + 100 * Math.sqrt(a));\n  if (p <= 0)\n    return 0;\n  if (a > 1) {\n    lna1 = Math.log(a1);\n    afac = Math.exp(a1 * (lna1 - 1) - gln);\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    x = Math.max(1e-3,\n                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n  } else {\n    t = 1 - a * (0.253 + a * 0.12);\n    if (p < t)\n      x = Math.pow(p / t, 1 / a);\n    else\n      x = 1 - Math.log(1 - (p - t) / (1 - t));\n  }\n\n  for(; j < 12; j++) {\n    if (x <= 0)\n      return 0;\n    err = jStat.lowRegGamma(a, x) - p;\n    if (a > 1)\n      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n    else\n      t = Math.exp(-x + a1 * Math.log(x) - gln);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (Math.abs(t) < EPS * x)\n      break;\n  }\n\n  return x;\n};\n\n\n// Returns the error function erf(x)\njStat.erf = function erf(x) {\n  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\n             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\n             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\n             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\n             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\n             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\n             -6.886027e-12, 8.94487e-13, 3.13092e-13,\n             -1.12708e-13, 3.81e-16, 7.106e-15,\n             -1.523e-15, -9.4e-17, 1.21e-16,\n             -2.8e-17];\n  var j = cof.length - 1;\n  var isneg = false;\n  var d = 0;\n  var dd = 0;\n  var t, ty, tmp, res;\n\n  if (x < 0) {\n    x = -x;\n    isneg = true;\n  }\n\n  t = 2 / (2 + x);\n  ty = 4 * t - 2;\n\n  for(; j > 0; j--) {\n    tmp = d;\n    d = ty * d - dd + cof[j];\n    dd = tmp;\n  }\n\n  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n  return isneg ? res - 1 : 1 - res;\n};\n\n\n// Returns the complmentary error function erfc(x)\njStat.erfc = function erfc(x) {\n  return 1 - jStat.erf(x);\n};\n\n\n// Returns the inverse of the complementary error function\njStat.erfcinv = function erfcinv(p) {\n  var j = 0;\n  var x, err, t, pp;\n  if (p >= 2)\n    return -100;\n  if (p <= 0)\n    return 100;\n  pp = (p < 1) ? p : 2 - p;\n  t = Math.sqrt(-2 * Math.log(pp / 2));\n  x = -0.70711 * ((2.30753 + t * 0.27061) /\n                  (1 + t * (0.99229 + t * 0.04481)) - t);\n  for (; j < 2; j++) {\n    err = jStat.erfc(x) - pp;\n    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n  }\n  return (p < 1) ? x : -x;\n};\n\n\n// Returns the inverse of the incomplete beta function\njStat.ibetainv = function ibetainv(p, a, b) {\n  var EPS = 1e-8;\n  var a1 = a - 1;\n  var b1 = b - 1;\n  var j = 0;\n  var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n  if (p <= 0)\n    return 0;\n  if (p >= 1)\n    return 1;\n  if (a >= 1 && b >= 1) {\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    al = (x * x - 3) / 6;\n    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));\n    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\n        (al + 5 / 6 - 2 / (3 * h));\n    x = a / (a + b * Math.exp(2 * w));\n  } else {\n    lna = Math.log(a / (a + b));\n    lnb = Math.log(b / (a + b));\n    t = Math.exp(a * lna) / a;\n    u = Math.exp(b * lnb) / b;\n    w = t + u;\n    if (p < t / w)\n      x = Math.pow(a * w * p, 1 / a);\n    else\n      x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n  }\n  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n  for(; j < 10; j++) {\n    if (x === 0 || x === 1)\n      return x;\n    err = jStat.ibeta(x, a, b) - p;\n    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (x >= 1)\n      x = 0.5 * (x + t + 1);\n    if (Math.abs(t) < EPS * x && j > 0)\n      break;\n  }\n  return x;\n};\n\n\n// Returns the incomplete beta function I_x(a,b)\njStat.ibeta = function ibeta(x, a, b) {\n  // Factors in front of the continued fraction.\n  var bt = (x === 0 || x === 1) ?  0 :\n    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -\n             jStat.gammaln(b) + a * Math.log(x) + b *\n             Math.log(1 - x));\n  if (x < 0 || x > 1)\n    return false;\n  if (x < (a + 1) / (a + b + 2))\n    // Use continued fraction directly.\n    return bt * jStat.betacf(x, a, b) / a;\n  // else use continued fraction after making the symmetry transformation.\n  return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n};\n\n\n// Returns a normal deviate (mu=0, sigma=1).\n// If n and m are specified it returns a object of normal deviates.\njStat.randn = function randn(n, m) {\n  var u, v, x, y, q;\n  if (!m)\n    m = n;\n  if (n)\n    return jStat.create(n, m, function() { return jStat.randn(); });\n  do {\n    u = jStat._random_fn();\n    v = 1.7156 * (jStat._random_fn() - 0.5);\n    x = u - 0.449871;\n    y = Math.abs(v) + 0.386595;\n    q = x * x + y * (0.19600 * y - 0.25472 * x);\n  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n  return v / u;\n};\n\n\n// Returns a gamma deviate by the method of Marsaglia and Tsang.\njStat.randg = function randg(shape, n, m) {\n  var oalph = shape;\n  var a1, a2, u, v, x, mat;\n  if (!m)\n    m = n;\n  if (!shape)\n    shape = 1;\n  if (n) {\n    mat = jStat.zeros(n,m);\n    mat.alter(function() { return jStat.randg(shape); });\n    return mat;\n  }\n  if (shape < 1)\n    shape += 1;\n  a1 = shape - 1 / 3;\n  a2 = 1 / Math.sqrt(9 * a1);\n  do {\n    do {\n      x = jStat.randn();\n      v = 1 + a2 * x;\n    } while(v <= 0);\n    v = v * v * v;\n    u = jStat._random_fn();\n  } while(u > 1 - 0.331 * Math.pow(x, 4) &&\n          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));\n  // alpha > 1\n  if (shape == oalph)\n    return a1 * v;\n  // alpha < 1\n  do {\n    u = jStat._random_fn();\n  } while(u === 0);\n  return Math.pow(u, 1 / oalph) * a1 * v;\n};\n\n\n// making use of static methods on the instance\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(\n          jStat.map(this, function(value) { return jStat[passfunc](value); }));\n    }\n  })(funcs[i]);\n})('gammaln gammafn factorial factorialln'.split(' '));\n\n\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('randn'.split(' '));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\n// generate all distribution instance methods\n(function(list) {\n  for (var i = 0; i < list.length; i++) (function(func) {\n    // distribution instance method\n    jStat[func] = function f(a, b, c) {\n      if (!(this instanceof f))\n        return new f(a, b, c);\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      return this;\n    };\n    // distribution method to be used on a jStat instance\n    jStat.fn[func] = function(a, b, c) {\n      var newthis = jStat[func](a, b, c);\n      newthis.data = this;\n      return newthis;\n    };\n    // sample instance method\n    jStat[func].prototype.sample = function(arr) {\n      var a = this._a;\n      var b = this._b;\n      var c = this._c;\n      if (arr)\n        return jStat.alter(arr, function() {\n          return jStat[func].sample(a, b, c);\n        });\n      else\n        return jStat[func].sample(a, b, c);\n    };\n    // generate the pdf, cdf and inv instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function(x) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (!x && x !== 0)\n            x = this.data;\n          if (typeof x !== 'number') {\n            return jStat.fn.map.call(x, function(x) {\n              return jStat[func][fnfunc](x, a, b, c);\n            });\n          }\n          return jStat[func][fnfunc](x, a, b, c);\n        };\n      })(vals[i]);\n    })('pdf cdf inv'.split(' '));\n    // generate the mean, median, mode and variance instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function() {\n          return jStat[func][fnfunc](this._a, this._b, this._c);\n        };\n      })(vals[i]);\n    })('mean median mode variance'.split(' '));\n  })(list[i]);\n})((\n  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +\n  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +\n  'binomial negbin hypgeom poisson triangular tukey arcsine'\n).split(' '));\n\n\n\n// extend beta function with static methods\njStat.extend(jStat.beta, {\n  pdf: function pdf(x, alpha, beta) {\n    // PDF is zero outside the support\n    if (x > 1 || x < 0)\n      return 0;\n    // PDF is one for the uniform case\n    if (alpha == 1 && beta == 1)\n      return 1;\n\n    if (alpha < 512 && beta < 512) {\n      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\n          jStat.betafn(alpha, beta);\n    } else {\n      return Math.exp((alpha - 1) * Math.log(x) +\n                      (beta - 1) * Math.log(1 - x) -\n                      jStat.betaln(alpha, beta));\n    }\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n  },\n\n  inv: function inv(x, alpha, beta) {\n    return jStat.ibetainv(x, alpha, beta);\n  },\n\n  mean: function mean(alpha, beta) {\n    return alpha / (alpha + beta);\n  },\n\n  median: function median(alpha, beta) {\n    return jStat.ibetainv(0.5, alpha, beta);\n  },\n\n  mode: function mode(alpha, beta) {\n    return (alpha - 1 ) / ( alpha + beta - 2);\n  },\n\n  // return a random sample\n  sample: function sample(alpha, beta) {\n    var u = jStat.randg(alpha);\n    return u / (u + jStat.randg(beta));\n  },\n\n  variance: function variance(alpha, beta) {\n    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n  }\n});\n\n// extend F function with static methods\njStat.extend(jStat.centralF, {\n  // This implementation of the pdf function avoids float overflow\n  // See the way that R calculates this value:\n  // https://svn.r-project.org/R/trunk/src/nmath/df.c\n  pdf: function pdf(x, df1, df2) {\n    var p, q, f;\n\n    if (x < 0)\n      return 0;\n\n    if (df1 <= 2) {\n      if (x === 0 && df1 < 2) {\n        return Infinity;\n      }\n      if (x === 0 && df1 === 2) {\n        return 1;\n      }\n      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *\n              Math.pow(df1 / df2, df1 / 2) *\n              Math.pow(x, (df1/2) - 1) *\n              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\n    }\n\n    p = (df1 * x) / (df2 + x * df1);\n    q = df2 / (df2 + x * df1);\n    f = df1 * q / 2.0;\n    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n  },\n\n  cdf: function cdf(x, df1, df2) {\n    if (x < 0)\n      return 0;\n    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\n  },\n\n  inv: function inv(x, df1, df2) {\n    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n  },\n\n  mean: function mean(df1, df2) {\n    return (df2 > 2) ? df2 / (df2 - 2) : undefined;\n  },\n\n  mode: function mode(df1, df2) {\n    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;\n  },\n\n  // return a random sample\n  sample: function sample(df1, df2) {\n    var x1 = jStat.randg(df1 / 2) * 2;\n    var x2 = jStat.randg(df2 / 2) * 2;\n    return (x1 / df1) / (x2 / df2);\n  },\n\n  variance: function variance(df1, df2) {\n    if (df2 <= 4)\n      return undefined;\n    return 2 * df2 * df2 * (df1 + df2 - 2) /\n        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n  }\n});\n\n\n// extend cauchy function with static methods\njStat.extend(jStat.cauchy, {\n  pdf: function pdf(x, local, scale) {\n    if (scale < 0) { return 0; }\n\n    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;\n  },\n\n  cdf: function cdf(x, local, scale) {\n    return Math.atan((x - local) / scale) / Math.PI + 0.5;\n  },\n\n  inv: function(p, local, scale) {\n    return local + scale * Math.tan(Math.PI * (p - 0.5));\n  },\n\n  median: function median(local/*, scale*/) {\n    return local;\n  },\n\n  mode: function mode(local/*, scale*/) {\n    return local;\n  },\n\n  sample: function sample(local, scale) {\n    return jStat.randn() *\n        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n  }\n});\n\n\n\n// extend chisquare function with static methods\njStat.extend(jStat.chisquare, {\n  pdf: function pdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && dof === 2) ? 0.5 :\n        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\n                 Math.log(2) - jStat.gammaln(dof / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(dof / 2, x / 2);\n  },\n\n  inv: function(p, dof) {\n    return 2 * jStat.gammapinv(p, 0.5 * dof);\n  },\n\n  mean : function(dof) {\n    return dof;\n  },\n\n  // TODO: this is an approximation (is there a better way?)\n  median: function median(dof) {\n    return dof * Math.pow(1 - (2 / (9 * dof)), 3);\n  },\n\n  mode: function mode(dof) {\n    return (dof - 2 > 0) ? dof - 2 : 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randg(dof / 2) * 2;\n  },\n\n  variance: function variance(dof) {\n    return 2 * dof;\n  }\n});\n\n\n\n// extend exponential function with static methods\njStat.extend(jStat.exponential, {\n  pdf: function pdf(x, rate) {\n    return x < 0 ? 0 : rate * Math.exp(-rate * x);\n  },\n\n  cdf: function cdf(x, rate) {\n    return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n  },\n\n  inv: function(p, rate) {\n    return -Math.log(1 - p) / rate;\n  },\n\n  mean : function(rate) {\n    return 1 / rate;\n  },\n\n  median: function (rate) {\n    return (1 / rate) * Math.log(2);\n  },\n\n  mode: function mode(/*rate*/) {\n    return 0;\n  },\n\n  sample: function sample(rate) {\n    return -1 / rate * Math.log(jStat._random_fn());\n  },\n\n  variance : function(rate) {\n    return Math.pow(rate, -2);\n  }\n});\n\n\n\n// extend gamma function with static methods\njStat.extend(jStat.gamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && shape === 1) ? 1 / scale :\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\n                    jStat.gammaln(shape) - shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(shape, x / scale);\n  },\n\n  inv: function(p, shape, scale) {\n    return jStat.gammapinv(p, shape) * scale;\n  },\n\n  mean : function(shape, scale) {\n    return shape * scale;\n  },\n\n  mode: function mode(shape, scale) {\n    if(shape > 1) return (shape - 1) * scale;\n    return undefined;\n  },\n\n  sample: function sample(shape, scale) {\n    return jStat.randg(shape) * scale;\n  },\n\n  variance: function variance(shape, scale) {\n    return shape * scale * scale;\n  }\n});\n\n// extend inverse gamma function with static methods\njStat.extend(jStat.invgamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -\n                    jStat.gammaln(shape) + shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return 1 - jStat.lowRegGamma(shape, scale / x);\n  },\n\n  inv: function(p, shape, scale) {\n    return scale / jStat.gammapinv(1 - p, shape);\n  },\n\n  mean : function(shape, scale) {\n    return (shape > 1) ? scale / (shape - 1) : undefined;\n  },\n\n  mode: function mode(shape, scale) {\n    return scale / (shape + 1);\n  },\n\n  sample: function sample(shape, scale) {\n    return scale / jStat.randg(shape);\n  },\n\n  variance: function variance(shape, scale) {\n    if (shape <= 2)\n      return undefined;\n    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n  }\n});\n\n\n// extend kumaraswamy function with static methods\njStat.extend(jStat.kumaraswamy, {\n  pdf: function pdf(x, alpha, beta) {\n    if (x === 0 && alpha === 1)\n      return beta;\n    else if (x === 1 && beta === 1)\n      return alpha;\n    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *\n                    Math.log(x) + (beta - 1) *\n                    Math.log(1 - Math.pow(x, alpha)));\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    if (x < 0)\n      return 0;\n    else if (x > 1)\n      return 1;\n    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));\n  },\n\n  inv: function inv(p, alpha, beta) {\n    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n  },\n\n  mean : function(alpha, beta) {\n    return (beta * jStat.gammafn(1 + 1 / alpha) *\n            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));\n  },\n\n  median: function median(alpha, beta) {\n    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n  },\n\n  mode: function mode(alpha, beta) {\n    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))\n      return undefined;\n    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n  },\n\n  variance: function variance(/*alpha, beta*/) {\n    throw new Error('variance not yet implemented');\n    // TODO: complete this\n  }\n});\n\n\n\n// extend lognormal function with static methods\njStat.extend(jStat.lognormal, {\n  pdf: function pdf(x, mu, sigma) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\n                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\n                    (2 * sigma * sigma));\n  },\n\n  cdf: function cdf(x, mu, sigma) {\n    if (x < 0)\n      return 0;\n    return 0.5 +\n        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\n  },\n\n  inv: function(p, mu, sigma) {\n    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n  },\n\n  mean: function mean(mu, sigma) {\n    return Math.exp(mu + sigma * sigma / 2);\n  },\n\n  median: function median(mu/*, sigma*/) {\n    return Math.exp(mu);\n  },\n\n  mode: function mode(mu, sigma) {\n    return Math.exp(mu - sigma * sigma);\n  },\n\n  sample: function sample(mu, sigma) {\n    return Math.exp(jStat.randn() * sigma + mu);\n  },\n\n  variance: function variance(mu, sigma) {\n    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n  }\n});\n\n\n\n// extend noncentralt function with static methods\njStat.extend(jStat.noncentralt, {\n  pdf: function pdf(x, dof, ncp) {\n    var tol = 1e-14;\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.pdf(x, dof)\n\n    if (Math.abs(x) < tol) {  // different formula for x == 0\n      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -\n                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n    }\n\n    // formula for x != 0\n    return dof / x *\n        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -\n         jStat.noncentralt.cdf(x, dof, ncp));\n  },\n\n  cdf: function cdf(x, dof, ncp) {\n    var tol = 1e-14;\n    var min_iterations = 200;\n\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.cdf(x, dof);\n\n    // turn negative x into positive and flip result afterwards\n    var flip = false;\n    if (x < 0) {\n      flip = true;\n      ncp = -ncp;\n    }\n\n    var prob = jStat.normal.cdf(-ncp, 0, 1);\n    var value = tol + 1;\n    // use value at last two steps to determine convergence\n    var lastvalue = value;\n    var y = x * x / (x * x + dof);\n    var j = 0;\n    var p = Math.exp(-ncp * ncp / 2);\n    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -\n                     jStat.gammaln(3 / 2)) * ncp;\n    while (j < min_iterations || lastvalue > tol || value > tol) {\n      lastvalue = value;\n      if (j > 0) {\n        p *= (ncp * ncp) / (2 * j);\n        q *= (ncp * ncp) / (2 * (j + 1 / 2));\n      }\n      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +\n          q * jStat.beta.cdf(y, j+1, dof/2);\n      prob += 0.5 * value;\n      j++;\n    }\n\n    return flip ? (1 - prob) : prob;\n  }\n});\n\n\n// extend normal function with static methods\njStat.extend(jStat.normal, {\n  pdf: function pdf(x, mean, std) {\n    return Math.exp(-0.5 * Math.log(2 * Math.PI) -\n                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n  },\n\n  cdf: function cdf(x, mean, std) {\n    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n  },\n\n  inv: function(p, mean, std) {\n    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n  },\n\n  mean : function(mean/*, std*/) {\n    return mean;\n  },\n\n  median: function median(mean/*, std*/) {\n    return mean;\n  },\n\n  mode: function (mean/*, std*/) {\n    return mean;\n  },\n\n  sample: function sample(mean, std) {\n    return jStat.randn() * std + mean;\n  },\n\n  variance : function(mean, std) {\n    return std * std;\n  }\n});\n\n\n\n// extend pareto function with static methods\njStat.extend(jStat.pareto, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return 1 - Math.pow(scale / x, shape);\n  },\n\n  inv: function inv(p, scale, shape) {\n    return scale / Math.pow(1 - p, 1 / shape);\n  },\n\n  mean: function mean(scale, shape) {\n    if (shape <= 1)\n      return undefined;\n    return (shape * Math.pow(scale, shape)) / (shape - 1);\n  },\n\n  median: function median(scale, shape) {\n    return scale * (shape * Math.SQRT2);\n  },\n\n  mode: function mode(scale/*, shape*/) {\n    return scale;\n  },\n\n  variance : function(scale, shape) {\n    if (shape <= 2)\n      return undefined;\n    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));\n  }\n});\n\n\n\n// extend studentt function with static methods\njStat.extend(jStat.studentt, {\n  pdf: function pdf(x, dof) {\n    dof = dof > 1e100 ? 1e100 : dof;\n    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *\n        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    var dof2 = dof / 2;\n    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /\n                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n  },\n\n  inv: function(p, dof) {\n    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n    x = Math.sqrt(dof * (1 - x) / x);\n    return (p > 0.5) ? x : -x;\n  },\n\n  mean: function mean(dof) {\n    return (dof > 1) ? 0 : undefined;\n  },\n\n  median: function median(/*dof*/) {\n    return 0;\n  },\n\n  mode: function mode(/*dof*/) {\n    return 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n  },\n\n  variance: function variance(dof) {\n    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;\n  }\n});\n\n\n\n// extend weibull function with static methods\njStat.extend(jStat.weibull, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < 0 || scale < 0 || shape < 0)\n      return 0;\n    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\n        Math.exp(-(Math.pow((x / scale), shape)));\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\n  },\n\n  inv: function(p, scale, shape) {\n    return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n  },\n\n  mean : function(scale, shape) {\n    return scale * jStat.gammafn(1 + 1 / shape);\n  },\n\n  median: function median(scale, shape) {\n    return scale * Math.pow(Math.log(2), 1 / shape);\n  },\n\n  mode: function mode(scale, shape) {\n    if (shape <= 1)\n      return 0;\n    return scale * Math.pow((shape - 1) / shape, 1 / shape);\n  },\n\n  sample: function sample(scale, shape) {\n    return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n  },\n\n  variance: function variance(scale, shape) {\n    return scale * scale * jStat.gammafn(1 + 2 / shape) -\n        Math.pow(jStat.weibull.mean(scale, shape), 2);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.uniform, {\n  pdf: function pdf(x, a, b) {\n    return (x < a || x > b) ? 0 : 1 / (b - a);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (x - a) / (b - a);\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (p * (b - a));\n  },\n\n  mean: function mean(a, b) {\n    return 0.5 * (a + b);\n  },\n\n  median: function median(a, b) {\n    return jStat.mean(a, b);\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n  },\n\n  variance: function variance(a, b) {\n    return Math.pow(b - a, 2) / 12;\n  }\n});\n\n\n// Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\nfunction betinc(x, a, b, eps) {\n  var a0 = 0;\n  var b0 = 1;\n  var a1 = 1;\n  var b1 = 1;\n  var m9 = 0;\n  var a2 = 0;\n  var c9;\n\n  while (Math.abs((a1 - a2) / a1) > eps) {\n    a2 = a1;\n    c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n    a0 = a1 + c9 * a0;\n    b0 = b1 + c9 * b0;\n    m9 = m9 + 1;\n    c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n    a1 = a0 + c9 * a1;\n    b1 = b0 + c9 * b1;\n    a0 = a0 / b1;\n    b0 = b0 / b1;\n    a1 = a1 / b1;\n    b1 = 1;\n  }\n\n  return a1 / a;\n}\n\n\n// extend uniform function with static methods\njStat.extend(jStat.binomial, {\n  pdf: function pdf(k, n, p) {\n    return (p === 0 || p === 1) ?\n      ((n * p) === k ? 1 : 0) :\n      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n  },\n\n  cdf: function cdf(x, n, p) {\n    var betacdf;\n    var eps = 1e-10;\n\n    if (x < 0)\n      return 0;\n    if (x >= n)\n      return 1;\n    if (p < 0 || p > 1 || n <= 0)\n      return NaN;\n\n    x = Math.floor(x);\n    var z = p;\n    var a = x + 1;\n    var b = n - x;\n    var s = a + b;\n    var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) -\n                      jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n\n    if (z < (a + 1) / (s + 2))\n      betacdf = bt * betinc(z, a, b, eps);\n    else\n      betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n\n    return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.negbin, {\n  pdf: function pdf(k, r, p) {\n    if (k !== k >>> 0)\n      return false;\n    if (k < 0)\n      return 0;\n    return jStat.combination(k + r - 1, r - 1) *\n        Math.pow(1 - p, k) * Math.pow(p, r);\n  },\n\n  cdf: function cdf(x, r, p) {\n    var sum = 0,\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sum += jStat.negbin.pdf(k, r, p);\n    }\n    return sum;\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.hypgeom, {\n  pdf: function pdf(k, N, m, n) {\n    // Hypergeometric PDF.\n\n    // A simplification of the CDF algorithm below.\n\n    // k = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(k !== k | 0) {\n      return false;\n    } else if(k < 0 || k < m - (N - n)) {\n      // It's impossible to have this few successes drawn.\n      return 0;\n    } else if(k > n || k > m) {\n      // It's impossible to have this many successes drawn.\n      return 0;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return jStat.hypgeom.pdf(n - k, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return jStat.hypgeom.pdf(m - k, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.pdf(k, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate product to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < k; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledPDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          scaledPDF *= 1 - (m / (N - samplesDone));\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledPDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledPDF));\n    }\n  },\n\n  cdf: function cdf(x, N, m, n) {\n    // Hypergeometric CDF.\n\n    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n    // and comes from his hypergeometric test calculator at\n    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n    // x = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(x < 0 || x < m - (N - n)) {\n      // It's impossible to have this few successes drawn or fewer.\n      return 0;\n    } else if(x >= n || x >= m) {\n      // We will always have this many successes or fewer.\n      return 1;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.cdf(x, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate sum to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // Holds the intermediate, scaled total CDF.\n      var scaledCDF = 1;\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < x; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledCDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          var factor = 1 - (m / (N - samplesDone));\n\n          scaledPDF *= factor;\n          scaledCDF *= factor;\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n        // Add to the CDF answer.\n        scaledCDF += scaledPDF;\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledCDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledCDF));\n    }\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.poisson, {\n  pdf: function pdf(k, l) {\n    if (l < 0 || (k % 1) !== 0 || k < 0) {\n      return 0;\n    }\n\n    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n  },\n\n  cdf: function cdf(x, l) {\n    var sumarr = [],\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sumarr.push(jStat.poisson.pdf(k, l));\n    }\n    return jStat.sum(sumarr);\n  },\n\n  mean : function(l) {\n    return l;\n  },\n\n  variance : function(l) {\n    return l;\n  },\n\n  sampleSmall: function sampleSmall(l) {\n    var p = 1, k = 0, L = Math.exp(-l);\n    do {\n      k++;\n      p *= jStat._random_fn();\n    } while (p > L);\n    return k - 1;\n  },\n\n  sampleLarge: function sampleLarge(l) {\n    var lam = l;\n    var k;\n    var U, V, slam, loglam, a, b, invalpha, vr, us;\n\n    slam = Math.sqrt(lam);\n    loglam = Math.log(lam);\n    b = 0.931 + 2.53 * slam;\n    a = -0.059 + 0.02483 * b;\n    invalpha = 1.1239 + 1.1328 / (b - 3.4);\n    vr = 0.9277 - 3.6224 / (b - 2);\n\n    while (1) {\n      U = Math.random() - 0.5;\n      V = Math.random();\n      us = 0.5 - Math.abs(U);\n      k = Math.floor((2 * a / us + b) * U + lam + 0.43);\n      if ((us >= 0.07) && (V <= vr)) {\n          return k;\n      }\n      if ((k < 0) || ((us < 0.013) && (V > us))) {\n          continue;\n      }\n      /* log(V) == log(0.0) ok here */\n      /* if U==0.0 so that us==0.0, log is ok since always returns */\n      if ((Math.log(V) + Math.log(invalpha) - Math.log(a / (us * us) + b)) <= (-lam + k * loglam - jStat.loggam(k + 1))) {\n          return k;\n      }\n    }\n  },\n\n  sample: function sample(l) {\n    if (l < 10)\n      return this.sampleSmall(l);\n    else\n      return this.sampleLarge(l);\n  }\n});\n\n// extend triangular function with static methods\njStat.extend(jStat.triangular, {\n  pdf: function pdf(x, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (x < a || x > b) {\n        return 0;\n      } else if (x < c) {\n          return (2 * (x - a)) / ((b - a) * (c - a));\n      } else if (x === c) {\n          return (2 / (b - a));\n      } else { // x > c\n          return (2 * (b - x)) / ((b - a) * (b - c));\n      }\n    }\n  },\n\n  cdf: function cdf(x, a, b, c) {\n    if (b <= a || c < a || c > b)\n      return NaN;\n    if (x <= a)\n      return 0;\n    else if (x >= b)\n      return 1;\n    if (x <= c)\n      return Math.pow(x - a, 2) / ((b - a) * (c - a));\n    else // x > c\n      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n  },\n\n  inv: function inv(p, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (p <= ((c - a) / (b - a))) {\n        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n      } else { // p > ((c - a) / (b - a))\n        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));\n      }\n    }\n  },\n\n  mean: function mean(a, b, c) {\n    return (a + b + c) / 3;\n  },\n\n  median: function median(a, b, c) {\n    if (c <= (a + b) / 2) {\n      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n    } else if (c > (a + b) / 2) {\n      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n    }\n  },\n\n  mode: function mode(a, b, c) {\n    return c;\n  },\n\n  sample: function sample(a, b, c) {\n    var u = jStat._random_fn();\n    if (u < ((c - a) / (b - a)))\n      return a + Math.sqrt(u * (b - a) * (c - a))\n    return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n  },\n\n  variance: function variance(a, b, c) {\n    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n  }\n});\n\n\n// extend arcsine function with static methods\njStat.extend(jStat.arcsine, {\n  pdf: function pdf(x, a, b) {\n    if (b <= a) return NaN;\n\n    return (x <= a || x >= b) ? 0 :\n      (2 / Math.PI) *\n        Math.pow(Math.pow(b - a, 2) -\n                  Math.pow(2 * x - a - b, 2), -0.5);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n  },\n\n  mean: function mean(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  median: function median(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return ((a + b) / 2) + ((b - a) / 2) *\n      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n  },\n\n  variance: function variance(a, b) {\n    if (b <= a) return NaN;\n    return Math.pow(b - a, 2) / 8;\n  }\n});\n\n\nfunction laplaceSign(x) { return x / Math.abs(x); }\n\njStat.extend(jStat.laplace, {\n  pdf: function pdf(x, mu, b) {\n    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);\n  },\n\n  cdf: function cdf(x, mu, b) {\n    if (b <= 0) { return 0; }\n\n    if(x < mu) {\n      return 0.5 * Math.exp((x - mu) / b);\n    } else {\n      return 1 - 0.5 * Math.exp(- (x - mu) / b);\n    }\n  },\n\n  mean: function(mu/*, b*/) {\n    return mu;\n  },\n\n  median: function(mu/*, b*/) {\n    return mu;\n  },\n\n  mode: function(mu/*, b*/) {\n    return mu;\n  },\n\n  variance: function(mu, b) {\n    return 2 * b * b;\n  },\n\n  sample: function sample(mu, b) {\n    var u = jStat._random_fn() - 0.5;\n\n    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));\n  }\n});\n\nfunction tukeyWprob(w, rr, cc) {\n  var nleg = 12;\n  var ihalf = 6;\n\n  var C1 = -30;\n  var C2 = -50;\n  var C3 = 60;\n  var bb   = 8;\n  var wlar = 3;\n  var wincr1 = 2;\n  var wincr2 = 3;\n  var xleg = [\n    0.981560634246719250690549090149,\n    0.904117256370474856678465866119,\n    0.769902674194304687036893833213,\n    0.587317954286617447296702418941,\n    0.367831498998180193752691536644,\n    0.125233408511468915472441369464\n  ];\n  var aleg = [\n    0.047175336386511827194615961485,\n    0.106939325995318430960254718194,\n    0.160078328543346226334652529543,\n    0.203167426723065921749064455810,\n    0.233492536538354808760849898925,\n    0.249147045813402785000562436043\n  ];\n\n  var qsqz = w * 0.5;\n\n  // if w >= 16 then the integral lower bound (occurs for c=20)\n  // is 0.99999999999995 so return a value of 1.\n\n  if (qsqz >= bb)\n    return 1.0;\n\n  // find (f(w/2) - 1) ^ cc\n  // (first term in integral of hartley's form).\n\n  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n  // if pr_w ^ cc < 2e-22 then set pr_w = 0\n  if (pr_w >= Math.exp(C2 / cc))\n    pr_w = Math.pow(pr_w, cc);\n  else\n    pr_w = 0.0;\n\n  // if w is large then the second component of the\n  // integral is small, so fewer intervals are needed.\n\n  var wincr;\n  if (w > wlar)\n    wincr = wincr1;\n  else\n    wincr = wincr2;\n\n  // find the integral of second term of hartley's form\n  // for the integral of the range for equal-length\n  // intervals using legendre quadrature.  limits of\n  // integration are from (w/2, 8).  two or three\n  // equal-length intervals are used.\n\n  // blb and bub are lower and upper limits of integration.\n\n  var blb = qsqz;\n  var binc = (bb - qsqz) / wincr;\n  var bub = blb + binc;\n  var einsum = 0.0;\n\n  // integrate over each interval\n\n  var cc1 = cc - 1.0;\n  for (var wi = 1; wi <= wincr; wi++) {\n    var elsum = 0.0;\n    var a = 0.5 * (bub + blb);\n\n    // legendre quadrature with order = nleg\n\n    var b = 0.5 * (bub - blb);\n\n    for (var jj = 1; jj <= nleg; jj++) {\n      var j, xx;\n      if (ihalf < jj) {\n        j = (nleg - jj) + 1;\n        xx = xleg[j-1];\n      } else {\n        j = jj;\n        xx = -xleg[j-1];\n      }\n      var c = b * xx;\n      var ac = a + c;\n\n      // if exp(-qexpo/2) < 9e-14,\n      // then doesn't contribute to integral\n\n      var qexpo = ac * ac;\n      if (qexpo > C3)\n        break;\n\n      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n      // if rinsum ^ (cc-1) < 9e-14,\n      // then doesn't contribute to integral\n\n      var rinsum = (pplus * 0.5) - (pminus * 0.5);\n      if (rinsum >= Math.exp(C1 / cc1)) {\n        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);\n        elsum += rinsum;\n      }\n    }\n    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));\n    einsum += elsum;\n    blb = bub;\n    bub += binc;\n  }\n\n  // if pr_w ^ rr < 9e-14, then return 0\n  pr_w += einsum;\n  if (pr_w <= Math.exp(C1 / rr))\n    return 0;\n\n  pr_w = Math.pow(pr_w, rr);\n  if (pr_w >= 1) // 1 was iMax was eps\n    return 1;\n  return pr_w;\n}\n\nfunction tukeyQinv(p, c, v) {\n  var p0 = 0.322232421088;\n  var q0 = 0.993484626060e-01;\n  var p1 = -1.0;\n  var q1 = 0.588581570495;\n  var p2 = -0.342242088547;\n  var q2 = 0.531103462366;\n  var p3 = -0.204231210125;\n  var q3 = 0.103537752850;\n  var p4 = -0.453642210148e-04;\n  var q4 = 0.38560700634e-02;\n  var c1 = 0.8832;\n  var c2 = 0.2368;\n  var c3 = 1.214;\n  var c4 = 1.208;\n  var c5 = 1.4142;\n  var vmax = 120.0;\n\n  var ps = 0.5 - 0.5 * p;\n  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)\n     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n  if (v < vmax) t += (t * t * t + t) / v / 4.0;\n  var q = c1 - c2 * t;\n  if (v < vmax) q += -c3 / v + c4 * t / v;\n  return t * (q * Math.log(c - 1.0) + c5);\n}\n\njStat.extend(jStat.tukey, {\n  cdf: function cdf(q, nmeans, df) {\n    // Identical implementation as the R ptukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var nlegq = 16;\n    var ihalfq = 8;\n\n    var eps1 = -30.0;\n    var eps2 = 1.0e-14;\n    var dhaf  = 100.0;\n    var dquar = 800.0;\n    var deigh = 5000.0;\n    var dlarg = 25000.0;\n    var ulen1 = 1.0;\n    var ulen2 = 0.5;\n    var ulen3 = 0.25;\n    var ulen4 = 0.125;\n    var xlegq = [\n      0.989400934991649932596154173450,\n      0.944575023073232576077988415535,\n      0.865631202387831743880467897712,\n      0.755404408355003033895101194847,\n      0.617876244402643748446671764049,\n      0.458016777657227386342419442984,\n      0.281603550779258913230460501460,\n      0.950125098376374401853193354250e-1\n    ];\n    var alegq = [\n      0.271524594117540948517805724560e-1,\n      0.622535239386478928628438369944e-1,\n      0.951585116824927848099251076022e-1,\n      0.124628971255533872052476282192,\n      0.149595988816576732081501730547,\n      0.169156519395002538189312079030,\n      0.182603415044923588866763667969,\n      0.189450610455068496285396723208\n    ];\n\n    if (q <= 0)\n      return 0;\n\n    // df must be > 1\n    // there must be at least two values\n\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (!Number.isFinite(q))\n      return 1;\n\n    if (df > dlarg)\n      return tukeyWprob(q, rr, cc);\n\n    // calculate leading constant\n\n    var f2 = df * 0.5;\n    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);\n    var f21 = f2 - 1.0;\n\n    // integral is divided into unit, half-unit, quarter-unit, or\n    // eighth-unit length intervals depending on the value of the\n    // degrees of freedom.\n\n    var ff4 = df * 0.25;\n    var ulen;\n    if      (df <= dhaf)  ulen = ulen1;\n    else if (df <= dquar) ulen = ulen2;\n    else if (df <= deigh) ulen = ulen3;\n    else                  ulen = ulen4;\n\n    f2lf += Math.log(ulen);\n\n    // integrate over each subinterval\n\n    var ans = 0.0;\n\n    for (var i = 1; i <= 50; i++) {\n      var otsum = 0.0;\n\n      // legendre quadrature with order = nlegq\n      // nodes (stored in xlegq) are symmetric around zero.\n\n      var twa1 = (2 * i - 1) * ulen;\n\n      for (var jj = 1; jj <= nlegq; jj++) {\n        var j, t1;\n        if (ihalfq < jj) {\n          j = jj - ihalfq - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))\n              - (((xlegq[j] * ulen) + twa1) * ff4);\n        } else {\n          j = jj - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))\n              + (((xlegq[j] * ulen) - twa1) * ff4);\n        }\n\n        // if exp(t1) < 9e-14, then doesn't contribute to integral\n        var qsqz;\n        if (t1 >= eps1) {\n          if (ihalfq < jj) {\n            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);\n          } else {\n            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);\n          }\n\n          // call wprob to find integral of range portion\n\n          var wprb = tukeyWprob(qsqz, rr, cc);\n          var rotsum = (wprb * alegq[j]) * Math.exp(t1);\n          otsum += rotsum;\n        }\n        // end legendre integral for interval i\n        // L200:\n      }\n\n      // if integral for interval i < 1e-14, then stop.\n      // However, in order to avoid small area under left tail,\n      // at least  1 / ulen  intervals are calculated.\n      if (i * ulen >= 1.0 && otsum <= eps2)\n        break;\n\n      // end of interval i\n      // L330:\n\n      ans += otsum;\n    }\n\n    if (otsum > eps2) { // not converged\n      throw new Error('tukey.cdf failed to converge');\n    }\n    if (ans > 1)\n      ans = 1;\n    return ans;\n  },\n\n  inv: function(p, nmeans, df) {\n    // Identical implementation as the R qtukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var eps = 0.0001;\n    var maxiter = 50;\n\n    // df must be > 1 ; there must be at least two values\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (p < 0 || p > 1) return NaN;\n    if (p === 0) return 0;\n    if (p === 1) return Infinity;\n\n    // Initial value\n\n    var x0 = tukeyQinv(p, cc, df);\n\n    // Find prob(value < x0)\n\n    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n    // Find the second iterate and prob(value < x1).\n    // If the first iterate has probability value\n    // exceeding p then second iterate is 1 less than\n    // first iterate; otherwise it is 1 greater.\n\n    var x1;\n    if (valx0 > 0.0)\n      x1 = Math.max(0.0, x0 - 1.0);\n    else\n      x1 = x0 + 1.0;\n    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n    // Find new iterate\n\n    var ans;\n    for(var iter = 1; iter < maxiter; iter++) {\n      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));\n      valx0 = valx1;\n\n      // New iterate must be >= 0\n\n      x0 = x1;\n      if (ans < 0.0) {\n        ans = 0.0;\n        valx1 = -p;\n      }\n      // Find prob(value < new iterate)\n\n      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n      x1 = ans;\n\n      // If the difference between two successive\n      // iterates is less than eps, stop\n\n      var xabs = Math.abs(x1 - x0);\n      if (xabs < eps)\n        return ans;\n    }\n\n    throw new Error('tukey.inv failed to converge');\n  }\n});\n\n}(jStat, Math));\n/* Provides functions for the solution of linear system of equations, integration, extrapolation,\n * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n(function(jStat, Math) {\n\nvar push = Array.prototype.push;\nvar isArray = jStat.utils.isArray;\n\nfunction isUsable(arg) {\n  return isArray(arg) || arg instanceof jStat;\n}\n\njStat.extend({\n\n  // add a vector/matrix to a vector/matrix or scalar\n  add: function add(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value + arg[row][col];\n      });\n    }\n    return jStat.map(arr, function(value) { return value + arg; });\n  },\n\n  // subtract a vector or scalar from the vector\n  subtract: function subtract(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value - arg[row][col] || 0;\n      });\n    }\n    return jStat.map(arr, function(value) { return value - arg; });\n  },\n\n  // matrix division\n  divide: function divide(arr, arg) {\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.multiply(arr, jStat.inv(arg));\n    }\n    return jStat.map(arr, function(value) { return value / arg; });\n  },\n\n  // matrix multiplication\n  multiply: function multiply(arr, arg) {\n    var row, col, nrescols, sum, nrow, ncol, res, rescols;\n    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n    if (arr.length === undefined && arg.length === undefined) {\n      return arr * arg;\n    }\n    nrow = arr.length,\n    ncol = arr[0].length,\n    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),\n    rescols = 0;\n    if (isUsable(arg)) {\n      for (; rescols < nrescols; rescols++) {\n        for (row = 0; row < nrow; row++) {\n          sum = 0;\n          for (col = 0; col < ncol; col++)\n          sum += arr[row][col] * arg[col][rescols];\n          res[row][rescols] = sum;\n        }\n      }\n      return (nrow === 1 && rescols === 1) ? res[0][0] : res;\n    }\n    return jStat.map(arr, function(value) { return value * arg; });\n  },\n\n  // outer([1,2,3],[4,5,6])\n  // ===\n  // [[1],[2],[3]] times [[4,5,6]]\n  // ->\n  // [[4,5,6],[8,10,12],[12,15,18]]\n  outer:function outer(A, B) {\n    return jStat.multiply(A.map(function(t){ return [t] }), [B]);\n  },\n\n\n  // Returns the dot product of two matricies\n  dot: function dot(arr, arg) {\n    if (!isUsable(arr[0])) arr = [ arr ];\n    if (!isUsable(arg[0])) arg = [ arg ];\n    // convert column to row vector\n    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,\n    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,\n    res = [],\n    row = 0,\n    nrow = left.length,\n    ncol = left[0].length,\n    sum, col;\n    for (; row < nrow; row++) {\n      res[row] = [];\n      sum = 0;\n      for (col = 0; col < ncol; col++)\n      sum += left[row][col] * right[row][col];\n      res[row] = sum;\n    }\n    return (res.length === 1) ? res[0] : res;\n  },\n\n  // raise every element by a scalar\n  pow: function pow(arr, arg) {\n    return jStat.map(arr, function(value) { return Math.pow(value, arg); });\n  },\n\n  // exponentiate every element\n  exp: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.exp(value); });\n  },\n\n  // generate the natural log of every element\n  log: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.log(value); });\n  },\n\n  // generate the absolute values of the vector\n  abs: function abs(arr) {\n    return jStat.map(arr, function(value) { return Math.abs(value); });\n  },\n\n  // computes the p-norm of the vector\n  // In the case that a matrix is passed, uses the first row as the vector\n  norm: function norm(arr, p) {\n    var nnorm = 0,\n    i = 0;\n    // check the p-value of the norm, and set for most common case\n    if (isNaN(p)) p = 2;\n    // check if multi-dimensional array, and make vector correction\n    if (isUsable(arr[0])) arr = arr[0];\n    // vector norm\n    for (; i < arr.length; i++) {\n      nnorm += Math.pow(Math.abs(arr[i]), p);\n    }\n    return Math.pow(nnorm, 1 / p);\n  },\n\n  // computes the angle between two vectors in rads\n  // In case a matrix is passed, this uses the first row as the vector\n  angle: function angle(arr, arg) {\n    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n  },\n\n  // augment one matrix by another\n  // Note: this function returns a matrix, not a jStat object\n  aug: function aug(a, b) {\n    var newarr = [];\n    var i;\n    for (i = 0; i < a.length; i++) {\n      newarr.push(a[i].slice());\n    }\n    for (i = 0; i < newarr.length; i++) {\n      push.apply(newarr[i], b[i]);\n    }\n    return newarr;\n  },\n\n  // The inv() function calculates the inverse of a matrix\n  // Create the inverse by augmenting the matrix by the identity matrix of the\n  // appropriate size, and then use G-J elimination on the augmented matrix.\n  inv: function inv(a) {\n    var rows = a.length;\n    var cols = a[0].length;\n    var b = jStat.identity(rows, cols);\n    var c = jStat.gauss_jordan(a, b);\n    var result = [];\n    var i = 0;\n    var j;\n\n    //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n    for (; i < rows; i++) {\n      result[i] = [];\n      for (j = cols; j < c[0].length; j++)\n        result[i][j - cols] = c[i][j];\n    }\n    return result;\n  },\n\n  // calculate the determinant of a matrix\n  det: function det(a) {\n    var alen = a.length,\n    alend = alen * 2,\n    vals = new Array(alend),\n    rowshift = alen - 1,\n    colshift = alend - 1,\n    mrow = rowshift - alen + 1,\n    mcol = colshift,\n    i = 0,\n    result = 0,\n    j;\n    // check for special 2x2 case\n    if (alen === 2) {\n      return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n    }\n    for (; i < alend; i++) {\n      vals[i] = 1;\n    }\n    for (i = 0; i < alen; i++) {\n      for (j = 0; j < alen; j++) {\n        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];\n        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];\n        mrow++;\n        mcol--;\n      }\n      mrow = --rowshift - alen + 1;\n      mcol = --colshift;\n    }\n    for (i = 0; i < alen; i++) {\n      result += vals[i];\n    }\n    for (; i < alend; i++) {\n      result -= vals[i];\n    }\n    return result;\n  },\n\n  gauss_elimination: function gauss_elimination(a, b) {\n    var i = 0,\n    j = 0,\n    n = a.length,\n    m = a[0].length,\n    factor = 1,\n    sum = 0,\n    x = [],\n    maug, pivot, temp, k;\n    a = jStat.aug(a, b);\n    maug = a[0].length;\n    for(i = 0; i < n; i++) {\n      pivot = a[i][i];\n      j = i;\n      for (k = i + 1; k < m; k++) {\n        if (pivot < Math.abs(a[k][i])) {\n          pivot = a[k][i];\n          j = k;\n        }\n      }\n      if (j != i) {\n        for(k = 0; k < maug; k++) {\n          temp = a[i][k];\n          a[i][k] = a[j][k];\n          a[j][k] = temp;\n        }\n      }\n      for (j = i + 1; j < n; j++) {\n        factor = a[j][i] / a[i][i];\n        for(k = i; k < maug; k++) {\n          a[j][k] = a[j][k] - factor * a[i][k];\n        }\n      }\n    }\n    for (i = n - 1; i >= 0; i--) {\n      sum = 0;\n      for (j = i + 1; j<= n - 1; j++) {\n        sum = sum + x[j] * a[i][j];\n      }\n      x[i] =(a[i][maug - 1] - sum) / a[i][i];\n    }\n    return x;\n  },\n\n  gauss_jordan: function gauss_jordan(a, b) {\n    var m = jStat.aug(a, b);\n    var h = m.length;\n    var w = m[0].length;\n    var c = 0;\n    var x, y, y2;\n    // find max pivot\n    for (y = 0; y < h; y++) {\n      var maxrow = y;\n      for (y2 = y+1; y2 < h; y2++) {\n        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n          maxrow = y2;\n      }\n      var tmp = m[y];\n      m[y] = m[maxrow];\n      m[maxrow] = tmp\n      for (y2 = y+1; y2 < h; y2++) {\n        c = m[y2][y] / m[y][y];\n        for (x = y; x < w; x++) {\n          m[y2][x] -= m[y][x] * c;\n        }\n      }\n    }\n    // backsubstitute\n    for (y = h-1; y >= 0; y--) {\n      c = m[y][y];\n      for (y2 = 0; y2 < y; y2++) {\n        for (x = w-1; x > y-1; x--) {\n          m[y2][x] -= m[y][x] * m[y2][y] / c;\n        }\n      }\n      m[y][y] /= c;\n      for (x = h; x < w; x++) {\n        m[y][x] /= c;\n      }\n    }\n    return m;\n  },\n\n  // solve equation\n  // Ax=b\n  // A is upper triangular matrix\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[1,2,3]\n  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n  // if you use matrix style\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[[1],[2],[3]]\n  // will return [[2.666],[0.1666],[1.666]]\n  triaUpSolve: function triaUpSolve(A, b) {\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n    var matrix_mode = false;\n\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size - 1, -1, -1).forEach(function(i) {\n      parts = jStat.arange(i + 1, size).map(function(j) {\n        return x[j] * A[i][j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    });\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n  triaLowSolve: function triaLowSolve(A, b) {\n    // like to triaUpSolve but A is lower triangular matrix\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n\n    var matrix_mode=false;\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(j) {\n        return A[i][j] * x[j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    })\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n\n  // A -> [L,U]\n  // A=LU\n  // L is lower triangular matrix\n  // U is upper triangular matrix\n  lu: function lu(A) {\n    var size = A.length;\n    //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n    var L = jStat.identity(size);\n    var R = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(t) {\n      R[0][t] = A[0][t];\n    });\n    jStat.arange(1, size).forEach(function(l) {\n      jStat.arange(l).forEach(function(i) {\n        parts = jStat.arange(i).map(function(jj) {\n          return L[l][jj] * R[jj][i];\n        });\n        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n      });\n      jStat.arange(l, size).forEach(function(j) {\n        parts = jStat.arange(l).map(function(jj) {\n          return L[l][jj] * R[jj][j];\n        });\n        R[l][j] = A[parts.length][j] - jStat.sum(parts);\n      });\n    });\n    return [L, R];\n  },\n\n  // A -> T\n  // A=TT'\n  // T is lower triangular matrix\n  cholesky: function cholesky(A) {\n    var size = A.length;\n    var T = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(t) {\n        return Math.pow(T[i][t],2);\n      });\n      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n      jStat.arange(i + 1, size).forEach(function(j) {\n        parts = jStat.arange(i).map(function(t) {\n          return T[i][t] * T[j][t];\n        });\n        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n      });\n    });\n    return T;\n  },\n\n\n  gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n    var i = 0;\n    var j = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n    c = jStat.multiply(jStat.inv(d), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  gauss_seidel: function gauss_seidel(a, b, x, r) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i = i + 1;\n    }\n    return xk;\n  },\n\n  SOR: function SOR(a, b, x, r, w) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),\n                       jStat.subtract(jStat.multiply(d, 1 - w),\n                                      jStat.multiply(u, w)));\n    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,\n        jStat.multiply(l, w))), b), w);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  householder: function householder(a) {\n    var m = a.length;\n    var n = a[0].length;\n    var i = 0;\n    var w = [];\n    var p = [];\n    var alpha, r, k, j, factor;\n    for (; i < m - 1; i++) {\n      alpha = 0;\n      for (j = i + 1; j < n; j++)\n      alpha += (a[j][i] * a[j][i]);\n      factor = (a[i + 1][i] > 0) ? -1 : 1;\n      alpha = factor * Math.sqrt(alpha);\n      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));\n      w = jStat.zeros(m, 1);\n      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n      p = jStat.subtract(jStat.identity(m, n),\n          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n      a = jStat.multiply(p, jStat.multiply(a, p));\n    }\n    return a;\n  },\n\n  // A -> [Q,R]\n  // Q is orthogonal matrix\n  // R is upper triangular\n  QR: (function() {\n    // x -> Q\n    // find a orthogonal matrix Q st.\n    // Qx=y\n    // y is [||x||,0,0,...]\n\n    // quick ref\n    var sum   = jStat.sum;\n    var range = jStat.arange;\n\n    function qr2(x) {\n      // quick impletation\n      // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n      var n = x.length;\n      var p = x[0].length;\n\n      var r = jStat.zeros(p, p);\n      x = jStat.copy(x);\n\n      var i,j,k;\n      for(j = 0; j < p; j++){\n        r[j][j] = Math.sqrt(sum(range(n).map(function(i){\n          return x[i][j] * x[i][j];\n        })));\n        for(i = 0; i < n; i++){\n          x[i][j] = x[i][j] / r[j][j];\n        }\n        for(k = j+1; k < p; k++){\n          r[j][k] = sum(range(n).map(function(i){\n            return x[i][j] * x[i][k];\n          }));\n          for(i = 0; i < n; i++){\n            x[i][k] = x[i][k] - x[i][j]*r[j][k];\n          }\n        }\n      }\n      return [x, r];\n    }\n\n    return qr2;\n  }()),\n\n  lstsq: (function() {\n    // solve least squard problem for Ax=b as QR decomposition way if b is\n    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n    function R_I(A) {\n      A = jStat.copy(A);\n      var size = A.length;\n      var I = jStat.identity(size);\n      jStat.arange(size - 1, -1, -1).forEach(function(i) {\n        jStat.sliceAssign(\n            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));\n        jStat.sliceAssign(\n            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));\n        jStat.arange(i).forEach(function(j) {\n          var c = jStat.multiply(A[j][i], -1);\n          var Aj = jStat.slice(A, { row: j });\n          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);\n          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));\n          var Ij = jStat.slice(I, { row: j });\n          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);\n          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));\n        })\n      });\n      return I;\n    }\n\n    function qr_solve(A, b){\n      var array_mode = false;\n      if (b[0].length === undefined) {\n        // [c1,c2,c3] mode\n        b = b.map(function(x){ return [x] });\n        array_mode = true;\n      }\n      var QR = jStat.QR(A);\n      var Q = QR[0];\n      var R = QR[1];\n      var attrs = A[0].length;\n      var Q1 = jStat.slice(Q,{col:{end:attrs}});\n      var R1 = jStat.slice(R,{row:{end:attrs}});\n      var RI = R_I(R1);\n      var Q2 = jStat.transpose(Q1);\n\n      if(Q2[0].length === undefined){\n        Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n      var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n\n      if(x.length === undefined){\n        x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n\n      if (array_mode)\n        return x.map(function(i){ return i[0] });\n      return x;\n    }\n\n    return qr_solve;\n  }()),\n\n  jacobi: function jacobi(a) {\n    var condition = 1;\n    var n = a.length;\n    var e = jStat.identity(n, n);\n    var ev = [];\n    var b, i, j, p, q, maxim, theta, s;\n    // condition === 1 only if tolerance is not reached\n    while (condition === 1) {\n      maxim = a[0][1];\n      p = 0;\n      q = 1;\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i != j) {\n            if (maxim < Math.abs(a[i][j])) {\n              maxim = Math.abs(a[i][j]);\n              p = i;\n              q = j;\n            }\n          }\n        }\n      }\n      if (a[p][p] === a[q][q])\n        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;\n      else\n        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n      s = jStat.identity(n, n);\n      s[p][p] = Math.cos(theta);\n      s[p][q] = -Math.sin(theta);\n      s[q][p] = Math.sin(theta);\n      s[q][q] = Math.cos(theta);\n      // eigen vector matrix\n      e = jStat.multiply(e, s);\n      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n      a = b;\n      condition = 0;\n      for (i = 1; i < n; i++) {\n        for (j = 1; j < n; j++) {\n          if (i != j && Math.abs(a[i][j]) > 0.001) {\n            condition = 1;\n          }\n        }\n      }\n    }\n    for (i = 0; i < n; i++) ev.push(a[i][i]);\n    //returns both the eigenvalue and eigenmatrix\n    return [e, ev];\n  },\n\n  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n    var k1, k2, u_j1, k3, k4;\n    if (order === 2) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h, u_j + k1);\n        u_j1 = u_j + (k1 + k2) / 2;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    if (order === 4) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n        k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n        k4 = h * f(t_j +h, u_j + k3);\n        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    return u_j;\n  },\n\n  romberg: function romberg(f, a, b, order) {\n    var i = 0;\n    var h = (b - a) / 2;\n    var x = [];\n    var h1 = [];\n    var g = [];\n    var m, a1, j, k, I;\n    while (i < order / 2) {\n      I = f(a);\n      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n      m = x.length;\n      for (j = 1; j < m - 1; j++) {\n        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);\n      }\n      I = (h / 3) * (I + f(b));\n      g[i] = I;\n      h /= 2;\n      i++;\n    }\n    a1 = g.length;\n    m = 1;\n    while (a1 !== 1) {\n      for (j = 0; j < a1 - 1; j++)\n      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a1 = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  richardson: function richardson(X, f, x, h) {\n    function pos(X, x) {\n      var i = 0;\n      var n = X.length;\n      var p;\n      for (; i < n; i++)\n        if (X[i] === x) p = i;\n      return p;\n    }\n    var h_min = Math.abs(x - X[pos(X, x) + 1]);\n    var i = 0;\n    var g = [];\n    var h1 = [];\n    var y1, y2, m, a, j;\n    while (h >= h_min) {\n      y1 = pos(X, x + h);\n      y2 = pos(X, x);\n      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n      h /= 2;\n      i++;\n    }\n    a = g.length;\n    m = 1;\n    while (a != 1) {\n      for (j = 0; j < a - 1; j++)\n        h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  simpson: function simpson(f, a, b, n) {\n    var h = (b - a) / n;\n    var I = f(a);\n    var x = [];\n    var j = a;\n    var k = 0;\n    var i = 1;\n    var m;\n    for (; j <= b; j = j + h, k++)\n      x[k] = j;\n    m = x.length;\n    for (; i < m - 1; i++) {\n      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);\n    }\n    return (h / 3) * (I + f(b));\n  },\n\n  hermite: function hermite(X, F, dF, value) {\n    var n = X.length;\n    var p = 0;\n    var i = 0;\n    var l = [];\n    var dl = [];\n    var A = [];\n    var B = [];\n    var j;\n    for (; i < n; i++) {\n      l[i] = 1;\n      for (j = 0; j < n; j++) {\n        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n      }\n      dl[i] = 0;\n      for (j = 0; j < n; j++) {\n        if (i != j) dl[i] += 1 / (X [i] - X[j]);\n      }\n      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n      B[i] = (value - X[i]) * (l[i] * l[i]);\n      p += (A[i] * F[i] + B[i] * dF[i]);\n    }\n    return p;\n  },\n\n  lagrange: function lagrange(X, F, value) {\n    var p = 0;\n    var i = 0;\n    var j, l;\n    var n = X.length;\n    for (; i < n; i++) {\n      l = F[i];\n      for (j = 0; j < n; j++) {\n        // calculating the lagrange polynomial L_i\n        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n      }\n      // adding the lagrange polynomials found above\n      p += l;\n    }\n    return p;\n  },\n\n  cubic_spline: function cubic_spline(X, F, value) {\n    var n = X.length;\n    var i = 0, j;\n    var A = [];\n    var B = [];\n    var alpha = [];\n    var c = [];\n    var h = [];\n    var b = [];\n    var d = [];\n    for (; i < n - 1; i++)\n      h[i] = X[i + 1] - X[i];\n    alpha[0] = 0;\n    for (i = 1; i < n - 1; i++) {\n      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -\n          (3 / h[i-1]) * (F[i] - F[i-1]);\n    }\n    for (i = 1; i < n - 1; i++) {\n      A[i] = [];\n      B[i] = [];\n      A[i][i-1] = h[i-1];\n      A[i][i] = 2 * (h[i - 1] + h[i]);\n      A[i][i+1] = h[i];\n      B[i][0] = alpha[i];\n    }\n    c = jStat.multiply(jStat.inv(A), B);\n    for (j = 0; j < n - 1; j++) {\n      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n    }\n    for (j = 0; j < n; j++) {\n      if (X[j] > value) break;\n    }\n    j -= 1;\n    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *\n        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n  },\n\n  gauss_quadrature: function gauss_quadrature() {\n    throw new Error('gauss_quadrature not yet implemented');\n  },\n\n  PCA: function PCA(X) {\n    var m = X.length;\n    var n = X[0].length;\n    var i = 0;\n    var j, temp1;\n    var u = [];\n    var D = [];\n    var result = [];\n    var temp2 = [];\n    var Y = [];\n    var Bt = [];\n    var B = [];\n    var C = [];\n    var V = [];\n    var Vt = [];\n    for (i = 0; i < m; i++) {\n      u[i] = jStat.sum(X[i]) / n;\n    }\n    for (i = 0; i < n; i++) {\n      B[i] = [];\n      for(j = 0; j < m; j++) {\n        B[i][j] = X[j][i] - u[j];\n      }\n    }\n    B = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      C[i] = [];\n      for (j = 0; j < m; j++) {\n        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);\n      }\n    }\n    result = jStat.jacobi(C);\n    V = result[0];\n    D = result[1];\n    Vt = jStat.transpose(V);\n    for (i = 0; i < D.length; i++) {\n      for (j = i; j < D.length; j++) {\n        if(D[i] < D[j])  {\n          temp1 = D[i];\n          D[i] = D[j];\n          D[j] = temp1;\n          temp2 = Vt[i];\n          Vt[i] = Vt[j];\n          Vt[j] = temp2;\n        }\n      }\n    }\n    Bt = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      Y[i] = [];\n      for (j = 0; j < Bt.length; j++) {\n        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n      }\n    }\n    return [X, D, Vt, Y];\n  }\n});\n\n// extend jStat.fn with methods that require one argument\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function(arg, func) {\n      var tmpthis = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n        }, 15);\n        return this;\n      }\n      if (typeof jStat[passfunc](this, arg) === 'number')\n        return jStat[passfunc](this, arg);\n      else\n        return jStat(jStat[passfunc](this, arg));\n    };\n  }(funcs[i]));\n}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\nvar slice = [].slice;\nvar isNumber = jStat.utils.isNumber;\nvar isArray = jStat.utils.isArray;\n\n// flag==true denotes use of sample standard deviation\n// Z Statistics\njStat.extend({\n  // 2 different parameter lists:\n  // (value, mean, sd)\n  // (value, array, flag)\n  zscore: function zscore() {\n    var args = slice.call(arguments);\n    if (isNumber(args[1])) {\n      return (args[0] - args[1]) / args[2];\n    }\n    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, sides)\n  // (zscore, sides)\n  // (value, array, sides, flag)\n  ztest: function ztest() {\n    var args = slice.call(arguments);\n    var z;\n    if (isArray(args[1])) {\n      // (value, array, sides, flag)\n      z = jStat.zscore(args[0],args[1],args[3]);\n      return (args[2] === 1) ?\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);\n    } else {\n      if (args.length > 2) {\n        // (value, mean, sd, sides)\n        z = jStat.zscore(args[0],args[1],args[2]);\n        return (args[3] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);\n      } else {\n        // (zscore, sides)\n        z = args[0];\n        return (args[1] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)*2);\n      }\n    }\n  }\n});\n\njStat.extend(jStat.fn, {\n  zscore: function zscore(value, flag) {\n    return (value - this.mean()) / this.stdev(flag);\n  },\n\n  ztest: function ztest(value, sides, flag) {\n    var zscore = Math.abs(this.zscore(value, flag));\n    return (sides === 1) ?\n      (jStat.normal.cdf(-zscore, 0, 1)) :\n      (jStat.normal.cdf(-zscore, 0, 1) * 2);\n  }\n});\n\n// T Statistics\njStat.extend({\n  // 2 parameter lists\n  // (value, mean, sd, n)\n  // (value, array)\n  tscore: function tscore() {\n    var args = slice.call(arguments);\n    return (args.length === 4) ?\n      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :\n      ((args[0] - jStat.mean(args[1])) /\n       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, n, sides)\n  // (tscore, n, sides)\n  // (value, array, sides)\n  ttest: function ttest() {\n    var args = slice.call(arguments);\n    var tscore;\n    if (args.length === 5) {\n      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n      return (args[4] === 1) ?\n        (jStat.studentt.cdf(-tscore, args[3]-1)) :\n        (jStat.studentt.cdf(-tscore, args[3]-1)*2);\n    }\n    if (isNumber(args[1])) {\n      tscore = Math.abs(args[0])\n      return (args[2] == 1) ?\n        (jStat.studentt.cdf(-tscore, args[1]-1)) :\n        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);\n    }\n    tscore = Math.abs(jStat.tscore(args[0], args[1]))\n    return (args[2] == 1) ?\n      (jStat.studentt.cdf(-tscore, args[1].length-1)) :\n      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  tscore: function tscore(value) {\n    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n  },\n\n  ttest: function ttest(value, sides) {\n    return (sides === 1) ?\n      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :\n      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);\n  }\n});\n\n// F Statistics\njStat.extend({\n  // Paramter list is as follows:\n  // (array1, array2, array3, ...)\n  // or it is an array of arrays\n  // array of arrays conversion\n  anovafscore: function anovafscore() {\n    var args = slice.call(arguments),\n    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;\n    if (args.length === 1) {\n      tmpargs = new Array(args[0].length);\n      for (i = 0; i < args[0].length; i++) {\n        tmpargs[i] = args[0][i];\n      }\n      args = tmpargs;\n    }\n    // Builds sample array\n    sample = new Array();\n    for (i = 0; i < args.length; i++) {\n      sample = sample.concat(args[i]);\n    }\n    sampMean = jStat.mean(sample);\n    // Computes the explained variance\n    expVar = 0;\n    for (i = 0; i < args.length; i++) {\n      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n    }\n    expVar /= (args.length - 1);\n    // Computes unexplained variance\n    unexpVar = 0;\n    for (i = 0; i < args.length; i++) {\n      sampSampMean = jStat.mean(args[i]);\n      for (j = 0; j < args[i].length; j++) {\n        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n      }\n    }\n    unexpVar /= (sample.length - args.length);\n    return expVar / unexpVar;\n  },\n\n  // 2 different paramter setups\n  // (array1, array2, array3, ...)\n  // (anovafscore, df1, df2)\n  anovaftest: function anovaftest() {\n    var args = slice.call(arguments),\n    df1, df2, n, i;\n    if (isNumber(args[0])) {\n      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n    }\n    var anovafscore = jStat.anovafscore(args);\n    df1 = args.length - 1;\n    n = 0;\n    for (i = 0; i < args.length; i++) {\n      n = n + args[i].length;\n    }\n    df2 = n - df1 - 1;\n    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n  },\n\n  ftest: function ftest(fscore, df1, df2) {\n    return 1 - jStat.centralF.cdf(fscore, df1, df2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  anovafscore: function anovafscore() {\n    return jStat.anovafscore(this.toArray());\n  },\n\n  anovaftes: function anovaftes() {\n    var n = 0;\n    var i;\n    for (i = 0; i < this.length; i++) {\n      n = n + this[i].length;\n    }\n    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n  }\n});\n\n// Tukey's range test\njStat.extend({\n  // 2 parameter lists\n  // (mean1, mean2, n1, n2, sd)\n  // (array1, array2, sd)\n  qscore: function qscore() {\n    var args = slice.call(arguments);\n    var mean1, mean2, n1, n2, sd;\n    if (isNumber(args[0])) {\n        mean1 = args[0];\n        mean2 = args[1];\n        n1 = args[2];\n        n2 = args[3];\n        sd = args[4];\n    } else {\n        mean1 = jStat.mean(args[0]);\n        mean2 = jStat.mean(args[1]);\n        n1 = args[0].length;\n        n2 = args[1].length;\n        sd = args[2];\n    }\n    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n  },\n\n  // 3 different parameter lists:\n  // (qscore, n, k)\n  // (mean1, mean2, n1, n2, sd, n, k)\n  // (array1, array2, sd, n, k)\n  qtest: function qtest() {\n    var args = slice.call(arguments);\n\n    var qscore;\n    if (args.length === 3) {\n      qscore = args[0];\n      args = args.slice(1);\n    } else if (args.length === 7) {\n      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n      args = args.slice(5);\n    } else {\n      qscore = jStat.qscore(args[0], args[1], args[2]);\n      args = args.slice(3);\n    }\n\n    var n = args[0];\n    var k = args[1];\n\n    return 1 - jStat.tukey.cdf(qscore, k, n - k);\n  },\n\n  tukeyhsd: function tukeyhsd(arrays) {\n    var sd = jStat.pooledstdev(arrays);\n    var means = arrays.map(function (arr) {return jStat.mean(arr);});\n    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);\n\n    var results = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n        }\n    }\n\n    return results;\n  }\n});\n\n// Error Bounds\njStat.extend({\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  normalci: function normalci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  tci: function tci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *\n                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  significant: function significant(pvalue, alpha) {\n    return pvalue < alpha;\n  }\n});\n\njStat.extend(jStat.fn, {\n  normalci: function normalci(value, alpha) {\n    return jStat.normalci(value, alpha, this.toArray());\n  },\n\n  tci: function tci(value, alpha) {\n    return jStat.tci(value, alpha, this.toArray());\n  }\n});\n\n// internal method for calculating the z-score for a difference of proportions test\nfunction differenceOfProportions(p1, n1, p2, n2) {\n  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n    throw new Error(\"Proportions should be greater than 0 and less than 1\")\n  }\n  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));\n  return (p1 - p2) / se;\n}\n\n// Difference of Proportions\njStat.extend(jStat.fn, {\n  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 1);\n  },\n\n  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 2);\n  }\n});\n\n}(jStat, Math));\njStat.models = (function(){\n  function sub_regress(exog) {\n    var var_count = exog[0].length;\n    var modelList = jStat.arange(var_count).map(function(endog_index) {\n      var exog_index =\n          jStat.arange(var_count).filter(function(i){return i!==endog_index});\n      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),\n                 jStat.col(exog, exog_index))\n    });\n    return modelList;\n  }\n\n  // do OLS model regress\n  // exog have include const columns ,it will not generate it .In fact, exog is\n  // \"design matrix\" look at\n  //https://en.wikipedia.org/wiki/Design_matrix\n  function ols(endog, exog) {\n    var nobs = endog.length;\n    var df_model = exog[0].length - 1;\n    var df_resid = nobs-df_model - 1;\n    var coef = jStat.lstsq(exog, endog);\n    var predict =\n        jStat.multiply(exog, coef.map(function(x) { return [x] }))\n            .map(function(p) { return p[0] });\n    var resid = jStat.subtract(endog, predict);\n    var ybar = jStat.mean(endog);\n    // constant cause problem\n    // var SST = jStat.sum(endog.map(function(y) {\n    //   return Math.pow(y-ybar,2);\n    // }));\n    var SSE = jStat.sum(predict.map(function(f) {\n      return Math.pow(f - ybar, 2);\n    }));\n    var SSR = jStat.sum(endog.map(function(y, i) {\n      return Math.pow(y - predict[i], 2);\n    }));\n    var SST = SSE + SSR;\n    var R2 = (SSE / SST);\n    return {\n        exog:exog,\n        endog:endog,\n        nobs:nobs,\n        df_model:df_model,\n        df_resid:df_resid,\n        coef:coef,\n        predict:predict,\n        resid:resid,\n        ybar:ybar,\n        SST:SST,\n        SSE:SSE,\n        SSR:SSR,\n        R2:R2\n    };\n  }\n\n  // H0: b_I=0\n  // H1: b_I!=0\n  function t_test(model) {\n    var subModelList = sub_regress(model.exog);\n    //var sigmaHat=jStat.stdev(model.resid);\n    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));\n    var seBetaHat = subModelList.map(function(mod) {\n      var SST = mod.SST;\n      var R2 = mod.R2;\n      return sigmaHat / Math.sqrt(SST * (1 - R2));\n    });\n    var tStatistic = model.coef.map(function(coef, i) {\n      return (coef - 0) / seBetaHat[i];\n    });\n    var pValue = tStatistic.map(function(t) {\n      var leftppf = jStat.studentt.cdf(t, model.df_resid);\n      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n    });\n    var c = jStat.studentt.inv(0.975, model.df_resid);\n    var interval95 = model.coef.map(function(coef, i) {\n      var d = c * seBetaHat[i];\n      return [coef - d, coef + d];\n    })\n    return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n    };\n  }\n\n  function F_test(model) {\n    var F_statistic =\n        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);\n    var fcdf = function(x, n1, n2) {\n      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)\n    }\n    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n    return { F_statistic: F_statistic, pvalue: pvalue };\n  }\n\n  function ols_wrap(endog, exog) {\n    var model = ols(endog,exog);\n    var ttest = t_test(model);\n    var ftest = F_test(model);\n    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n    // Which matches the 'adjusted R^2' provided by R's lm package\n    var adjust_R2 =\n        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));\n    model.t = ttest;\n    model.f = ftest;\n    model.adjust_R2 = adjust_R2;\n    return model;\n  }\n\n  return { ols: ols_wrap };\n})();\n//To regress, simply build X matrix\n//(append column of 1's) using\n//buildxmatrix and build the Y\n//matrix using buildymatrix\n//(simply the transpose)\n//and run regress.\n\n\n\n//Regressions\n\njStat.extend({\n  buildxmatrix: function buildxmatrix(){\n    //Parameters will be passed in as such\n    //(array1,array2,array3,...)\n    //as (x1,x2,x3,...)\n    //needs to be (1,x1,x2,x3,...)\n    var matrixRows = new Array(arguments.length);\n    for(var i=0;i<arguments.length;i++){\n      var array = [1];\n      matrixRows[i]= array.concat(arguments[i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  builddxmatrix: function builddxmatrix() {\n    //Paramters will be passed in as such\n    //([array1,array2,...]\n    var matrixRows = new Array(arguments[0].length);\n    for(var i=0;i<arguments[0].length;i++){\n      var array = [1]\n      matrixRows[i]= array.concat(arguments[0][i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  buildjxmatrix: function buildjxmatrix(jMat) {\n    //Builds from jStat Matrix\n    var pass = new Array(jMat.length)\n    for(var i=0;i<jMat.length;i++){\n      pass[i] = jMat[i];\n    }\n    return jStat.builddxmatrix(pass);\n\n  },\n\n  buildymatrix: function buildymatrix(array){\n    return jStat(array).transpose();\n  },\n\n  buildjymatrix: function buildjymatrix(jMat){\n    return jMat.transpose();\n  },\n\n  matrixmult: function matrixmult(A,B){\n    var i, j, k, result, sum;\n    if (A.cols() == B.rows()) {\n      if(B.rows()>1){\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[k][j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n      result = [];\n      for (i = 0; i < A.rows(); i++) {\n        result[i] = [];\n        for (j = 0; j < B.cols(); j++) {\n          sum = 0;\n          for (k = 0; k < A.cols(); k++) {\n            sum += A.toArray()[i][k] * B.toArray()[j];\n          }\n          result[i][j] = sum;\n        }\n      }\n      return jStat(result);\n    }\n  },\n\n  //regress and regresst to be fixed\n\n  regress: function regress(jMatX,jMatY){\n    //print(\"regressin!\");\n    //print(jMatX.toArray());\n    var innerinv = jStat.xtranspxinv(jMatX);\n    //print(innerinv);\n    var xtransp = jMatX.transpose();\n    var next = jStat.matrixmult(jStat(innerinv),xtransp);\n    return jStat.matrixmult(next,jMatY);\n\n  },\n\n  regresst: function regresst(jMatX,jMatY,sides){\n    var beta = jStat.regress(jMatX,jMatY);\n\n    var compile = {};\n    compile.anova = {};\n    var jMatYBar = jStat.jMatYBar(jMatX, beta);\n    compile.yBar = jMatYBar;\n    var yAverage = jMatY.mean();\n    compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n\n    compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n    compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n\n    compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n    compile.anova.mse =\n        compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.sst = jStat.sst(jMatY, yAverage);\n    compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n\n    compile.anova.r2 = 1 - (compile.anova.sse / compile.anova.sst);\n    if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n\n    compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n    compile.anova.pvalue =\n        jStat.anovaftest(compile.anova.fratio,\n                         jMatX[0].length - 1,\n                         jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.rmse = Math.sqrt(compile.anova.mse);\n\n    compile.anova.r2adj = 1 - (compile.anova.mse / compile.anova.mst);\n    if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n\n    compile.stats = new Array(jMatX[0].length);\n    var covar = jStat.xtranspxinv(jMatX);\n    var sds, ts, ps;\n\n    for(var i=0; i<beta.length;i++){\n      sds=Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n      ts= Math.abs(beta[i] / sds);\n      ps= jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n\n      compile.stats[i]=[beta[i], sds, ts, ps];\n    }\n\n    compile.regress = beta;\n    return compile;\n  },\n\n  xtranspx: function xtranspx(jMatX){\n    return jStat.matrixmult(jMatX.transpose(),jMatX);\n  },\n\n\n  xtranspxinv: function xtranspxinv(jMatX){\n    var inner = jStat.matrixmult(jMatX.transpose(),jMatX);\n    var innerinv = jStat.inv(inner);\n    return innerinv;\n  },\n\n  jMatYBar: function jMatYBar(jMatX, beta) {\n    var yBar = jStat.matrixmult(jMatX, beta);\n    return new jStat(yBar);\n  },\n\n  residuals: function residuals(jMatY, jMatYBar) {\n    return jStat.matrixsubtract(jMatY, jMatYBar);\n  },\n\n  ssr: function ssr(jMatYBar, yAverage) {\n    var ssr = 0;\n    for(var i = 0; i < jMatYBar.length; i++) {\n      ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n    }\n    return ssr;\n  },\n\n  sse: function sse(jMatY, jMatYBar) {\n    var sse = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n    }\n    return sse;\n  },\n\n  sst: function sst(jMatY, yAverage) {\n    var sst = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sst += Math.pow(jMatY[i] - yAverage, 2);\n    }\n    return sst;\n  },\n\n  matrixsubtract: function matrixsubtract(A,B){\n    var ans = new Array(A.length);\n    for(var i=0;i<A.length;i++){\n      ans[i] = new Array(A[i].length);\n      for(var j=0;j<A[i].length;j++){\n        ans[i][j]=A[i][j]-B[i][j];\n      }\n    }\n    return jStat(ans);\n  }\n});\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n\n  return jStat;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}