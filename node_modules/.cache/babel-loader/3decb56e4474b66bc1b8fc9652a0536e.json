{"ast":null,"code":"import _objectSpread from \"/Users/tomasmonge/Desktop/proyecto Estadistica/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/tomasmonge/Desktop/proyecto Estadistica/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"elementType\", \"onPress\", \"onPressStart\", \"onPressEnd\", \"onClick\", \"isDisabled\"];\nimport { filterDOMProps as $kKV4x$filterDOMProps, mergeProps as $kKV4x$mergeProps } from \"@react-aria/utils\";\nimport { useFocusable as $kKV4x$useFocusable } from \"@react-aria/focus\";\nimport { usePress as $kKV4x$usePress } from \"@react-aria/interactions\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $298d61e98472621b$exports = {};\n$parcel$export($298d61e98472621b$exports, \"useLink\", function () {\n  return $298d61e98472621b$export$dcf14c9974fe2767;\n});\n\nfunction $298d61e98472621b$export$dcf14c9974fe2767(props, ref) {\n  var _props$elementType = props.elementType,\n      elementType = _props$elementType === void 0 ? 'a' : _props$elementType,\n      onPress = props.onPress,\n      onPressStart = props.onPressStart,\n      onPressEnd = props.onPressEnd,\n      deprecatedOnClick = props.onClick,\n      isDisabled = props.isDisabled,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  var linkProps;\n  if (elementType !== 'a') linkProps = {\n    role: 'link',\n    tabIndex: !isDisabled ? 0 : undefined\n  };\n\n  var _$kKV4x$useFocusable = $kKV4x$useFocusable(props, ref),\n      focusableProps = _$kKV4x$useFocusable.focusableProps;\n\n  var _$kKV4x$usePress = $kKV4x$usePress({\n    onPress: onPress,\n    onPressStart: onPressStart,\n    onPressEnd: onPressEnd,\n    isDisabled: isDisabled,\n    ref: ref\n  }),\n      pressProps = _$kKV4x$usePress.pressProps,\n      isPressed = _$kKV4x$usePress.isPressed;\n\n  var domProps = $kKV4x$filterDOMProps(otherProps, {\n    labelable: true\n  });\n  var interactionHandlers = $kKV4x$mergeProps(focusableProps, pressProps);\n  return {\n    isPressed: isPressed,\n    linkProps: $kKV4x$mergeProps(domProps, _objectSpread(_objectSpread(_objectSpread({}, interactionHandlers), linkProps), {}, {\n      'aria-disabled': isDisabled || undefined,\n      onClick: function onClick(e) {\n        pressProps.onClick(e);\n\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n          console.warn('onClick is deprecated, please use onPress');\n        }\n      }\n    }))\n  };\n}\n\nexport { $298d61e98472621b$export$dcf14c9974fe2767 as useLink };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;SAwCgBA,0CAAQC,OAAwBC,KAAuC;EACrF,yBASID,KATJ,CAAKE,WAAL;EAAA,IACEA,WADF,mCACgB,GADhB;EAAA,IAEEC,OAFF,GASIH,KATJ,CACmBG,OADnB;EAAA,IAGEC,YAHF,GASIJ,KATJ,CAESI,YAFT;EAAA,IAIEC,UAJF,GASIL,KATJ,CAGcK,UAHd;EAAA,IAMWC,iBANX,GASIN,KATJ,CAMEO,OANF;EAAA,IAOEC,UAPF,GASIR,KATJ,CAM4BQ,UAN5B;EAAA,IAQKC,UARL,4BASIT,KATJ;;EAWA,IAAIU,SAAJ;EACA,IAAIR,WAAW,KAAK,GAApB,EACEQ,SAAS,GAAG;IACVC,IAAI,EAAE,MADI;IAEVC,QAAQ,GAAGJ,UAAH,GAAgB,CAAhB,GAAoBK;EAFlB,CAAZ;;EAKF,2BAAuBC,mBAAY,CAACd,KAAD,EAAQC,GAAR,CAAnC;EAAA,IAAKc,cAAL,wBAAKA,cAAL;;EACA,uBAA8BC,eAAQ,CAAC;aAACb,OAAD;kBAAUC,YAAV;gBAAwBC,UAAxB;gBAAoCG,UAApC;SAAgDP;EAAhD,CAAD,CAAtC;EAAA,IAAKgB,UAAL,oBAAKA,UAAL;EAAA,IAAiBC,SAAjB,oBAAeA,SAAf;;EACA,IAAIC,QAAQ,GAAGC,qBAAc,CAACX,UAAD,EAAa;IAACY,SAAS,EAAE;EAAZ,CAAb,CAA7B;EACA,IAAIC,mBAAmB,GAAGC,iBAAU,CAACR,cAAD,EAAiBE,UAAjB,CAApC;EAEA,OAAO;eACLC,SADK;IAELR,SAAS,EAAEa,iBAAU,CAACJ,QAAD,gDAChBG,mBADgB,GAEhBZ,SAFgB;MAGnB,iBAAiBF,UAAU,IAAIK,SAHZ;MAInBN,OAAO,mBAAGiB,CAAH,EAAS;QACdP,UAAU,CAACV,OAAX,CAAmBiB,CAAnB;;QACA,IAAIlB,iBAAJ,EAAuB;UACrBA,iBAAiB,CAACkB,CAAD,CAAjB;UACAC,OAAO,CAACC,IAAR,CAAa,2CAAb;QACD;MACF;IAVkB;EAFhB,CAAP;AAeD","names":["$298d61e98472621b$export$dcf14c9974fe2767","props","ref","elementType","onPress","onPressStart","onPressEnd","deprecatedOnClick","onClick","isDisabled","otherProps","linkProps","role","tabIndex","undefined","$kKV4x$useFocusable","focusableProps","$kKV4x$usePress","pressProps","isPressed","domProps","$kKV4x$filterDOMProps","labelable","interactionHandlers","$kKV4x$mergeProps","e","console","warn"],"sources":["/Users/tomasmonge/Desktop/proyecto Estadistica/node_modules/@react-aria/link/dist/packages/@react-aria/link/src/useLink.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLinkProps} from '@react-types/link';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface AriaLinkOptions extends AriaLinkProps {\n  /** Whether the link is disabled. */\n  isDisabled?: boolean,\n  /**\n   * The HTML element used to render the link, e.g. 'a', or 'span'.\n   * @default 'a'\n   */\n  elementType?: string\n}\n\nexport interface LinkAria {\n  /** Props for the link element. */\n  linkProps: HTMLAttributes<HTMLElement>,\n  /** Whether the link is currently pressed. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a link component.\n * A link allows a user to navigate to another page or resource within a web page\n * or application.\n */\nexport function useLink(props: AriaLinkOptions, ref: RefObject<HTMLElement>): LinkAria {\n  let {\n    elementType = 'a',\n    onPress,\n    onPressStart,\n    onPressEnd,\n    // @ts-ignore\n    onClick: deprecatedOnClick,\n    isDisabled,\n    ...otherProps\n  } = props;\n\n  let linkProps: HTMLAttributes<HTMLElement>;\n  if (elementType !== 'a') {\n    linkProps = {\n      role: 'link',\n      tabIndex: !isDisabled ? 0 : undefined\n    };\n  }\n  let {focusableProps} = useFocusable(props, ref);\n  let {pressProps, isPressed} = usePress({onPress, onPressStart, onPressEnd, isDisabled, ref});\n  let domProps = filterDOMProps(otherProps, {labelable: true});\n  let interactionHandlers = mergeProps(focusableProps, pressProps);\n\n  return {\n    isPressed, // Used to indicate press state for visual\n    linkProps: mergeProps(domProps, {\n      ...interactionHandlers,\n      ...linkProps,\n      'aria-disabled': isDisabled || undefined,\n      onClick: (e) => {\n        pressProps.onClick(e);\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n          console.warn('onClick is deprecated, please use onPress');\n        }\n      }\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}