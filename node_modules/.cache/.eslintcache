[{"/Users/tomasmonge/Desktop/proyecto Estadistica/src/index.js":"1","/Users/tomasmonge/Desktop/proyecto Estadistica/src/App.js":"2","/Users/tomasmonge/Desktop/proyecto Estadistica/src/reportWebVitals.js":"3","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/inicio.js":"4","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Probabilidad/inicio.js":"5","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Hipotesis/inicio.js":"6","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Home/inicio.js":"7","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/inicio.js":"8","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Home/Layout.js":"9","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Navbar/Nabvar.js":"10","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/getDatos.js":"11","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/modal/modalTipoEstimacion.js":"12","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Home/Content.js":"13","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Home/Box.js":"14","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Navbar/AcmeLogo.js":"15","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/formDatos.js":"16","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Navbar/MoonIcon.js":"17","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Navbar/SunIcon.js":"18","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/logica.js":"19","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaTestIndividuales.js":"20","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaAnalisisResiduales.js":"21","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaAnalisisVarianza.js":"22","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarProporcion/GetDatos.js":"23","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarN/GetDatos.js":"24","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarMedia/GetDatos.js":"25","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferencia/GetDatos.js":"26","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarVarianza/GetDatos.js":"27","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferenciaProporciones/GetDatos.js":"28","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/result.js":"29","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/formulas.js":"30","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/dropdownMenue.js":"31","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaCorrelacion.js":"32","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarProporcion/formDatos.js":"33","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarProporcion/logica.js":"34","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaDatos.js":"35","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarMedia/formDatos.js":"36","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarN/formDatos.js":"37","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarN/logica.js":"38","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarMedia/logica.js":"39","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferencia/formDatos.js":"40","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferencia/formDatos2.js":"41","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferenciaProporciones/formDatos.js":"42","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferenciaProporciones/logica.js":"43","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferencia/logica.js":"44","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferenciaProporciones/formDatos2.js":"45","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarVarianza/formDatos.js":"46","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarVarianza/logica.js":"47","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/modalFormulas.js":"48","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/DeleteIcon.js":"49","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/IconButton.js":"50","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/Result/result.js":"51","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/Proporcion.js":"52","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/estimarN.js":"53","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/modal/modalTipoDeDatos.js":"54","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/tStudentConCorreccion.js":"55","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/tStudent.js":"56","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/Tchebycheff.js":"57","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/distribucionNormal.js":"58","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/mediaPoblacionalFinita.js":"59","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/diferenciaProporciones.js":"60","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/diferenciaMedias.js":"61","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/estimarVarianza.js":"62","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/modal/modalFormulas.js":"63","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/utils.js":"64","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/TablaAnalisisConfianza.js":"65","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaAnalisisVarianza2.js":"66","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/modalEleccion.js":"67","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/getDatos.js":"68","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/logica.js":"69","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/formulas.js":"70","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/result.js":"71","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/modalFormulas.js":"72","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/TablaAnalisisVarianza.js":"73","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/TablaTestIndividuales.js":"74","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/TablaAnalisisVarianza2.js":"75","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/TablaAnalisisResiduales.js":"76","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/TablaAnalisisConfianza.js":"77","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/Input.js":"78","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/EditIcon.js":"79","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/contenedor.js":"80","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/graficos/correlacion.js":"81","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/graficos/intConfianza.js":"82"},{"size":535,"mtime":1669407418706,"results":"83","hashOfConfig":"84"},{"size":1628,"mtime":1681434672297,"results":"85","hashOfConfig":"84"},{"size":362,"mtime":1669407418706,"results":"86","hashOfConfig":"84"},{"size":248,"mtime":1669610969027,"results":"87","hashOfConfig":"84"},{"size":330,"mtime":1681785782152,"results":"88","hashOfConfig":"84"},{"size":324,"mtime":1681420282149,"results":"89","hashOfConfig":"84"},{"size":185,"mtime":1669407418680,"results":"90","hashOfConfig":"84"},{"size":272,"mtime":1669407418697,"results":"91","hashOfConfig":"84"},{"size":205,"mtime":1669407418679,"results":"92","hashOfConfig":"84"},{"size":2424,"mtime":1681420425326,"results":"93","hashOfConfig":"84"},{"size":4360,"mtime":1681786040245,"results":"94","hashOfConfig":"84"},{"size":4496,"mtime":1669407418697,"results":"95","hashOfConfig":"84"},{"size":687,"mtime":1669407418679,"results":"96","hashOfConfig":"84"},{"size":110,"mtime":1669407418679,"results":"97","hashOfConfig":"84"},{"size":561,"mtime":1669407418698,"results":"98","hashOfConfig":"84"},{"size":1849,"mtime":1669427398902,"results":"99","hashOfConfig":"84"},{"size":1718,"mtime":1669407418698,"results":"100","hashOfConfig":"84"},{"size":2381,"mtime":1669407418698,"results":"101","hashOfConfig":"84"},{"size":1460,"mtime":1669501424232,"results":"102","hashOfConfig":"84"},{"size":1404,"mtime":1669422010318,"results":"103","hashOfConfig":"84"},{"size":1086,"mtime":1669501713723,"results":"104","hashOfConfig":"84"},{"size":1554,"mtime":1669422518898,"results":"105","hashOfConfig":"84"},{"size":1938,"mtime":1681786430122,"results":"106","hashOfConfig":"84"},{"size":2701,"mtime":1681786412536,"results":"107","hashOfConfig":"84"},{"size":3682,"mtime":1681786388684,"results":"108","hashOfConfig":"84"},{"size":4515,"mtime":1681788011877,"results":"109","hashOfConfig":"84"},{"size":3370,"mtime":1681786450928,"results":"110","hashOfConfig":"84"},{"size":3726,"mtime":1681786370186,"results":"111","hashOfConfig":"84"},{"size":2560,"mtime":1669427291153,"results":"112","hashOfConfig":"84"},{"size":5884,"mtime":1669501698695,"results":"113","hashOfConfig":"84"},{"size":1379,"mtime":1669756077520,"results":"114","hashOfConfig":"84"},{"size":4074,"mtime":1669407418702,"results":"115","hashOfConfig":"84"},{"size":1167,"mtime":1669407418687,"results":"116","hashOfConfig":"84"},{"size":335,"mtime":1669407418688,"results":"117","hashOfConfig":"84"},{"size":1564,"mtime":1669407418703,"results":"118","hashOfConfig":"84"},{"size":5862,"mtime":1669407418685,"results":"119","hashOfConfig":"84"},{"size":1846,"mtime":1669407418687,"results":"120","hashOfConfig":"84"},{"size":270,"mtime":1669407418687,"results":"121","hashOfConfig":"84"},{"size":1829,"mtime":1669407418686,"results":"122","hashOfConfig":"84"},{"size":4786,"mtime":1669407418682,"results":"123","hashOfConfig":"84"},{"size":4922,"mtime":1669407418683,"results":"124","hashOfConfig":"84"},{"size":4277,"mtime":1669407418684,"results":"125","hashOfConfig":"84"},{"size":484,"mtime":1669407418685,"results":"126","hashOfConfig":"84"},{"size":466,"mtime":1669407418683,"results":"127","hashOfConfig":"84"},{"size":4623,"mtime":1669407418685,"results":"128","hashOfConfig":"84"},{"size":5576,"mtime":1669407418690,"results":"129","hashOfConfig":"84"},{"size":434,"mtime":1669407418692,"results":"130","hashOfConfig":"84"},{"size":94,"mtime":1669407418701,"results":"131","hashOfConfig":"84"},{"size":1566,"mtime":1669407418701,"results":"132","hashOfConfig":"84"},{"size":401,"mtime":1669407418701,"results":"133","hashOfConfig":"84"},{"size":2059,"mtime":1669407418681,"results":"134","hashOfConfig":"84"},{"size":729,"mtime":1669407418694,"results":"135","hashOfConfig":"84"},{"size":662,"mtime":1669407418695,"results":"136","hashOfConfig":"84"},{"size":2102,"mtime":1669407418697,"results":"137","hashOfConfig":"84"},{"size":1500,"mtime":1669407418696,"results":"138","hashOfConfig":"84"},{"size":1186,"mtime":1669407418696,"results":"139","hashOfConfig":"84"},{"size":1124,"mtime":1669407418694,"results":"140","hashOfConfig":"84"},{"size":707,"mtime":1669407418694,"results":"141","hashOfConfig":"84"},{"size":1119,"mtime":1669407418696,"results":"142","hashOfConfig":"84"},{"size":877,"mtime":1669407418694,"results":"143","hashOfConfig":"84"},{"size":905,"mtime":1669407418694,"results":"144","hashOfConfig":"84"},{"size":1034,"mtime":1669407418695,"results":"145","hashOfConfig":"84"},{"size":94,"mtime":1669407418697,"results":"146","hashOfConfig":"84"},{"size":828,"mtime":1669407418696,"results":"147","hashOfConfig":"84"},{"size":2604,"mtime":1669756163454,"results":"148","hashOfConfig":"84"},{"size":691,"mtime":1669422363048,"results":"149","hashOfConfig":"84"},{"size":2983,"mtime":1669611199024,"results":"150","hashOfConfig":"84"},{"size":1046,"mtime":1669962265311,"results":"151","hashOfConfig":"84"},{"size":8146,"mtime":1670014381098,"results":"152","hashOfConfig":"84"},{"size":2641,"mtime":1670009888847,"results":"153","hashOfConfig":"84"},{"size":4573,"mtime":1670014300609,"results":"154","hashOfConfig":"84"},{"size":94,"mtime":1669608171865,"results":"155","hashOfConfig":"84"},{"size":2805,"mtime":1669962933312,"results":"156","hashOfConfig":"84"},{"size":2485,"mtime":1669926116487,"results":"157","hashOfConfig":"84"},{"size":1239,"mtime":1669926065327,"results":"158","hashOfConfig":"84"},{"size":1086,"mtime":1669653543841,"results":"159","hashOfConfig":"84"},{"size":2646,"mtime":1669926153734,"results":"160","hashOfConfig":"84"},{"size":625,"mtime":1669993549297,"results":"161","hashOfConfig":"84"},{"size":1288,"mtime":1669758936296,"results":"162","hashOfConfig":"163"},{"size":2895,"mtime":1669908085162,"results":"164","hashOfConfig":"84"},{"size":1134,"mtime":1681786081611,"results":"165","hashOfConfig":"84"},{"size":780,"mtime":1681788173078,"results":"166","hashOfConfig":"84"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"1x3nt4q",{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"170"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"170"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"170"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"170"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"263","usedDeprecatedRules":"170"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"170"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"170"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"170"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"170"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"170"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"170"},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"170"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"170"},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"170"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"170"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"170"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"350","usedDeprecatedRules":"170"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"354","usedDeprecatedRules":"170"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"170"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"362","usedDeprecatedRules":"170"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"366","usedDeprecatedRules":"170"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"373","usedDeprecatedRules":"170"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"377","usedDeprecatedRules":"170"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"384","usedDeprecatedRules":"170"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"170"},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"170"},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"170"},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"406","usedDeprecatedRules":"170"},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"up8z56",{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"170"},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tomasmonge/Desktop/proyecto Estadistica/src/index.js",[],[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/App.js",["444"],[],"import * as React from 'react';\nimport ConfianzaInicio from './componentes/IntervaloDeConfianza/inicio';\nimport InicioProbabilidad from './componentes/Probabilidad/inicio';\nimport InicioHipotesis from './componentes/Hipotesis/inicio';\nimport Inicio from './componentes/Home/inicio';\nimport Correlacion_Y_Regresion from './componentes/correlacionYregresion/inicio';\nimport './App.css';\nimport { NextUIProvider, createTheme } from '@nextui-org/react';\nimport { ThemeProvider as NextThemesProvider } from 'next-themes';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nfunction App() {\n  const lightTheme = createTheme({\n    type: 'light'\n  })\n\n  const darkTheme = createTheme({\n    type: 'dark',\n    theme: {\n      colors: {backgroundContrast: '#070606'}\n    }\n  })\n  return (\n    <NextThemesProvider\n      defaultTheme=\"system\"\n      attribute=\"class\"\n      value={{\n        light: lightTheme.className,\n        dark: darkTheme.className\n      }}\n    >\n      <NextUIProvider>\n        <BrowserRouter>\n          <Routes>\n            <Route exact path=\"/\" element={<Inicio page=\"/\"/>} />\n            <Route exact path=\"/confianza\" element={<ConfianzaInicio page=\"/confianza\" />} />\n            <Route exact path=\"/probabilidad\" element={<InicioProbabilidad page=\"/probabilidad\" />} />\n            <Route exact path=\"/hipotesis\" element={<InicioHipotesis page=\"/hipotesis\" />} />\n            <Route exact path=\"/correlacion\" element={<Correlacion_Y_Regresion page=\"/correlacion\" />} />\n          </Routes>\n        </BrowserRouter>\n      </NextUIProvider>\n    </NextThemesProvider >\n  );\n}\n\nexport default App;\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/reportWebVitals.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/inicio.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Probabilidad/inicio.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Hipotesis/inicio.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Home/inicio.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/inicio.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Home/Layout.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Navbar/Nabvar.js",["445","446","447","448","449"],[],"import { Navbar, Link, Text,Spacer } from \"@nextui-org/react\";\nimport { AcmeLogo } from \"./AcmeLogo.js\";\nimport { useTheme as useNextTheme } from 'next-themes'\nimport { Switch, useTheme } from '@nextui-org/react'\nimport { SunIcon } from './SunIcon';\nimport { MoonIcon } from './MoonIcon';\nexport default function NavBar ({page}) {\n    const collapseItems = [\n        {nombre:\"Home\",href:\"/\"},\n        {nombre:\"Probabilidad\",href:\"/probabilidad\"},\n        {nombre:\"Intervalos de Confianza\",href:\"/confianza\"},\n        {nombre:\"Prueba de Hipotesis\",href:\"/hipotesis\"},\n        {nombre:\"Correlacion y Regresion\",href:\"/correlacion\"},\n\n      ];\n      const { setTheme } = useNextTheme();\n      const { isDark, type } = useTheme();\n    return(\n        <Navbar isBordered variant=\"static\">\n        <Navbar.Toggle showIn=\"xs\" />\n        <Navbar.Brand\n          css={{\n            \"@xs\": {\n              w: \"12%\",\n            },\n          }}\n        >\n        </Navbar.Brand>\n        <Navbar.Content\n          enableCursorHighlight\n          activeColor=\"secondary\"\n          hideIn=\"xs\"\n          variant=\"highlight-rounded\"\n        >\n       {collapseItems.map((item, index) => (\n            <Navbar.Link href={item.href} key={index} isActive={page == item.href ? true : false }>{item.nombre}</Navbar.Link>\n          ))}\n        </Navbar.Content>\n        <Navbar.Content\n          css={{\n            \"@xs\": {\n              w: \"12%\",\n              jc: \"flex-end\",\n            },\n          }}\n        >\n            <Navbar.Item>\n            <Switch\n        checked={isDark}\n        iconOff={<SunIcon filled />}\n        iconOn={<MoonIcon filled />}\n        size=\"xl\"\n        color=\"error\"\n        onChange={(e) => setTheme(e.target.checked ? 'dark' : 'light')}\n      />\n            </Navbar.Item>\n        </Navbar.Content>\n        <Navbar.Collapse>\n          {collapseItems.map((item, index) => (\n            <Navbar.CollapseItem\n              key={item.nombre}\n              activeColor=\"secondary\"\n              isActive={page == item.href ? true : false }\n            >\n              <Link\n                color=\"inherit\"\n                css={{\n                  minWidth: \"100%\",\n                }}\n                href={item.href}\n              >\n                {item.nombre}\n              </Link>\n            <Spacer y={2.5} />\n            </Navbar.CollapseItem>\n          ))}\n        </Navbar.Collapse>\n      </Navbar>\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/getDatos.js",["450"],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/modal/modalTipoEstimacion.js",["451","452","453","454","455","456","457","458","459"],[],"import { Card, Grid,Modal,Text,Row, useTheme} from \"@nextui-org/react\";\nimport img1 from \"../../../img/image004.png\"\nimport img2 from \"../../../img/proporcion.png\"\nimport img3 from \"../../../img/varianza.png\"\nimport img4 from \"../../../img/diferenciaMedias.png\"\nimport img5 from \"../../../img/diferenciaProporciones.png\"\nimport img6 from \"../../../img/estimarN.png\"\nimport React from \"react\";\nimport GetDatosMedia from \"../estimarMedia/GetDatos\";\nimport GetDatosProporcion from \"../estimarProporcion/GetDatos\";\nimport GetDatosVarianza from \"../estimarVarianza/GetDatos\";\nimport GetDatosDiferencia from \"../estimarDiferencia/GetDatos\";\nimport GetDatosDiferenciaProporciones from \"../estimarDiferenciaProporciones/GetDatos\";\nimport GetDatosEstimarN from \"../estimarN/GetDatos\";\nimport isMobile from \"is-mobile\";\nimport { useTheme as useNextTheme } from 'next-themes'\nexport default function ModalTipoDeEstimacion() {\n    const list = [\n        {\n            title: \"Estimacion de la Media Poblacional\",\n            img: img1\n        },\n        {\n            title: \"Estimacion del tamaño de Muestra\",\n            img: img6\n        },\n        {\n            title: \"Estimacion de la Proporcion Poblacional\",\n            img: img2\n        },\n        {\n            title: \"Estimacion de la Varianza\",\n            img: img3\n        }\n        ,\n        {\n            title: \"Estimacion de la Diferencia de Medias\",\n            img: img4\n        }\n        ,\n        {\n            title: \"Estimacion de la Diferencia de Proporciones\",\n            img: img5\n        }\n    ];\n    const { isDark, type } = useTheme();\n    const [visible, setVisible] = React.useState(true);\n    const [estimacion, setEstimacion] = React.useState(\"Estimacion de la Media Poblacional\");\n    const handlerEstimacion = (title) => {\n        setEstimacion(title)\n        setVisible(false)\n    };\n    const closeHandler = () => {\n        setVisible(false);\n    };\n    return (\n        <>\n        {estimacion == \"Estimacion de la Media Poblacional\" ? (<GetDatosMedia/>) : (<></>)}\n        {estimacion == \"Estimacion del tamaño de Muestra\" ? (<GetDatosEstimarN/>) : (<></>)}\n        {estimacion == \"Estimacion de la Proporcion Poblacional\" ? (<GetDatosProporcion/>) : (<></>)}\n        {estimacion == \"Estimacion de la Varianza\" ? (<GetDatosVarianza/>) : (<></>)}\n        {estimacion == \"Estimacion de la Diferencia de Medias\" ? (<GetDatosDiferencia/>) : (<></>)}\n        {estimacion == \"Estimacion de la Diferencia de Proporciones\" ? (<GetDatosDiferenciaProporciones/>) : (<></>)}\n\n        <Modal\n            blur\n            preventClose\n            aria-labelledby=\"modal-title\"\n            open={visible}\n            onClose={closeHandler}\n            className=\"ModalDatos\"\n            width={isMobile() ? \"100vw\":\"60vw\"}\n        >\n            <Modal.Header>\n                <Text id=\"modal-title\" size={18}>\n                    Tipo de\n                    <Text b size={18}> Estimacion</Text>\n                </Text>\n            </Modal.Header>\n            <Modal.Body>\n            <Grid.Container gap={2}>\n            {list.map((item, index) => (\n                            <Grid sm={isMobile() ? 12 : 6 } xs={12}key={index}>\n                                <Card isPressable isHoverable variant=\"bordered\" onClick={() => handlerEstimacion(item.title)}>\n                                    <Card.Body css={{ p: 0 }}>\n                                        <Card.Image\n                                            src={item.img}\n                                            objectFit=\"scale-down\"\n                                            width=\"100%\"\n                                            height={140}\n                                            alt={item.title}\n                                            css={isDark == true ? {filter:\"invert(3)\"} : {filter:\"none\"}}\n                                        />\n                                    </Card.Body>\n                                    <Card.Footer css={{ justifyItems: \"center\" }}>\n                                        <Row wrap=\"wrap\" justify=\"center\" align=\"center\">\n                                            <Text b>{item.title}</Text>\n                                        </Row>\n                                    </Card.Footer>\n                                </Card>\n                            </Grid>\n                            ))\n            }\n            </Grid.Container>\n            </Modal.Body>\n        </Modal>\n        </>\n    );\n}\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Home/Content.js",["460"],[],"import { Text, Spacer } from \"@nextui-org/react\"\nimport { Box } from \"./Box.js\"\n\nexport const Content = () => (\n  <Box css={{px: \"$12\", mt: \"$8\", \"@xsMax\": {px: \"$10\"}}}>\n    <Text h2>Lorem ipsum dolor sit amet</Text>\n    <Text size=\"$lg\">\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n      labore et dolore magna aliqua. Purus gravida quis blandit turpis. Augue neque gravida in\n      fermentum et sollicitudin ac orci. Et sollicitudin ac orci phasellus egestas. Elementum tempus\n      egestas sed sed risus pretium quam vulputate. Interdum velit euismod in pellentesque massa\n      placerat duis ultricies.\n    </Text>\n  </Box>\n);\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Home/Box.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Navbar/AcmeLogo.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/formDatos.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Navbar/MoonIcon.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/Navbar/SunIcon.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/logica.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaTestIndividuales.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaAnalisisResiduales.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaAnalisisVarianza.js",["461"],[],"import { Table, Input} from \"@nextui-org/react\";\nimport React from \"react\";\n\nexport default function TablaAnalisisVarianza({datos}) {\n  return (\n    <Table\n    variant=\"bordered\"\n    aria-label=\"Example pagination  table\"\n    color=\"secondary\"\n    css={{\n      height: \"auto\",\n      Width: \"100%\",\n    }}\n    >\n      <Table.Header>\n        <Table.Column></Table.Column>\n        <Table.Column>Grados de libertad</Table.Column>\n        <Table.Column>Suma de cuadrados</Table.Column>\n        <Table.Column>Promedio de los cuadrados</Table.Column>\n      </Table.Header>\n      <Table.Body>\n      <Table.Row key=\"1\">\n            <Table.Cell>Regresión</Table.Cell>\n            <Table.Cell>1</Table.Cell>\n            <Table.Cell>{(datos.sumaDeCuadrados.regresion).toFixed(5)}</Table.Cell>\n            <Table.Cell>{(datos.promedioDeCuadrados.regresion).toFixed(5)}</Table.Cell>\n        </Table.Row>\n        <Table.Row key=\"2\">\n            <Table.Cell>Residuos</Table.Cell>\n            <Table.Cell>{datos.N - 2}</Table.Cell>\n            <Table.Cell>{(datos.sumaDeCuadrados.residuos).toFixed(5)}</Table.Cell>\n            <Table.Cell>{(datos.promedioDeCuadrados.residuos).toFixed(5)}</Table.Cell>\n        </Table.Row>\n        <Table.Row key=\"3\">\n            <Table.Cell>Total</Table.Cell>\n            <Table.Cell>{datos.N - 1}</Table.Cell>\n            <Table.Cell>{(datos.sumaDeCuadrados.total).toFixed(5)}</Table.Cell>\n            <Table.Cell>{(datos.promedioDeCuadrados.total).toFixed(5)}</Table.Cell>\n        </Table.Row>\n      </Table.Body>\n    </Table>\n  );\n}\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarProporcion/GetDatos.js",["462","463"],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarN/GetDatos.js",["464","465"],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarMedia/GetDatos.js",["466","467","468"],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferencia/GetDatos.js",["469","470","471"],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarVarianza/GetDatos.js",["472","473","474"],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferenciaProporciones/GetDatos.js",["475","476","477"],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/result.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/formulas.js",["478"],[],"import { jStat as jStat } from 'jstat'\n\nexport function obtenerRho(datos){\n    const Rho = (sumarElementosXeY(datos)/ (datos.valores.length - 1)) / (obtenerDesvioX(datos) * obtenerDesvioY(datos));\n    return Rho\n}\nexport function obtenerBeta1(datos){\n    return sumarElementosXeY(datos) / denominadorBeta1(datos)\n}\nexport function obtenerConfianzaBeta1(datos,confianza){\n    const xFija = obtenerXfija(datos);\n    let sumartoria = 0;\n    datos.valores.forEach(function(e){\n        sumartoria = sumartoria + Math.pow((e.valorX - xFija),2);\n     })\n    const x = 1 -((1 - (confianza / 100)) / 2)\n    const T = jStat.studentt.inv( x, (datos.N - 2) )\n    const inferior = datos.beta1 - T * (datos.ErrorTipico / Math.sqrt(sumartoria))\n    const superior = datos.beta1 + T * (datos.ErrorTipico / Math.sqrt(sumartoria))\n    return {inferior:inferior,superior:superior}\n}\nexport function obtenerConfianzaBeta0(datos,confianza){\n    const xFija = obtenerXfija(datos);\n    let sumartoria = 0;\n    let sumartoria2 = 0;\n\n    datos.valores.forEach(function(e){\n        sumartoria = sumartoria + Math.pow((e.valorX - xFija),2);\n        sumartoria2 = sumartoria2 + Math.pow(e.valorX,2);\n\n     })\n    const x = 1 -((1 - (confianza / 100)) / 2)\n    const T = jStat.studentt.inv( x, (datos.N - 2) )\n    const inferior = datos.beta0 - T * ((datos.ErrorTipico * Math.sqrt(sumartoria2)) / Math.sqrt(datos.N * sumartoria))\n    const superior = datos.beta0 + T * ((datos.ErrorTipico * Math.sqrt(sumartoria2)) / Math.sqrt(datos.N * sumartoria))\n    return {inferior:inferior,superior:superior}\n}\nexport function obtenerBeta0(datos){\n    return obtenerYfija(datos) - (obtenerBeta1(datos) * obtenerXfija(datos))\n}\nexport function obtenerVarianza(datos){\n    let y2 = 0;\n    let y = 0;\n    let XeY = 0;\n    datos.valores.forEach(function(e){\n        y2 = y2 + Math.pow(e.valorY,2)\n        y = y + e.valorY\n        XeY = XeY + (e.valorX * e.valorY)\n    })\n    return (y2 - datos.beta0 * y - datos.beta1 * XeY) / 4\n}\nexport function obtenerValorCriticoF(datos){\nreturn jStat.ftest( datos.F, 1, datos.N - 2)\n}\nexport function obtenerProbabilidad(tscore, n){\nreturn jStat.ttest( tscore, n,2)\n}\nexport function obtenerDesvioBeta0(datos){\n    const xFija = obtenerXfija(datos)\n    let sumX2_Dividido_N_Menos2 = 0;\n    let varX = 0;\n    const varianza = Math.pow(datos.ErrorTipico,2) / datos.N\n    datos.valores.forEach(function(e){\n        sumX2_Dividido_N_Menos2 = sumX2_Dividido_N_Menos2 + (Math.pow(e.valorX,2) / (datos.N - 2));\n        varX = varX + Math.pow((e.valorX - xFija),2);\n     })\n     return Math.sqrt(varianza * (sumX2_Dividido_N_Menos2 / (varX / (datos.N - 2))))\n}\nexport function obtenerDesvioBeta1(datos){\n    const xFija = obtenerXfija(datos)\n    let varX = 0;\n    const varianza = Math.pow(datos.ErrorTipico,2) / (datos.N - 2)\n    datos.valores.forEach(function(e){\n        varX = varX + Math.pow((e.valorX - xFija),2);\n     })\n     varX = varX / (datos.N - 2)\n     return Math.sqrt(varianza / varX)\n}\nexport function obtenerResiduales(datos){\n    datos.valores.forEach(function(e){\n       e.Ysombrero = datos.beta0 + (datos.beta1 * e.valorX);\n       e.Residuo = e.valorY - e.Ysombrero;\n       e.ResiduoStandar = Math.pow(e.valorY - e.Ysombrero,2)\n    })\n    return datos.valores\n}\nexport function SumaDeCuadrados (datos){\n    const yFija = obtenerYfija(datos)\n    let regresion = 0;\n    let residuos = 0;\n    let total = 0;\n    datos.valores.forEach(function(e){\n        regresion = regresion + Math.pow(e.Ysombrero - yFija,2)\n        residuos = residuos + Math.pow(e.valorY - e.Ysombrero ,2)\n        total = total + Math.pow(e.valorY - yFija ,2)\n     })\n    return {regresion:regresion,residuos:residuos,total:total};\n}\nexport function PromedioDeCuadrados(datos){\n    let regresion = datos.sumaDeCuadrados.regresion;\n    let residuos = datos.sumaDeCuadrados.residuos / (datos.N - 2);\n    let total = datos.sumaDeCuadrados.total / (datos.N - 1);\n    return {regresion:regresion,residuos:residuos,total:total};\n}\nexport function obtenerErrorTipico(datos){\n    let sumatoriaY = 0\n    const yFija = obtenerYfija(datos)\n    datos.valores.forEach(function(e){\n        sumatoriaY = sumatoriaY + Math.pow((e.valorY - yFija),2)\n    })\n    return Math.sqrt((1/(datos.N - 2)) * (sumatoriaY - (Math.pow(sumarElementosXeY(datos),2)/denominadorBeta1(datos))))\n}\nexport function r2Ajustado(datos){\n    const K = 1;\n    return 1 - ((datos.N - 1) / (datos.N - K - 1)) * (1 - Math.pow(datos.Rho,2))\n}\nexport function obtenerXfija(datos){\n    let xFija = 0;\n    datos.valores.forEach(function(e){\n        xFija = xFija + e.valorX\n    })\n    return xFija / datos.valores.length\n}\nexport function obtenerYfija(datos){\n    let yFija = 0;\n    datos.valores.forEach(function(e){\n        yFija = yFija + e.valorY\n    })\n    return yFija / datos.valores.length\n}\nexport function denominadorBeta1(datos){\n    let sumatoria = 0;\n    const xFija = obtenerXfija(datos)\n    datos.valores.forEach(function(e){\n        sumatoria = sumatoria + Math.pow((e.valorX - xFija),2)\n    })\n    return sumatoria\n}\nexport function sumarElementosXeY(datos){\n    let yFija = obtenerYfija(datos);\n    let xFija = obtenerXfija(datos);\n    let sumatoria = 0;\n    datos.valores.forEach(function(e){\n        sumatoria = sumatoria + ((e.valorX - xFija) * (e.valorY - yFija))\n    })\n    return sumatoria\n}\nexport function obtenerDesvioX(datos){\n    let sumatoria = 0;\n    let xFija = obtenerXfija(datos);\n    datos.valores.forEach(function(e){\n        sumatoria = sumatoria + Math.pow((e.valorX - xFija),2)\n    })\n    return Math.sqrt(sumatoria / (datos.valores.length - 1))\n}\nexport function obtenerDesvioY(datos){\n    let sumatoria = 0;\n    let yFija = obtenerYfija(datos);\n    datos.valores.forEach(function(e){\n        sumatoria = sumatoria + Math.pow((e.valorY - yFija),2)\n    })\n    return Math.sqrt(sumatoria / (datos.valores.length - 1))\n}\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/dropdownMenue.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaCorrelacion.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarProporcion/formDatos.js",["479","480","481","482"],[],"import { Spacer, Card, Text, Input,Grid, Switch } from \"@nextui-org/react\";\nimport React from \"react\";\nexport default function Intervalo_de_confianza({ datos }) {\n    const [normal, setNormal] = React.useState(true);\n    return (\n        <>\n            <Card isHoverable variant=\"bordered\" css={{ mw: \"500px\"}} className=\"cardConfianza\">\n                <Card.Body>\n                    <Text h1 size={40}\n                        css={{\n                            textGradient: \"45deg, $yellow600 -20%, $red600 100%\",\n                            textAlign:\"center\"\n                        }}\n                        weight=\"bold\">Datos de la Muestra</Text>\n                    <Spacer y={1} />\n                    <Input id='R' type=\"number\" label=\"Cantidad de elementos con atributo determinado\"/>\n                    <Spacer y={1} />\n                    <Input id='N' type=\"number\" label=\"Tamaño de la Poblacion\"/>\n                    <Spacer y={1} />\n                    <Input id='confianza' placeholder=\"Ej: 95\" type=\"number\" label=\"Nivel de Confianza\" />\n                    <Spacer y={1} />\n                </Card.Body>\n            </Card>\n        </>\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarProporcion/logica.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaDatos.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarMedia/formDatos.js",["483","484"],[],"import { Spacer, Card, Text, Input, Button, Modal, Row, Grid, Switch } from \"@nextui-org/react\";\nimport ModalTipoDeDatos from \"../modal/modalTipoDeDatos\";\nimport React from \"react\";\nexport default function Intervalo_de_confianza({ datos }) {\n    const [visible, setVisible] = React.useState(false);\n    const [normal, setNormal] = React.useState(true);\n    const [visibleInputs, setVisibleInputs] = React.useState(false);\n    const handler = () => setVisible(true);\n    const handlerInputs = (title) => { setVisibleInputs(true); datos.tipoDeValores = title };\n    const closeHandler = () => {\n        setVisible(false);\n    };\n    function obtenerMedia(){\n        let media = 0\n        datos.valores.forEach( e => {\n            media = media + Number(e.value)\n            });\n        return media / datos.valores.length\n    }\n    const list = [\n        {\n            title: \"Agrupados en intervalos\",\n            img: \"https://i.ytimg.com/vi/CuKr7GzohbI/maxresdefault.jpg\"\n        },\n        {\n            title: \"Sueltos\",\n            img: \"https://seactuario.com/ContMatematicas/ProbEstadistica/ImagesProbab/EjercFrecAgrup.png\"\n        }\n    ];\n    return (\n        <>\n            <Card isHoverable variant=\"bordered\" css={{ mw: \"500px\"}} className=\"cardConfianza\">\n                <Card.Body>\n                    <Text h1 size={40}\n                        css={{\n                            textGradient: \"45deg, $yellow600 -20%, $red600 100%\",\n                            textAlign:\"center\"\n                        }}\n                        weight=\"bold\">Datos de la Muestra</Text>\n                    <Spacer y={1} />\n                    <Grid.Container gap={2}  justify=\"center\" alignItems=\"stretch\">\n                        <Grid xs={3} justify=\"center\" >\n                            <Switch shadow color=\"success\" checked={normal} id=\"distribucion\" onChange={(e) => setNormal(e.target.checked)} />\n                        </Grid>\n                        <Grid xs={9}>\n                            <Text h4 css={{textAlign:\"center\"}}>{normal == true ? \"Distribucion Normal\" : \"Distribucion No Normal\"}</Text>\n                        </Grid>\n                    </Grid.Container>\n                    <Grid.Container gap={2}>\n                        <Grid xs={6}>\n                        {datos.varianza ? (<Input id='desvio' type=\"number\" value={Math.sqrt(datos.varianza)} label=\"Desvio(√varianza)\"/>):(<Input id='desvio' type=\"number\" label=\"Desvio(√varianza)\"/>)}\n                        </Grid>\n                        <Grid xs={6}>\n                            <Input id='varianza' type=\"number\"  label=\"Varianza\"/>\n                        </Grid>\n                    </Grid.Container>\n                    <Spacer y={1} />\n                    {datos.valores.length !== 0 ? (<Input id='N' type=\"number\" disabled value={datos.valores.length} label=\"Tamaño de muestra\"/>)\n                    :(<Grid.Container gap={2}>\n                        <Grid xs={6}>\n                            <Input id='N' type=\"number\" label=\"Tamaño de muestra(N)\"/>\n                        </Grid>\n                        <Grid xs={6}>\n                            <Input id='n' type=\"number\" label=\"Seleccion de la muestra(n)\"/>\n                        </Grid>\n                      </Grid.Container>\n                    )}\n                    <Spacer y={1} />\n                    {datos.valores.length !== 0 ? \n                    (<Input id='media' type=\"number\" value={obtenerMedia()} label=\"Media de la muestra\"/>):(<Input id='media' type=\"number\" label=\"Media de la muestra\"/>)}\n                    <Spacer y={1} />\n                    <Input id='confianza' placeholder=\"Ej: 95\" type=\"number\" label=\"Nivel de Confianza\" />\n                    <Spacer y={1} />\n                    {datos.confianza && datos.N <= 30? (<Button shadow color=\"success\" auto onClick={handler}>\n                        Agregar Valores\n                    </Button>) : (<></>)}\n                </Card.Body>\n            </Card>\n            <Modal\n                closeButton\n                blur\n                preventClose\n                aria-labelledby=\"modal-title\"\n                open={visible}\n                onClose={closeHandler}\n                className=\"ModalDatos\"\n            >\n                <Modal.Header>\n                    <Text id=\"modal-title\" size={18}>\n                        Tipo de\n                        <Text b size={18}> Datos</Text>\n                    </Text>\n                </Modal.Header>\n                <Modal.Body>\n                    {visibleInputs == true ? (<ModalTipoDeDatos datos={datos} />) : (\n                        list.map((item, index) => (\n                            <Grid xs={12} sm={12} key={index}>\n                                <Card isPressable onClick={() => handlerInputs(item.title)}>\n                                    <Card.Body css={{ p: 0 }}>\n                                        <Card.Image\n                                            src={item.img}\n                                            objectFit=\"cover\"\n                                            width=\"100%\"\n                                            height={140}\n                                            alt={item.title}\n                                        />\n                                    </Card.Body>\n                                    <Card.Footer css={{ justifyItems: \"center\" }}>\n                                        <Row wrap=\"wrap\" justify=\"center\" align=\"center\">\n                                            <Text b>{item.title}</Text>\n                                        </Row>\n                                    </Card.Footer>\n                                </Card>\n                            </Grid>\n                        ))\n                    )}\n\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarN/formDatos.js",["485","486","487"],[],"import { Spacer, Card, Text, Input,Grid, Switch } from \"@nextui-org/react\";\nimport React from \"react\";\nexport default function Intervalo_de_confianza({ datos }) {\n    const [normal, setNormal] = React.useState(true);\n    return (\n        <>\n            <Card isHoverable variant=\"bordered\" css={{ mw: \"500px\"}} className=\"cardConfianza\">\n                <Card.Body>\n                    <Text h1 size={40}\n                        css={{\n                            textGradient: \"45deg, $yellow600 -20%, $red600 100%\",\n                            textAlign:\"center\"\n                        }}\n                        weight=\"bold\">Datos de la Muestra</Text>\n                    <Spacer y={1} />\n                    <Grid.Container gap={2}>\n                        <Grid xs={6}>\n                        {datos.varianza ? (<Input id='desvio' type=\"number\" value={Math.sqrt(datos.varianza)} label=\"Desvio(√varianza)\"/>):(<Input id='desvio' type=\"number\" label=\"Desvio(√varianza)\"/>)}\n                        </Grid>\n                        <Grid xs={6}>\n                        {datos.desvio ? (<Input id='varianza' type=\"number\" value={Math.pow(datos.desvio,2)} label=\"Varianza\"/>) : (<Input id='varianza' type=\"number\"  label=\"Varianza\"/>)}\n                        </Grid>\n                    </Grid.Container>\n                    <Spacer y={1} />\n                    <Input id='proporcion' placeholder=\"Ej: 0.43\"  type=\"number\" label=\"Proporcion de elementos %\" />\n                    <Spacer y={1} />\n                    <Input id='E' type=\"number\" label=\"Error de muestreo no superior a :\"/>\n                    <Spacer y={1} />\n                    <Input id='confianza' placeholder=\"Ej: 95\" type=\"number\" label=\"Nivel de Confianza\" />\n                    <Spacer y={1} />\n                </Card.Body>\n            </Card>\n        </>\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarN/logica.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarMedia/logica.js",["488","489","490","491","492"],[],"import Result from \"../Result/result\"\nimport tStudentResultado from \"../formulas/tStudent\";\nimport DistribucionNormalResultado from \"../formulas/distribucionNormal\";\nimport mediaPoblacionalFinita_Z from \"../formulas/mediaPoblacionalFinita\";\nimport TchebycheffResultado from \"../formulas/Tchebycheff\";\nimport tStudentConCorreccion from \"../formulas/tStudentConCorreccion\";\nexport default function Logica({datos}) {\n    if(datos.desvio === 0)datos.desvio = undefined;\n    if(datos.varianza !== undefined)datos.desvio = Math.sqrt(datos.varianza);\n    if(datos.media || datos.desvio || datos.N || datos.confianza){\n        if(datos.distribucion == \"Normal\" && datos.N <= 30 || datos.n <= 30 && !datos.varianza){\n            if(datos.n){\n                datos.type = \"T de Student para poblaciones finitas\"\n                datos.resultado = tStudentConCorreccion(datos)\n            }else{\n                datos.type = \"T de Student\"\n                datos.resultado = tStudentResultado(datos)\n            }\n        }else{\n            if(datos.N <= 30 && datos.distribucion !== \"Normal\"){\n                datos.type = \"Teorema de Chebycheff\"\n                datos.resultado = TchebycheffResultado(datos.media, datos.N,datos.desvio,datos.confianza,datos.valores)\n            }else{\n                if(datos.desvio && datos.media && datos.N && datos.confianza){\n                    if(datos.n){\n                        datos.type = \"Z para poblaciones finitas\"\n                        datos.resultado = mediaPoblacionalFinita_Z(datos)\n                    }else{\n                        datos.type = \"Z\"\n                        datos.resultado = DistribucionNormalResultado(datos.media, datos.N,datos.desvio,datos.confianza)\n                    }\n                }\n            }\n        }\n    }\n   \n    return (<Result result={datos} />)\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferencia/formDatos.js",["493","494","495","496","497","498"],[],"import { Spacer, Card, Text, Input, Button, Modal, Row, Grid, Switch } from \"@nextui-org/react\";\nimport ModalTipoDeDatos from \"../modal/modalTipoDeDatos\";\nimport React from \"react\";\nexport default function Intervalo_de_confianza({ datos }) {\n    const [visible, setVisible] = React.useState(false);\n    const [normal, setNormal] = React.useState(true);\n    const [visibleInputs, setVisibleInputs] = React.useState(false);\n    const handler = () => setVisible(true);\n    const handlerInputs = (title) => { setVisibleInputs(true); datos.tipoDeValores = title };\n    const closeHandler = () => {\n        setVisible(false);\n    };\n    function obtenerMedia(){\n        let media = 0\n        datos.valores.forEach( e => {\n            media = media + Number(e.value)\n            });\n        return media / datos.valores.length\n    }\n    const list = [\n        {\n            title: \"Agrupados en intervalos\",\n            img: \"https://i.ytimg.com/vi/CuKr7GzohbI/maxresdefault.jpg\"\n        },\n        {\n            title: \"Sueltos\",\n            img: \"https://seactuario.com/ContMatematicas/ProbEstadistica/ImagesProbab/EjercFrecAgrup.png\"\n        }\n    ];\n    return (\n        <>\n            <Card isHoverable variant=\"bordered\" css={{ mw: \"500px\"}} className=\"cardConfianza\">\n                <Card.Body>\n                    <Text h1 size={40}\n                        css={{\n                            textGradient: \"45deg, $yellow600 -20%, $red600 100%\",\n                            textAlign:\"center\"\n                        }}\n                        weight=\"bold\">Datos de la Muestra 1</Text>\n                    <Spacer y={1} />\n                    <Grid.Container gap={2}>\n                        <Grid xs={6}>\n                        {datos.varianza ? (<Input id='desvio' type=\"number\" value={Math.sqrt(datos.varianza)} label=\"Desvio(√varianza)\"/>):(<Input id='desvio' type=\"number\" label=\"Desvio(√varianza)\"/>)}\n                        </Grid>\n                        <Grid xs={6}>\n                        {datos.desvio ? (<Input id='varianza' type=\"number\" value={Math.pow(datos.desvio,2)} label=\"Varianza\"/>) : (<Input id='varianza' type=\"number\"  label=\"Varianza\"/>)}\n                        </Grid>\n                    </Grid.Container>\n                    <Spacer y={1} />\n                    {datos.valores.length !== 0 ? (<Input id='media' type=\"number\" value={obtenerMedia()} label=\"Media de la muestra\"/>):(<Input id='media' type=\"number\" label=\"Media de la muestra\"/>)}\n                    <Spacer y={1} />\n                    {datos.valores.length !== 0 ? (<Input id='N' type=\"number\" disabled value={datos.valores.length} label=\"Tamaño de muestra\"/>):(<Input id='N' type=\"number\" label=\"Tamaño de muestra\"/>)}\n                    <Spacer y={1} />\n                    <Input id='confianza' type=\"number\" placeholder=\"Ej: 95\" label=\"Nivel de Confianza\" />\n                </Card.Body>\n            </Card>\n            <Modal\n                closeButton\n                blur\n                preventClose\n                aria-labelledby=\"modal-title\"\n                open={visible}\n                onClose={closeHandler}\n                className=\"ModalDatos\"\n            >\n                <Modal.Header>\n                    <Text id=\"modal-title\" size={18}>\n                        Tipo de\n                        <Text b size={18}> Datos</Text>\n                    </Text>\n                </Modal.Header>\n                <Modal.Body>\n                    {visibleInputs == true ? (<ModalTipoDeDatos datos={datos} />) : (\n                        list.map((item, index) => (\n                            <Grid xs={12} sm={12} key={index}>\n                                <Card isPressable onClick={() => handlerInputs(item.title)}>\n                                    <Card.Body css={{ p: 0 }}>\n                                        <Card.Image\n                                            src={item.img}\n                                            objectFit=\"cover\"\n                                            width=\"100%\"\n                                            height={140}\n                                            alt={item.title}\n                                        />\n                                    </Card.Body>\n                                    <Card.Footer css={{ justifyItems: \"center\" }}>\n                                        <Row wrap=\"wrap\" justify=\"center\" align=\"center\">\n                                            <Text b>{item.title}</Text>\n                                        </Row>\n                                    </Card.Footer>\n                                </Card>\n                            </Grid>\n                        ))\n                    )}\n\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferencia/formDatos2.js",["499","500","501","502","503","504"],[],"import { Spacer, Card, Text, Input, Button, Modal, Row, Grid, Switch } from \"@nextui-org/react\";\nimport ModalTipoDeDatos from \"../modal/modalTipoDeDatos\";\nimport React from \"react\";\nexport default function Intervalo_de_confianza2({ datos }) {\n    const [visible, setVisible] = React.useState(false);\n    const [normal, setNormal] = React.useState(true);\n    const [visibleInputs, setVisibleInputs] = React.useState(false);\n    const handler = () => setVisible(true);\n    const handlerInputs = (title) => { setVisibleInputs(true); datos.tipoDeValores = title };\n    const closeHandler = () => {\n        setVisible(false);\n    };\n    function obtenerMedia(){\n        let media = 0\n        datos.valores.forEach( e => {\n            media = media + Number(e.value)\n            });\n        return media / datos.valores.length\n    }\n    const list = [\n        {\n            title: \"Agrupados en intervalos\",\n            img: \"https://i.ytimg.com/vi/CuKr7GzohbI/maxresdefault.jpg\"\n        },\n        {\n            title: \"Sueltos\",\n            img: \"https://seactuario.com/ContMatematicas/ProbEstadistica/ImagesProbab/EjercFrecAgrup.png\"\n        }\n    ];\n    return (\n        <>\n            <Card isHoverable variant=\"bordered\" css={{ mw: \"500px\"}} className=\"cardConfianza\">\n                <Card.Body>\n                    <Text h1 size={40}\n                        css={{\n                            textGradient: \"45deg, $yellow600 -20%, $red600 100%\",\n                            textAlign:\"center\"\n                        }}\n                        weight=\"bold\">Datos de la Muestra 2</Text>\n                    <Spacer y={1} />\n                    <Grid.Container gap={2}>\n                        <Grid xs={6}>\n                        {datos.varianza ? (<Input id='desvio2' type=\"number\" value={Math.sqrt(datos.varianza2)} label=\"Desvio(√varianza)\"/>):(<Input id='desvio2' type=\"number\" label=\"Desvio(√varianza)\"/>)}\n                        </Grid>\n                        <Grid xs={6}>\n                        {datos.desvio ? (<Input id='varianza2' type=\"number\" value={Math.pow(datos.desvio2,2)} label=\"Varianza\"/>) : (<Input id='varianza2' type=\"number\"  label=\"Varianza\"/>)}\n                        </Grid>\n                    </Grid.Container>\n                    <Spacer y={1} />\n                    {datos.valores.length !== 0 ? (<Input id='media2' type=\"number\" value={obtenerMedia()} label=\"Media de la muestra\"/>):(<Input id='media2' type=\"number\" label=\"Media de la muestra\"/>)}\n                    <Spacer y={1} />\n                    {datos.valores.length !== 0 ? (<Input id='N2' type=\"number\" disabled value={datos.valores.length} label=\"Tamaño de muestra\"/>):(<Input id='N2' type=\"number\" label=\"Tamaño de muestra\"/>)}\n                    <Spacer y={1} />\n                    {datos.confianza ? (<Input id='confianza2' type=\"number\" disabled value={datos.confianza} label=\"Nivel de Confianza\" />):(<Input id='confianza2' type=\"number\" placeholder=\"Ej: 95\" label=\"Nivel de Confianza\" />)}\n                </Card.Body>\n            </Card>\n            <Modal\n                closeButton\n                blur\n                preventClose\n                aria-labelledby=\"modal-title\"\n                open={visible}\n                onClose={closeHandler}\n                className=\"ModalDatos\"\n            >\n                <Modal.Header>\n                    <Text id=\"modal-title\" size={18}>\n                        Tipo de\n                        <Text b size={18}> Datos</Text>\n                    </Text>\n                </Modal.Header>\n                <Modal.Body>\n                    {visibleInputs == true ? (<ModalTipoDeDatos datos={datos} />) : (\n                        list.map((item, index) => (\n                            <Grid xs={12} sm={12} key={index}>\n                                <Card isPressable onClick={() => handlerInputs(item.title)}>\n                                    <Card.Body css={{ p: 0 }}>\n                                        <Card.Image\n                                            src={item.img}\n                                            objectFit=\"cover\"\n                                            width=\"100%\"\n                                            height={140}\n                                            alt={item.title}\n                                        />\n                                    </Card.Body>\n                                    <Card.Footer css={{ justifyItems: \"center\" }}>\n                                        <Row wrap=\"wrap\" justify=\"center\" align=\"center\">\n                                            <Text b>{item.title}</Text>\n                                        </Row>\n                                    </Card.Footer>\n                                </Card>\n                            </Grid>\n                        ))\n                    )}\n\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferenciaProporciones/formDatos.js",["505","506","507","508","509","510"],[],"import { Spacer, Card, Text, Input, Button, Modal, Row, Grid, Switch } from \"@nextui-org/react\";\nimport ModalTipoDeDatos from \"../modal/modalTipoDeDatos\";\nimport React from \"react\";\nexport default function Intervalo_de_confianza({ datos }) {\n    const [visible, setVisible] = React.useState(false);\n    const [normal, setNormal] = React.useState(true);\n    const [visibleInputs, setVisibleInputs] = React.useState(false);\n    const handler = () => setVisible(true);\n    const handlerInputs = (title) => { setVisibleInputs(true); datos.tipoDeValores = title };\n    const closeHandler = () => {\n        setVisible(false);\n    };\n    const list = [\n        {\n            title: \"Agrupados en intervalos\",\n            img: \"https://i.ytimg.com/vi/CuKr7GzohbI/maxresdefault.jpg\"\n        },\n        {\n            title: \"Sueltos\",\n            img: \"https://seactuario.com/ContMatematicas/ProbEstadistica/ImagesProbab/EjercFrecAgrup.png\"\n        }\n    ];\n    return (\n        <>\n            <Card isHoverable variant=\"bordered\" css={{ mw: \"500px\" }} className=\"cardConfianza\">\n                <Card.Body>\n                    <Text h1 size={40}\n                        css={{\n                            textGradient: \"45deg, $yellow600 -20%, $red600 100%\",\n                            textAlign: \"center\"\n                        }}\n                        weight=\"bold\">Datos de la Muestra 1</Text>\n                    <Spacer y={1} />\n                    <Grid.Container gap={2}>\n                        <Grid xs={6}>\n                        {datos.R ? (<Input id='R' type=\"number\" value={datos.R} label=\"Elementos con atributo\" />):(<Input id='R' placeholder=\"Ej: 200\" type=\"number\"  label=\"Elementos con atributo\" />)}\n                        </Grid>\n                        <Grid xs={6}>\n                        {datos.R && datos.N ? (<Input id='proporcion' value={datos.R/datos.N} type=\"number\" label=\"Proporcion de elementos\" />) :(<Input id='proporcion' type=\"number\" placeholder=\"Ej: 0.75\" label=\"Proporcion de elementos %\"/>)}\n                        </Grid>\n                    </Grid.Container>\n                    <Spacer y={1} />\n                    <Input id='N' type=\"number\" label=\"Tamaño de la Poblacion\" />\n                    <Spacer y={1} />\n                    <Input id='confianza' placeholder=\"Ej: 95\" type=\"number\" label=\"Nivel de Confianza\" />\n                </Card.Body>\n            </Card>\n            <Modal\n                closeButton\n                blur\n                preventClose\n                aria-labelledby=\"modal-title\"\n                open={visible}\n                onClose={closeHandler}\n                className=\"ModalDatos\"\n            >\n                <Modal.Header>\n                    <Text id=\"modal-title\" size={18}>\n                        Tipo de\n                        <Text b size={18}> Datos</Text>\n                    </Text>\n                </Modal.Header>\n                <Modal.Body>\n                    {visibleInputs == true ? (<ModalTipoDeDatos datos={datos} />) : (\n                        list.map((item, index) => (\n                            <Grid xs={12} sm={12} key={index}>\n                                <Card isPressable onClick={() => handlerInputs(item.title)}>\n                                    <Card.Body css={{ p: 0 }}>\n                                        <Card.Image\n                                            src={item.img}\n                                            objectFit=\"cover\"\n                                            width=\"100%\"\n                                            height={140}\n                                            alt={item.title}\n                                        />\n                                    </Card.Body>\n                                    <Card.Footer css={{ justifyItems: \"center\" }}>\n                                        <Row wrap=\"wrap\" justify=\"center\" align=\"center\">\n                                            <Text b>{item.title}</Text>\n                                        </Row>\n                                    </Card.Footer>\n                                </Card>\n                            </Grid>\n                        ))\n                    )}\n\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferenciaProporciones/logica.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferencia/logica.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarDiferenciaProporciones/formDatos2.js",["511","512","513","514","515","516","517"],[],"import { Spacer, Card, Text, Input, Button, Modal, Row, Grid, Switch } from \"@nextui-org/react\";\nimport ModalTipoDeDatos from \"../modal/modalTipoDeDatos\";\nimport React from \"react\";\nexport default function Intervalo_de_confianza2({ datos }) {\n    const [visible, setVisible] = React.useState(false);\n    const [normal, setNormal] = React.useState(true);\n    const [visibleInputs, setVisibleInputs] = React.useState(false);\n    const handler = () => setVisible(true);\n    const handlerInputs = (title) => { setVisibleInputs(true); datos.tipoDeValores = title };\n    const closeHandler = () => {\n        setVisible(false);\n    };\n    function obtenerMedia(){\n        let media = 0\n        datos.valores.forEach( e => {\n            media = media + Number(e.value)\n            });\n        return media / datos.valores.length\n    }\n    const list = [\n        {\n            title: \"Agrupados en intervalos\",\n            img: \"https://i.ytimg.com/vi/CuKr7GzohbI/maxresdefault.jpg\"\n        },\n        {\n            title: \"Sueltos\",\n            img: \"https://seactuario.com/ContMatematicas/ProbEstadistica/ImagesProbab/EjercFrecAgrup.png\"\n        }\n    ];\n    return (\n        <>\n            <Card isHoverable variant=\"bordered\" css={{ mw: \"500px\"}} className=\"cardConfianza\">\n            <Card.Body>\n                    <Text h1 size={40}\n                        css={{\n                            textGradient: \"45deg, $yellow600 -20%, $red600 100%\",\n                            textAlign: \"center\"\n                        }}\n                        weight=\"bold\">Datos de la Muestra 2</Text>\n                    <Spacer y={1} />\n                    <Grid.Container gap={2}>\n                        <Grid xs={6}>\n                        {datos.R2 ? (<Input id='R2' type=\"number\" value={datos.R2} label=\"Elementos con atributo\" />):(<Input id='R2' placeholder=\"Ej: 200\" type=\"number\"  label=\"Elementos con atributo\" />)}\n                        </Grid>\n                        <Grid xs={6}>\n                        {datos.R2 && datos.N2 ? (<Input id='proporcion2' value={datos.R2/datos.N2} type=\"number\" label=\"Proporcion de elementos\" />) :(<Input id='proporcion2' type=\"number\" placeholder=\"Ej: 0.75\" label=\"Proporcion de elementos %\"/>)}\n                        </Grid>\n                    </Grid.Container>\n                    <Spacer y={1} />\n                    <Input id='N2' type=\"number\" label=\"Tamaño de la Poblacion\" />\n                    <Spacer y={1} />\n                    {datos.confianza ? (<Input id='confianza2' type=\"number\" disabled value={datos.confianza} label=\"Nivel de Confianza\" />):(<Input id='confianza2' type=\"number\" placeholder=\"Ej: 95\" label=\"Nivel de Confianza\" />)}               \n                </Card.Body>\n            </Card>\n            <Modal\n                closeButton\n                blur\n                preventClose\n                aria-labelledby=\"modal-title\"\n                open={visible}\n                onClose={closeHandler}\n                className=\"ModalDatos\"\n            >\n                <Modal.Header>\n                    <Text id=\"modal-title\" size={18}>\n                        Tipo de\n                        <Text b size={18}> Datos</Text>\n                    </Text>\n                </Modal.Header>\n                <Modal.Body>\n                    {visibleInputs == true ? (<ModalTipoDeDatos datos={datos} />) : (\n                        list.map((item, index) => (\n                            <Grid xs={12} sm={12} key={index}>\n                                <Card isPressable onClick={() => handlerInputs(item.title)}>\n                                    <Card.Body css={{ p: 0 }}>\n                                        <Card.Image\n                                            src={item.img}\n                                            objectFit=\"cover\"\n                                            width=\"100%\"\n                                            height={140}\n                                            alt={item.title}\n                                        />\n                                    </Card.Body>\n                                    <Card.Footer css={{ justifyItems: \"center\" }}>\n                                        <Row wrap=\"wrap\" justify=\"center\" align=\"center\">\n                                            <Text b>{item.title}</Text>\n                                        </Row>\n                                    </Card.Footer>\n                                </Card>\n                            </Grid>\n                        ))\n                    )}\n\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarVarianza/formDatos.js",["518","519"],[],"import { Spacer, Card, Text, Input, Button, Modal, Row, Grid, Switch } from \"@nextui-org/react\";\nimport ModalTipoDeDatos from \"../modal/modalTipoDeDatos\";\nimport React from \"react\";\nexport default function Intervalo_de_confianza({ datos }) {\n    const [visible, setVisible] = React.useState(false);\n    const [normal, setNormal] = React.useState(true);\n    const [visibleInputs, setVisibleInputs] = React.useState(false);\n    const handler = () => setVisible(true);\n    const handlerInputs = (title) => { setVisibleInputs(true); datos.tipoDeValores = title };\n    const closeHandler = () => {\n        setVisible(false);\n    };\n    function obtenerMedia(){\n        let media = 0\n        datos.valores.forEach( e => {\n            media = media + Number(e.value)\n            });\n        return media / datos.valores.length\n    }\n    const list = [\n        {\n            title: \"Agrupados en intervalos\",\n            img: \"https://i.ytimg.com/vi/CuKr7GzohbI/maxresdefault.jpg\"\n        },\n        {\n            title: \"Sueltos\",\n            img: \"https://seactuario.com/ContMatematicas/ProbEstadistica/ImagesProbab/EjercFrecAgrup.png\"\n        }\n    ];\n    return (\n        <>\n            <Card isHoverable variant=\"bordered\" css={{ mw: \"500px\"}} className=\"cardConfianza\">\n                <Card.Body>\n                    <Text h1 size={40}\n                        css={{\n                            textGradient: \"45deg, $yellow600 -20%, $red600 100%\",\n                            textAlign:\"center\"\n                        }}\n                        weight=\"bold\">Datos de la Muestra</Text>\n                    <Spacer y={1} />\n                    <Grid.Container gap={2}  justify=\"center\" alignItems=\"stretch\">\n                        <Grid xs={3} justify=\"center\" >\n                            <Switch shadow color=\"success\" checked={normal} id=\"distribucion\" onChange={(e) => setNormal(e.target.checked)} />\n                        </Grid>\n                        <Grid xs={9}>\n                            <Text h4 css={{textAlign:\"center\"}}>{normal == true ? \"Distribucion Normal\" : \"Distribucion No Normal\"}</Text>\n                        </Grid>\n                    </Grid.Container>\n                    <Grid.Container gap={2}>\n                        <Grid xs={6}>\n                        {datos.varianza ? (<Input id='desvio' type=\"number\" value={Math.sqrt(datos.varianza)} label=\"Desvio(√varianza)\"/>):(<Input id='desvio' type=\"number\" label=\"Desvio(√varianza)\"/>)}\n                        </Grid>\n                        <Grid xs={6}>\n                        {datos.desvio ? (<Input id='varianza' type=\"number\" value={Math.pow(datos.desvio,2)} label=\"Varianza\"/>) : (<Input id='varianza' type=\"number\"  label=\"Varianza\"/>)}\n                        </Grid>\n                    </Grid.Container>\n                    <Spacer y={1} />\n                    {datos.valores.length !== 0 ? (<Input id='media' type=\"number\" value={obtenerMedia()} label=\"Media de la muestra\"/>):(<Input id='media' type=\"number\" label=\"Media de la muestra\"/>)}\n                    <Spacer y={1} />\n                    {datos.valores.length !== 0 ? (<Input id='N' type=\"number\" disabled value={datos.valores.length} label=\"Tamaño de muestra\"/>):(<Input id='N' type=\"number\" label=\"Tamaño de muestra\"/>)}\n                    <Spacer y={1} />\n                    <Input id='confianza' placeholder=\"Ej: 95\" type=\"number\" label=\"Nivel de Confianza\" />\n                    <Spacer y={1} />\n                    {datos.confianza && datos.N <= 30? (<Button shadow color=\"success\" auto onClick={handler}>\n                        Agregar Valores\n                    </Button>) : (<></>)}\n                </Card.Body>\n            </Card>\n            <Modal\n                closeButton\n                blur\n                preventClose\n                aria-labelledby=\"modal-title\"\n                open={visible}\n                onClose={closeHandler}\n                className=\"ModalDatos\"\n            >\n                <Modal.Header>\n                    <Text id=\"modal-title\" size={18}>\n                        Tipo de\n                        <Text b size={18}> Datos</Text>\n                    </Text>\n                </Modal.Header>\n                <Modal.Body>\n                    {visibleInputs == true ? (<ModalTipoDeDatos datos={datos} />) : (\n                        list.map((item, index) => (\n                            <Grid xs={12} sm={12} key={index}>\n                                <Card isPressable onClick={() => handlerInputs(item.title)}>\n                                    <Card.Body css={{ p: 0 }}>\n                                        <Card.Image\n                                            src={item.img}\n                                            objectFit=\"cover\"\n                                            width=\"100%\"\n                                            height={140}\n                                            alt={item.title}\n                                        />\n                                    </Card.Body>\n                                    <Card.Footer css={{ justifyItems: \"center\" }}>\n                                        <Row wrap=\"wrap\" justify=\"center\" align=\"center\">\n                                            <Text b>{item.title}</Text>\n                                        </Row>\n                                    </Card.Footer>\n                                </Card>\n                            </Grid>\n                        ))\n                    )}\n\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/estimarVarianza/logica.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/modalFormulas.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/DeleteIcon.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/IconButton.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/Result/result.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/Proporcion.js",["520"],[],"const { jStat } = require('jstat')\n\nexport default function ProporcionPoblacional(N,R,confianza){\n    let pFija = R/N\n    let qFija = 1 - pFija\n    \n    let Z = 0\n    if(confianza !== undefined){\n        Z = jStat.normal.inv( 1 - (1 - confianza/100)/2, 0, 1 )\n    }\n    const pasos = [`p - Z √pq/n ≤ P ≤ p + Z √pq/n`,`${pFija} - Z √pq/${N}  ≤ P ≤  ${pFija} + Z √pq/${N}`]\n    if(Z != 0){\n        pasos.push(`${pFija} - Z √${pFija} x ${qFija} / ${N}  ≤ P ≤  ${pFija} + Z √${pFija} x ${qFija} / ${N}`)\n    }\n    const resultado = {resultado:`${(pFija - Z * Math.sqrt((pFija * qFija / N))).toFixed(4)} ≤ P ≤ ${(pFija + Z * Math.sqrt((pFija * qFija / N))).toFixed(4)}`,pasos:pasos};\n    return resultado\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/estimarN.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/modal/modalTipoDeDatos.js",["521","522"],[],"import { Input, Spacer, Button, Grid,Text } from \"@nextui-org/react\";\nimport React from \"react\";\nimport TablaDatos from \"../../tabla/tablaDatos\";\nexport default function ModalTipoDeDatos({ datos }) {\n  function updateValueMedia(e) {\n    let nuevoDato = 0\n    if(datos.tipoDeValores == \"Agrupados en intervalos\"){\n      nuevoDato = { value: (Number(document.getElementById('valor1').value) + Number(document.getElementById('valor2').value)) / 2,frecuencia:Number(document.getElementById('valor3').value)}\n    }else{\n      nuevoDato = { value: Number(document.getElementById('valor').value),frecuencia:1 }\n    }\n    nuevoDato.id = datos.valores.length + 1\n    datos.valores.push(nuevoDato)\n    datos.N = datos.valores.length\n    sessionStorage.setItem('datos', JSON.stringify(datos))\n    window.dispatchEvent(new Event(\"storage\"));\n  }\n  return (\n    <div css={{\n      Width: \"100%\",\n    }}>\n      {datos.tipoDeValores !== \"Agrupados en intervalos\" ? (\n        <div style={{display:\"grid\"}}>\n            <Input label=\"Agregar Dato\" placeholder=\"Ej: 9\" fullWidth type=\"number\" size=\"lg\" id=\"valor\"/>\n            <Spacer y={1}/>\n            <Button shadow color=\"success\" fullWidth onClick={updateValueMedia}>\n              Agregar Valores\n            </Button>\n        </div>\n      ) : (\n        <Grid.Container gap={2} justify=\"center\" alignItems=\"center\">\n\n          <Grid xs={6}>\n            <Input label=\"Valor Minimo\" placeholder=\"Ej: 100\" type=\"number\" size=\"lg\" id=\"valor1\" />\n          </Grid>\n          <Grid xs={6}>\n            <Input label=\"Valor Max\" placeholder=\"Ej: 200\" type=\"number\" size=\"lg\" id=\"valor2\" />\n          </Grid>\n          <Grid xs={12}>\n            <Input label=\"Frecuencia\" placeholder=\"Ej: 3\" type=\"number\" fullWidth size=\"lg\" id=\"valor3\"/>\n          </Grid>\n          <Grid xs={12}>\n            <Button shadow color=\"success\" css={{width:\"100%\"}} auto onClick={updateValueMedia}>\n              Agregar Valores\n            </Button>\n          </Grid>\n        </Grid.Container>\n      )}\n\n      <Spacer y={2} />\n      <TablaDatos valores={datos.valores} />\n    </div>\n  );\n}\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/tStudentConCorreccion.js",["523","524"],[],"import { jStat as jStat } from 'jstat'\nimport {obtenerS,obtenerXiFija,obtenerXiFija2} from './utils';\nexport default function tStudentConCorreccion(datos){\n    let xiCuadrado = obtenerXiFija2(datos.valores)\n    let xFija;\n    if(datos.media){\n        xFija = datos.media\n    }else{\n        xFija = obtenerXiFija(datos.valores,datos.N)\n    }\n    let S ;\n    if(datos.desvio){\n        S = datos.desvio\n    }else{\n        S = obtenerS(xiCuadrado,datos.N,xFija);\n    }\n    const x = 1 -((1 - (datos.confianza / 100)) / 2)\n    const T = jStat.studentt.inv( x, (datos.n - 1) )\n    const pasos = [`X̅ - t σ/√n √(N-n/N-1) ≤ μ ≤  X̅ + t σ/√n √(N-n/N-1)`,`${xFija} - ${T.toFixed(4)} σ/√${datos.n} √(${datos.N}-${datos.n}/${datos.N}-1) ≤ μ ≤  ${xFija} + ${T.toFixed(4)} σ/√${datos.n} √(${datos.N}-${datos.n}/${datos.N}-1)`]\n    if(S != 0){\n        pasos.push(`${xFija} - ${T.toFixed(4)} ${S.toFixed(4)}/√${datos.n} √${((datos.N - datos.n) / (datos.N - 1)).toFixed(4)} ≤ μ ≤  ${xFija} + ${T.toFixed(4)} ${S.toFixed(4)}/√${datos.n} √${((datos.N - datos.n) / (datos.N - 1)).toFixed(4)}`)\n    }\n    const resultado = {resultado:`${(xFija - T * (S/Math.sqrt(datos.n)) * Math.sqrt((datos.N - datos.n) / (datos.N - 1))).toFixed(4)} ≤ μ ≤ ${(xFija + T * (S/Math.sqrt(datos.n)) * Math.sqrt((datos.N - datos.n) / (datos.N - 1))).toFixed(4)}`,pasos:pasos};\n    if(isNaN(S)){\n        resultado.resultado = \"Faltan Valores para poder Resolver\" \n    }\n    return resultado\n}\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/tStudent.js",["525","526"],[],"import { jStat as jStat } from 'jstat'\nimport {obtenerS,obtenerXiFija,obtenerXiFija2} from './utils';\nexport default function tStudentResultado(datos){\n    let xiCuadrado = obtenerXiFija2(datos.valores)\n    let xFija;\n    if(datos.media){\n        xFija = datos.media\n    }else{\n        xFija = obtenerXiFija(datos.valores,datos.N)\n    }\n    let S ;\n    if(datos.desvio){\n        S = datos.desvio\n    }else{\n        S = obtenerS(xiCuadrado,datos.N,xFija);\n    }\n    const x = 1 -((1 - (datos.confianza / 100)) / 2)\n    const T = jStat.studentt.inv( x, (datos.N - 1) )\n    const pasos = [`X̅ - t σ/√n  ≤ μ ≤  X̅ + t σ/√n`,`${xFija} - ${T.toFixed(4)} σ/√${datos.N}  ≤ μ ≤  ${xFija} + ${T.toFixed(4)} σ/√${datos.N}`]\n    if(S != 0){\n        pasos.push(`${xFija} - ${T.toFixed(4)} ${S.toFixed(4)}/√${datos.N}  ≤ μ ≤  ${xFija} + ${T.toFixed(4)} ${S.toFixed(4)}/√${datos.N}`)\n    }\n    const resultado = {resultado:`${(xFija - T * (S/Math.sqrt(datos.N))).toFixed(4)} ≤ μ ≤ ${(xFija + T * (S/Math.sqrt(datos.N))).toFixed(4)}`,pasos:pasos};\n    if(isNaN(S)){\n        resultado.resultado = \"Faltan Valores para poder Resolver\" \n    }\n    return resultado\n}\n\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/Tchebycheff.js",["527","528"],[],"export default function TchebycheffResultado(media,N,desvio,confianza,valores){\n    let K = Math.sqrt(1/(1 - (confianza / 100)))\n    let xFija = 0\n    let xiCuadrado = 0\n    valores.forEach( e => {\n        xiCuadrado = Math.pow(Number(e.value),2) + xiCuadrado\n        xFija = xFija + Number(e.value)\n        });\n    if(media){\n        xFija = media\n    }else{\n        xFija = xFija/N\n    }\n    if(!desvio){\n        desvio = Math.sqrt(((xiCuadrado/N) - Math.pow(xFija, 2)) * (N/(N - 1)));\n    }\n    const pasos = [`X̅ - K σ/√n  ≤ μ ≤  X̅ + K σ/√n`,`${xFija} - K σ/√${N}  ≤ μ ≤  ${xFija} + K σ/√${N}`]\n    const resultado = {resultado:`${(xFija - K * (desvio/Math.sqrt(N))).toFixed(4)} ≤ μ ≤ ${(xFija + K * (desvio/Math.sqrt(N))).toFixed(4)}`,pasos:pasos};\n    if(isNaN(K) || valores.length == 0 || desvio == undefined){\n        resultado.resultado = \"Faltan Valores para poder Resolver\" \n    }else{\n        pasos.push(`${xFija.toFixed(4)} - ${K.toFixed(4)} ${desvio.toFixed(4)}/√${N}  ≤ μ ≤  ${xFija.toFixed(4)} + ${K.toFixed(4)} ${desvio}/√${N.toFixed(4)}`)\n    }\n    return resultado\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/distribucionNormal.js",["529","530"],[],"import { jStat as jStat } from 'jstat'\n\nexport default function DistribucionNormalResultado(media,N,desvio,confianza){\n    const S = desvio\n    let Z = 0\n    if(confianza !== undefined){\n        Z = jStat.normal.inv( 1 - (1 - confianza/100)/2, 0, 1 )\n    }\n    const pasos = [`X̅ - Z σ/√n  ≤ μ ≤  X̅ + Z σ/√n`,`${media} - Z σ/√${N}  ≤ μ ≤  ${media} + Z σ/√${N}`]\n    if(Z != 0){\n        pasos.push(`${media} - ${Z.toFixed(4)} ${desvio}/√${N}  ≤ μ ≤  ${media} + ${Z.toFixed(4)} ${desvio}/√${N}`)\n    }\n    const resultado = {resultado:`${(media - Z * (S/Math.sqrt(N))).toFixed(4)} ≤ μ ≤ ${(media + Z * (S/Math.sqrt(N))).toFixed(4)}`,pasos:pasos};\n    return resultado\n}\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/mediaPoblacionalFinita.js",["531","532"],[],"import { jStat as jStat } from 'jstat'\n\nexport default function mediaPoblacionalFinita_Z(datos){\n    const S = datos.desvio\n    let Z = 0\n    if(datos.confianza !== undefined){\n        Z = jStat.normal.inv( 1 - (1 - datos.confianza/100)/2, 0, 1 )\n    }\n    const pasos = [`X̅ - Z σ/√n √(N-n/N-1) ≤ μ ≤  X̅ + Z σ/√n √(N-n/N-1)`,`${datos.media} - Z σ/√${datos.N} √(${datos.N}-${datos.n}/${datos.N}-1) ≤ μ ≤  ${datos.media} + Z σ/√${datos.N} √(${datos.N}-${datos.n}/${datos.N}-1)`]\n    if(Z != 0){\n        pasos.push(`${datos.media} - ${Z.toFixed(4)} ${datos.desvio.toFixed(2)}/√${datos.n} √${((datos.N - datos.n) / (datos.N - 1)).toFixed(4)} ≤ μ ≤  ${datos.media} + ${Z.toFixed(4)} ${datos.desvio.toFixed(2)}/√${datos.n} √${((datos.N - datos.n) / (datos.N - 1)).toFixed(4)}`)\n    }\n    const resultado = {resultado:`${(datos.media - Z * (S/Math.sqrt(datos.n)) * Math.sqrt((datos.N - datos.n) / (datos.N - 1))).toFixed(4)} ≤ μ ≤ ${(datos.media + Z * (S/Math.sqrt(datos.n)) * Math.sqrt((datos.N - datos.n) / (datos.N - 1))).toFixed(4)}`,pasos:pasos};\n    return resultado\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/diferenciaProporciones.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/diferenciaMedias.js",["533"],[],"import { obtenerDesvioTipicoAmalgamado } from \"./utils\";\nimport { jStat as jStat } from 'jstat'\n\nexport default function diferenciaMedias(datos){\n    let Sa = obtenerDesvioTipicoAmalgamado(datos);\n    const x = 1 -((1 - (datos.confianza / 100)) / 2)\n    const T = jStat.studentt.inv( x, (datos.N + datos.N2 - 2) )\n    let pasos = [\"(X̅1-X̅2) - t Sa √(1/n1 + 1/n2) ≤ μ1 - μ2 ≤ (X̅1-X̅2) + t Sa √(1/n1 + 1/n2)\"\n    ,`(${datos.media}-${datos.media2}) - ${T.toFixed(4)} ${Sa.toFixed(4)} √(1/${datos.N} + 1/${datos.N2}) ≤ μ1 - μ2 ≤ (${datos.media}-${datos.media2}) + ${T.toFixed(4)} ${Sa.toFixed(4)} √(1/${datos.N} + 1/${datos.N2})`]\n    const resultado = {resultado:`${(datos.media - datos.media2) - (T * Sa * Math.sqrt((1/datos.N + 1/datos.N2)))} ≤ μ1 - μ2 ≤ ${(datos.media - datos.media2) + (T * Sa * Math.sqrt((1/datos.N + 1/datos.N2)))}`,pasos:pasos};\n    return resultado;\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/estimarVarianza.js",["534"],[],"import { jStat as jStat } from 'jstat'\nimport {obtenerS} from './utils';\nexport default function EstimarVarianza (media,N,varianza,valores,confianza){\n    const xa = (1 - (confianza / 100)) / 2\n    const xb = 1 - ((1 - (confianza / 100)) / 2)\n    let xiCuadrado = 0\n    let xFija = 0\n    valores.forEach( e => {\n        xiCuadrado = Math.pow(Number(e.value),2) + xiCuadrado\n        xFija = xFija + Number(e.value)\n        });\n    if(media){\n        xFija = media\n    }else{\n        xFija = xFija/N\n    }\n    let A = jStat.chisquare.inv( xa, (N - 1) )\n    let B = jStat.chisquare.inv( xb, (N - 1) )\n    let Scuadrado = Math.pow(obtenerS(xiCuadrado,N,xFija),2);\n    if(varianza) Scuadrado = varianza;\n    const pasos = [\"(n - 1) S² / B ≤ σ² ≤ (n - 1) S² / A\",`(${N} - 1) ${Scuadrado} / ${B.toFixed(4)} ≤ σ² ≤ (${N} - 1) ${Scuadrado} / ${A.toFixed(4)} `]\n    const resultado = {resultado:`${(((N-1) * (Scuadrado) / B)).toFixed(4)} ≤ σ² ≤ ${(((N-1) * (Scuadrado) / A)).toFixed(4)}`,pasos:pasos};\n    return resultado\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/modal/modalFormulas.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/IntervaloDeConfianza/formulas/utils.js",["535"],[],"import { jStat as jStat } from 'jstat'\n\nexport function obtenerS(xiCuadrado,N,xFija){\n   return Math.sqrt(((xiCuadrado/N) - Math.pow(xFija, 2)) * (N/(N - 1)))  \n}\nexport function obtenerDesvioTipicoAmalgamado(datos){\n   const termino1 = (datos.N - 1) * datos.varianza;\n   const termino2 = (datos.N2 - 1) * datos.varianza2;\n   return Math.sqrt(( termino1 + termino2) / (datos.N + datos.N2 -2))  \n}\nexport function obtenerZ(confianza){\n   return jStat.normal.inv( 1 - (1 - confianza/100)/2, 0, 1 )\n}\nexport function obtenerXiFija(valores,N){\n   let xFija = 0;\n   valores.forEach( e => {\n      xFija = xFija + Number(e.value)\n  });\n   return xFija/N\n}\nexport function obtenerXiFija2(valores){\n   let xiCuadrado = 0;\n   valores.forEach( e => {\n      xiCuadrado = Math.pow(Number(e.value),2) + xiCuadrado\n  });\n   return xiCuadrado\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/TablaAnalisisConfianza.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/tabla/tablaAnalisisVarianza2.js",["536"],[],"import { Table, Input} from \"@nextui-org/react\";\nimport React from \"react\";\n\nexport default function TablaAnalisisVarianza2({datos}) {\n  return (\n    <Table\n    variant=\"bordered\"\n    aria-label=\"Example pagination  table\"\n    color=\"secondary\"\n    css={{\n      height: \"auto\",\n      Width: \"100%\",\n    }}\n    >\n      <Table.Header>\n        <Table.Column>Valor Observado</Table.Column>\n        <Table.Column>P-value</Table.Column>\n      </Table.Header>\n      <Table.Body>\n      <Table.Row key=\"1\">\n            <Table.Cell>{(datos.F).toFixed(5)}</Table.Cell>\n            <Table.Cell>{(datos.ValorCriticoF).toFixed(5)}</Table.Cell>\n        </Table.Row>\n      </Table.Body>\n    </Table>\n  );\n}\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/modalEleccion.js",["537","538","539"],[],"import { Card, Grid,Modal,Text,Row, useTheme} from \"@nextui-org/react\";\nimport React from \"react\";\nimport isMobile from \"is-mobile\";\nimport img1 from \"../../img/datosXeY.png\"\nimport img2 from \"../../img/datosIncompletos.png\"\nimport GetDatosXeY from \"./getDatos\";\nimport GetDatosIncompletos from \"./datosIncompletos/getDatos\";\nexport default function ModalSeleccion() {\n    const list = [\n        {\n            title: \"Datos con tabla X e Y\",\n            img: img1\n        },\n        {\n            title: \"Datos Incompletos\",\n            img: img2\n        }\n    \n    ];\n    const { isDark, type } = useTheme();\n    const [visible, setVisible] = React.useState(true);\n    const [estimacion, setEstimacion] = React.useState(\"Datos con tabla X e Y\");\n    const handlerEstimacion = (title) => {\n        setEstimacion(title)\n        setVisible(false)\n    };\n    const closeHandler = () => {\n        setVisible(false);\n    };\n    return (\n        <>\n        {estimacion == \"Datos con tabla X e Y\" ? (<GetDatosXeY/>) : (<GetDatosIncompletos/>)}\n\n        <Modal\n            blur\n            preventClose\n            aria-labelledby=\"modal-title\"\n            open={visible}\n            onClose={closeHandler}\n            className=\"ModalDatos\"\n            width={isMobile() ? \"100vw\":\"60vw\"}\n        >\n            <Modal.Header>\n                <Text id=\"modal-title\" size={18}>\n                    Tipo de\n                    <Text b size={18}> Datos</Text>\n                </Text>\n            </Modal.Header>\n            <Modal.Body>\n            <Grid.Container gap={2}>\n            {list.map((item, index) => (\n                            <Grid sm={isMobile() ? 12 : 6 } xs={12}key={index}>\n                                <Card isPressable isHoverable variant=\"bordered\" onClick={() => handlerEstimacion(item.title)}>\n                                    <Card.Body css={{ p: 0 }}>\n                                        <Card.Image\n                                            src={item.img}\n                                            objectFit=\"scale-down\"\n                                            width=\"100%\"\n                                            height={140}\n                                            alt={item.title}\n                                            css={isDark == true ? {filter:\"invert(3)\"} : {filter:\"none\"}}\n                                        />\n                                    </Card.Body>\n                                    <Card.Footer css={{ justifyItems: \"center\" }}>\n                                        <Row wrap=\"wrap\" justify=\"center\" align=\"center\">\n                                            <Text b>{item.title}</Text>\n                                        </Row>\n                                    </Card.Footer>\n                                </Card>\n                            </Grid>\n                            ))\n            }\n            </Grid.Container>\n            </Modal.Body>\n        </Modal>\n        </>\n    );\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/getDatos.js",["540"],[],"import Logica from \"./logica\"\nimport { useState, useEffect } from \"react\";\nimport Contenedor from \"./contenedor\";\nexport default function GetDatosIncompletos() {\n    const [datos, setDatos] = useState({ distribucion: \"Normal\",intervalos:{confianza:[95,95,99,99],data:[\n        {\n            row: 'Ordenada al origen (𝛽⁰)',\n            coef:0,\n            inf1: 0,\n            sup1: 0,\n            inf2: 0,\n            sup2: 0\n        },\n        {\n            row: 'Pendiente (𝛽¹)',\n            coef:0,\n            inf1: 0,\n            sup1: 0,\n            inf2: 0,\n            sup2: 0\n        }\n    ]},\n    valores: [] });\n    useEffect(() => {\n        sessionStorage.setItem('datos', JSON.stringify(datos));\n        window.addEventListener('storage', () => {\n            const datosStorage = Logica(JSON.parse(sessionStorage.getItem('datos')));\n            setDatos(datosStorage);\n            sessionStorage.setItem('datos', JSON.stringify(datosStorage));\n        })\n    }, []);\n    return (\n        <Contenedor datos={datos} />\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/logica.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/formulas.js",["541"],[],"import { jStat as jStat } from 'jstat'\n\nexport function obtenerEstadisticoT(prob,n){\n    prob = 1 - (prob / 2)\n    return jStat.studentt.inv( prob, n )\n}\nexport function calcularF(datos){\n\n    }\nexport function obtenerConfianzaBeta1(datos,confianza1,confianza2,Z){\n    const xVieja = 1 -((1 - (confianza1 / 100)) / 2)\n    const x = 1 -((1 - (confianza2 / 100)) / 2)\n    const T = jStat.studentt.inv( x, (datos.N - 2) )\n    const Tvieja = jStat.studentt.inv( xVieja, (datos.N - 2) )\n    const A = (Z - datos.beta1) / -Tvieja\n    return {inferior:datos.beta1 - T * A,superior:datos.beta1 + T * A}\n}\nexport function obtenerConfianzaBeta0(datos,confianza1,confianza2,Z){\n    const xVieja = 1 -((1 - (confianza1 / 100)) / 2)\n    const x = 1 -((1 - (confianza2 / 100)) / 2)\n    const T = jStat.studentt.inv( x, (datos.N - 2) )\n    const Tvieja = jStat.studentt.inv( xVieja, (datos.N - 2) )\n    const A = (Z - datos.beta0) / -Tvieja\n    return {inferior:datos.beta0 - T * A,superior:datos.beta0 + T * A}\n}\nexport function obtenerConfianzaBeta1SinConfianza(datos){\n    const x = 1 -((1 - (datos.intervalos.confianza[0] / 100)) / 2);\n    const x1 = 1 -((1 - (datos.intervalos.confianza[1] / 100)) / 2);\n    const x2 = 1 -((1 - (datos.intervalos.confianza[2] / 100)) / 2);\n    const x3 = 1 -((1 - (datos.intervalos.confianza[3] / 100)) / 2);\n    const T = jStat.studentt.inv( x, (datos.N - 2) );\n    const T1 = jStat.studentt.inv( x1, (datos.N - 2) );\n    const T2 = jStat.studentt.inv( x2, (datos.N - 2) );\n    const T3 = jStat.studentt.inv( x3, (datos.N - 2) );\n    const A = datos.desvioBeta1;\n    return {inferior1:datos.beta1 - T * A,superior1:datos.beta1 + T1 * A,inferior2:datos.beta1 - T2 * A,superior2:datos.beta1 + T3 * A}\n}\nexport function obtenerConfianzaBeta0SinConfianza(datos){\n    const x = 1 -((1 - (datos.intervalos.confianza[0] / 100)) / 2);\n    const x1 = 1 -((1 - (datos.intervalos.confianza[1] / 100)) / 2);\n    const x2 = 1 -((1 - (datos.intervalos.confianza[2] / 100)) / 2);\n    const x3 = 1 -((1 - (datos.intervalos.confianza[3] / 100)) / 2);\n    const T = jStat.studentt.inv( x, (datos.N - 2) );\n    const T1 = jStat.studentt.inv( x1, (datos.N - 2) );\n    const T2 = jStat.studentt.inv( x2, (datos.N - 2) );\n    const T3 = jStat.studentt.inv( x3, (datos.N - 2) );\n    const A = datos.desvioBeta0;\n    return {inferior1:datos.beta0 - T * A,superior1:datos.beta0 + T1 * A,inferior2:datos.beta0 - T2 * A,superior2:datos.beta0 + T3 * A}\n}\nexport function calcularBeta0(intervalo1,intervao2){\n    return (intervalo1 + intervao2) / 2\n}\nexport function calcularBeta1(intervalo1,intervao2){\n    return (intervalo1 + intervao2) / 2\n}\n","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/result.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/modalFormulas.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/TablaAnalisisVarianza.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/TablaTestIndividuales.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/TablaAnalisisVarianza2.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/TablaAnalisisResiduales.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/TablaAnalisisConfianza.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/Input.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/EditIcon.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/correlacionYregresion/datosIncompletos/contenedor.js",["542"],[],"import Result from \"./result\"\nimport { Spacer,Grid,Card,Text } from \"@nextui-org/react\";\nimport TablaAnalisisConfianza from \"./TablaAnalisisConfianza\";\nimport TablaAnalisisVarianza from \"./TablaAnalisisVarianza\";\nimport TablaTestIndividuales from \"./TablaTestIndividuales\";\nimport TablaAnalisisResiduales from \"./TablaAnalisisResiduales\";\nimport TablaAnalisisVarianza2 from \"./TablaAnalisisVarianza2\";\nexport default function Contenedor({datos}){\n    return(\n        <>\n            <Spacer y={2} />\n            <Grid.Container gap={2} >\n                <Grid xs={12} md={12} justify=\"center\">\n                <Result datos={datos} />\n                </Grid>\n            </Grid.Container>\n            <Spacer y={2} />\n            <div style={{marginLeft:\"2%\",marginRight:\"2%\"}}>\n                    <Card  variant=\"bordered\">\n                        <Card.Body>\n                                 <TablaAnalisisConfianza datos={datos} />\n                        </Card.Body>\n                    </Card>\n                    <Spacer y={2} />\n                    <Card  variant=\"bordered\">\n                        <Card.Body>\n                        <Text h1 size={40}\n                                     css={{\n                                        textGradient: \"45deg, $blue600 -20%, $pink600 50%\",\n                                        textAlign:\"center\"\n                                      }}\n                                weight=\"bold\">Test Individuales</Text>\n                                 <TablaTestIndividuales datos={datos} />\n                        </Card.Body>\n                    </Card>\n                    <Spacer y={2} />\n                    <Card  variant=\"bordered\">\n                        <Card.Body>\n                        <Text h1 size={40}\n                                     css={{\n                                        textGradient: \"45deg, $blue600 -20%, $pink600 50%\",\n                                        textAlign:\"center\"\n                                    }}\n                                weight=\"bold\">ANOVA</Text>\n                                 <TablaAnalisisVarianza datos={datos} />\n                        </Card.Body>\n                    </Card>\n                    <Spacer y={2} />\n                    <Card  variant=\"bordered\">\n                        <Card.Body>\n                        <Text h1 size={40}\n                                     css={{\n                                        textGradient: \"45deg, $blue600 -20%, $pink600 50%\",\n                                        textAlign:\"center\"\n                                    }}\n                                weight=\"bold\">Test de significacion Global</Text>\n                                 <TablaAnalisisVarianza2 datos={datos} />\n                        </Card.Body>\n                    </Card>\n                    <Spacer y={2} />\n            </div>\n        </>\n    )\n}","/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/graficos/correlacion.js",[],[],"/Users/tomasmonge/Desktop/proyecto Estadistica/src/componentes/graficos/intConfianza.js",[],[],{"ruleId":"543","severity":1,"message":"544","line":42,"column":55,"nodeType":"545","messageId":"546","endLine":42,"endColumn":102},{"ruleId":"547","severity":1,"message":"548","line":1,"column":24,"nodeType":"549","messageId":"550","endLine":1,"endColumn":28},{"ruleId":"547","severity":1,"message":"551","line":2,"column":10,"nodeType":"549","messageId":"550","endLine":2,"endColumn":18},{"ruleId":"547","severity":1,"message":"552","line":17,"column":23,"nodeType":"549","messageId":"550","endLine":17,"endColumn":27},{"ruleId":"553","severity":1,"message":"554","line":36,"column":70,"nodeType":"555","messageId":"556","endLine":36,"endColumn":72},{"ruleId":"553","severity":1,"message":"554","line":63,"column":30,"nodeType":"555","messageId":"556","endLine":63,"endColumn":32},{"ruleId":"557","severity":1,"message":"558","line":19,"column":8,"nodeType":"559","endLine":19,"endColumn":10,"suggestions":"560"},{"ruleId":"547","severity":1,"message":"561","line":16,"column":22,"nodeType":"549","messageId":"550","endLine":16,"endColumn":34},{"ruleId":"547","severity":1,"message":"552","line":46,"column":21,"nodeType":"549","messageId":"550","endLine":46,"endColumn":25},{"ruleId":"553","severity":1,"message":"554","line":58,"column":21,"nodeType":"555","messageId":"556","endLine":58,"endColumn":23},{"ruleId":"553","severity":1,"message":"554","line":59,"column":21,"nodeType":"555","messageId":"556","endLine":59,"endColumn":23},{"ruleId":"553","severity":1,"message":"554","line":60,"column":21,"nodeType":"555","messageId":"556","endLine":60,"endColumn":23},{"ruleId":"553","severity":1,"message":"554","line":61,"column":21,"nodeType":"555","messageId":"556","endLine":61,"endColumn":23},{"ruleId":"553","severity":1,"message":"554","line":62,"column":21,"nodeType":"555","messageId":"556","endLine":62,"endColumn":23},{"ruleId":"553","severity":1,"message":"554","line":63,"column":21,"nodeType":"555","messageId":"556","endLine":63,"endColumn":23},{"ruleId":"553","severity":1,"message":"554","line":92,"column":57,"nodeType":"555","messageId":"556","endLine":92,"endColumn":59},{"ruleId":"547","severity":1,"message":"562","line":1,"column":16,"nodeType":"549","messageId":"550","endLine":1,"endColumn":22},{"ruleId":"547","severity":1,"message":"563","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":22},{"ruleId":"557","severity":1,"message":"564","line":17,"column":8,"nodeType":"559","endLine":17,"endColumn":10,"suggestions":"565"},{"ruleId":"543","severity":1,"message":"566","line":49,"column":17,"nodeType":"545","messageId":"546","endLine":49,"endColumn":57},{"ruleId":"557","severity":1,"message":"567","line":19,"column":8,"nodeType":"559","endLine":19,"endColumn":10,"suggestions":"568"},{"ruleId":"543","severity":1,"message":"566","line":70,"column":17,"nodeType":"545","messageId":"546","endLine":70,"endColumn":57},{"ruleId":"557","severity":1,"message":"569","line":22,"column":8,"nodeType":"559","endLine":22,"endColumn":10,"suggestions":"570"},{"ruleId":"553","severity":1,"message":"554","line":24,"column":30,"nodeType":"555","messageId":"556","endLine":24,"endColumn":32},{"ruleId":"543","severity":1,"message":"566","line":94,"column":17,"nodeType":"545","messageId":"546","endLine":94,"endColumn":57},{"ruleId":"557","severity":1,"message":"571","line":26,"column":8,"nodeType":"559","endLine":26,"endColumn":10,"suggestions":"572"},{"ruleId":"543","severity":1,"message":"566","line":114,"column":17,"nodeType":"545","messageId":"546","endLine":114,"endColumn":57},{"ruleId":"543","severity":1,"message":"573","line":116,"column":17,"nodeType":"545","messageId":"546","endLine":116,"endColumn":57},{"ruleId":"557","severity":1,"message":"574","line":21,"column":8,"nodeType":"559","endLine":21,"endColumn":10,"suggestions":"575"},{"ruleId":"553","severity":1,"message":"554","line":23,"column":30,"nodeType":"555","messageId":"556","endLine":23,"endColumn":32},{"ruleId":"543","severity":1,"message":"566","line":84,"column":17,"nodeType":"545","messageId":"546","endLine":84,"endColumn":57},{"ruleId":"557","severity":1,"message":"576","line":23,"column":8,"nodeType":"559","endLine":23,"endColumn":10,"suggestions":"577"},{"ruleId":"543","severity":1,"message":"566","line":93,"column":17,"nodeType":"545","messageId":"546","endLine":93,"endColumn":57},{"ruleId":"543","severity":1,"message":"573","line":95,"column":17,"nodeType":"545","messageId":"546","endLine":95,"endColumn":57},{"ruleId":"578","severity":1,"message":"579","line":1,"column":10,"nodeType":"580","messageId":"581","endLine":1,"endColumn":24,"fix":"582"},{"ruleId":"547","severity":1,"message":"583","line":1,"column":36,"nodeType":"549","messageId":"550","endLine":1,"endColumn":40},{"ruleId":"547","severity":1,"message":"584","line":1,"column":42,"nodeType":"549","messageId":"550","endLine":1,"endColumn":48},{"ruleId":"547","severity":1,"message":"585","line":4,"column":12,"nodeType":"549","messageId":"550","endLine":4,"endColumn":18},{"ruleId":"547","severity":1,"message":"586","line":4,"column":20,"nodeType":"549","messageId":"550","endLine":4,"endColumn":29},{"ruleId":"553","severity":1,"message":"554","line":46,"column":73,"nodeType":"555","messageId":"556","endLine":46,"endColumn":75},{"ruleId":"553","severity":1,"message":"554","line":95,"column":36,"nodeType":"555","messageId":"556","endLine":95,"endColumn":38},{"ruleId":"547","severity":1,"message":"584","line":1,"column":42,"nodeType":"549","messageId":"550","endLine":1,"endColumn":48},{"ruleId":"547","severity":1,"message":"585","line":4,"column":12,"nodeType":"549","messageId":"550","endLine":4,"endColumn":18},{"ruleId":"547","severity":1,"message":"586","line":4,"column":20,"nodeType":"549","messageId":"550","endLine":4,"endColumn":29},{"ruleId":"553","severity":1,"message":"554","line":11,"column":31,"nodeType":"555","messageId":"556","endLine":11,"endColumn":33},{"ruleId":"587","severity":1,"message":"588","line":11,"column":43,"nodeType":"589","messageId":"590","endLine":11,"endColumn":45},{"ruleId":"587","severity":1,"message":"588","line":11,"column":60,"nodeType":"589","messageId":"590","endLine":11,"endColumn":62},{"ruleId":"587","severity":1,"message":"591","line":11,"column":60,"nodeType":"589","messageId":"590","endLine":11,"endColumn":62},{"ruleId":"587","severity":1,"message":"591","line":11,"column":77,"nodeType":"589","messageId":"590","endLine":11,"endColumn":79},{"ruleId":"547","severity":1,"message":"592","line":1,"column":37,"nodeType":"549","messageId":"550","endLine":1,"endColumn":43},{"ruleId":"547","severity":1,"message":"584","line":1,"column":63,"nodeType":"549","messageId":"550","endLine":1,"endColumn":69},{"ruleId":"547","severity":1,"message":"585","line":6,"column":12,"nodeType":"549","messageId":"550","endLine":6,"endColumn":18},{"ruleId":"547","severity":1,"message":"586","line":6,"column":20,"nodeType":"549","messageId":"550","endLine":6,"endColumn":29},{"ruleId":"547","severity":1,"message":"593","line":8,"column":11,"nodeType":"549","messageId":"550","endLine":8,"endColumn":18},{"ruleId":"553","severity":1,"message":"554","line":73,"column":36,"nodeType":"555","messageId":"556","endLine":73,"endColumn":38},{"ruleId":"547","severity":1,"message":"592","line":1,"column":37,"nodeType":"549","messageId":"550","endLine":1,"endColumn":43},{"ruleId":"547","severity":1,"message":"584","line":1,"column":63,"nodeType":"549","messageId":"550","endLine":1,"endColumn":69},{"ruleId":"547","severity":1,"message":"585","line":6,"column":12,"nodeType":"549","messageId":"550","endLine":6,"endColumn":18},{"ruleId":"547","severity":1,"message":"586","line":6,"column":20,"nodeType":"549","messageId":"550","endLine":6,"endColumn":29},{"ruleId":"547","severity":1,"message":"593","line":8,"column":11,"nodeType":"549","messageId":"550","endLine":8,"endColumn":18},{"ruleId":"553","severity":1,"message":"554","line":73,"column":36,"nodeType":"555","messageId":"556","endLine":73,"endColumn":38},{"ruleId":"547","severity":1,"message":"592","line":1,"column":37,"nodeType":"549","messageId":"550","endLine":1,"endColumn":43},{"ruleId":"547","severity":1,"message":"584","line":1,"column":63,"nodeType":"549","messageId":"550","endLine":1,"endColumn":69},{"ruleId":"547","severity":1,"message":"585","line":6,"column":12,"nodeType":"549","messageId":"550","endLine":6,"endColumn":18},{"ruleId":"547","severity":1,"message":"586","line":6,"column":20,"nodeType":"549","messageId":"550","endLine":6,"endColumn":29},{"ruleId":"547","severity":1,"message":"593","line":8,"column":11,"nodeType":"549","messageId":"550","endLine":8,"endColumn":18},{"ruleId":"553","severity":1,"message":"554","line":64,"column":36,"nodeType":"555","messageId":"556","endLine":64,"endColumn":38},{"ruleId":"547","severity":1,"message":"592","line":1,"column":37,"nodeType":"549","messageId":"550","endLine":1,"endColumn":43},{"ruleId":"547","severity":1,"message":"584","line":1,"column":63,"nodeType":"549","messageId":"550","endLine":1,"endColumn":69},{"ruleId":"547","severity":1,"message":"585","line":6,"column":12,"nodeType":"549","messageId":"550","endLine":6,"endColumn":18},{"ruleId":"547","severity":1,"message":"586","line":6,"column":20,"nodeType":"549","messageId":"550","endLine":6,"endColumn":29},{"ruleId":"547","severity":1,"message":"593","line":8,"column":11,"nodeType":"549","messageId":"550","endLine":8,"endColumn":18},{"ruleId":"547","severity":1,"message":"594","line":13,"column":14,"nodeType":"549","messageId":"550","endLine":13,"endColumn":26},{"ruleId":"553","severity":1,"message":"554","line":71,"column":36,"nodeType":"555","messageId":"556","endLine":71,"endColumn":38},{"ruleId":"553","severity":1,"message":"554","line":46,"column":73,"nodeType":"555","messageId":"556","endLine":46,"endColumn":75},{"ruleId":"553","severity":1,"message":"554","line":85,"column":36,"nodeType":"555","messageId":"556","endLine":85,"endColumn":38},{"ruleId":"553","severity":1,"message":"595","line":12,"column":10,"nodeType":"555","messageId":"556","endLine":12,"endColumn":12},{"ruleId":"547","severity":1,"message":"548","line":1,"column":38,"nodeType":"549","messageId":"550","endLine":1,"endColumn":42},{"ruleId":"553","severity":1,"message":"554","line":7,"column":28,"nodeType":"555","messageId":"556","endLine":7,"endColumn":30},{"ruleId":"578","severity":1,"message":"579","line":1,"column":10,"nodeType":"580","messageId":"581","endLine":1,"endColumn":24,"fix":"596"},{"ruleId":"553","severity":1,"message":"595","line":20,"column":10,"nodeType":"555","messageId":"556","endLine":20,"endColumn":12},{"ruleId":"578","severity":1,"message":"579","line":1,"column":10,"nodeType":"580","messageId":"581","endLine":1,"endColumn":24,"fix":"597"},{"ruleId":"553","severity":1,"message":"595","line":20,"column":10,"nodeType":"555","messageId":"556","endLine":20,"endColumn":12},{"ruleId":"553","severity":1,"message":"554","line":19,"column":35,"nodeType":"555","messageId":"556","endLine":19,"endColumn":37},{"ruleId":"553","severity":1,"message":"554","line":19,"column":50,"nodeType":"555","messageId":"556","endLine":19,"endColumn":52},{"ruleId":"578","severity":1,"message":"579","line":1,"column":10,"nodeType":"580","messageId":"581","endLine":1,"endColumn":24,"fix":"598"},{"ruleId":"553","severity":1,"message":"595","line":10,"column":10,"nodeType":"555","messageId":"556","endLine":10,"endColumn":12},{"ruleId":"578","severity":1,"message":"579","line":1,"column":10,"nodeType":"580","messageId":"581","endLine":1,"endColumn":24,"fix":"599"},{"ruleId":"553","severity":1,"message":"595","line":10,"column":10,"nodeType":"555","messageId":"556","endLine":10,"endColumn":12},{"ruleId":"578","severity":1,"message":"579","line":2,"column":10,"nodeType":"580","messageId":"581","endLine":2,"endColumn":24,"fix":"600"},{"ruleId":"578","severity":1,"message":"579","line":1,"column":10,"nodeType":"580","messageId":"581","endLine":1,"endColumn":24,"fix":"601"},{"ruleId":"578","severity":1,"message":"579","line":1,"column":10,"nodeType":"580","messageId":"581","endLine":1,"endColumn":24,"fix":"602"},{"ruleId":"547","severity":1,"message":"563","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":22},{"ruleId":"547","severity":1,"message":"552","line":20,"column":21,"nodeType":"549","messageId":"550","endLine":20,"endColumn":25},{"ruleId":"553","severity":1,"message":"554","line":32,"column":21,"nodeType":"555","messageId":"556","endLine":32,"endColumn":23},{"ruleId":"553","severity":1,"message":"554","line":61,"column":57,"nodeType":"555","messageId":"556","endLine":61,"endColumn":59},{"ruleId":"557","severity":1,"message":"558","line":31,"column":8,"nodeType":"559","endLine":31,"endColumn":10,"suggestions":"603"},{"ruleId":"578","severity":1,"message":"579","line":1,"column":10,"nodeType":"580","messageId":"581","endLine":1,"endColumn":24,"fix":"604"},{"ruleId":"547","severity":1,"message":"605","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":31},"react/jsx-pascal-case","Imported JSX component Correlacion_Y_Regresion must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","no-unused-vars","'Text' is defined but never used.","Identifier","unusedVar","'AcmeLogo' is defined but never used.","'type' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'datos'. Either include it or remove the dependency array.","ArrayExpression",["606"],"'useNextTheme' is defined but never used.","'Spacer' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'datos', 'updateValueConfianza', 'updateValueN', and 'updateValueR'. Either include them or remove the dependency array.",["607"],"Imported JSX component Intervalo_de_confianza must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'datos', 'updateValueConfianza', 'updateValueDesvio', 'updateValueE', 'updateValueP', and 'updateValueVarianza'. Either include them or remove the dependency array.",["608"],"React Hook useEffect has missing dependencies: 'datos', 'updateValueConfianza', 'updateValueDesvio', 'updateValueDistribucion', 'updateValueMedia', 'updateValueN', 'updateValueVarianza', and 'updateValuen'. Either include them or remove the dependency array.",["609"],"React Hook useEffect has missing dependencies: 'datos', 'updateValueConfianza', 'updateValueDesvio', 'updateValueDesvio2', 'updateValueMedia', 'updateValueMedia2', 'updateValueN', 'updateValueN2', 'updateValueVarianza', and 'updateValueVarianza2'. Either include them or remove the dependency array.",["610"],"Imported JSX component Intervalo_de_confianza2 must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'datos', 'updateValueConfianza', 'updateValueDesvio', 'updateValueDistribucion', 'updateValueMedia', 'updateValueN', and 'updateValueVarianza'. Either include them or remove the dependency array.",["611"],"React Hook useEffect has missing dependencies: 'datos', 'updateValueConfianza', 'updateValueN', 'updateValueN2', 'updateValueP', 'updateValueP2', 'updateValueR', and 'updateValueR2'. Either include them or remove the dependency array.",["612"],"no-useless-rename","Import jStat unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"613","text":"614"},"'Grid' is defined but never used.","'Switch' is defined but never used.","'normal' is assigned a value but never used.","'setNormal' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","'Button' is defined but never used.","'handler' is assigned a value but never used.","'obtenerMedia' is defined but never used.","Expected '!==' and instead saw '!='.",{"range":"615","text":"614"},{"range":"616","text":"614"},{"range":"617","text":"614"},{"range":"618","text":"614"},{"range":"619","text":"614"},{"range":"620","text":"614"},{"range":"621","text":"614"},["622"],{"range":"623","text":"614"},"'TablaAnalisisResiduales' is defined but never used.",{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},[9,23],"jStat",[9,23],[9,23],[9,23],[9,23],[66,80],[9,23],[9,23],{"desc":"624","fix":"638"},[9,23],"Update the dependencies array to be: [datos]",{"range":"639","text":"640"},"Update the dependencies array to be: [datos, updateValueConfianza, updateValueN, updateValueR]",{"range":"641","text":"642"},"Update the dependencies array to be: [datos, updateValueConfianza, updateValueDesvio, updateValueE, updateValueP, updateValueVarianza]",{"range":"643","text":"644"},"Update the dependencies array to be: [datos, updateValueConfianza, updateValueDesvio, updateValueDistribucion, updateValueMedia, updateValueN, updateValueVarianza, updateValuen]",{"range":"645","text":"646"},"Update the dependencies array to be: [datos, updateValueConfianza, updateValueDesvio, updateValueDesvio2, updateValueMedia, updateValueMedia2, updateValueN, updateValueN2, updateValueVarianza, updateValueVarianza2]",{"range":"647","text":"648"},"Update the dependencies array to be: [datos, updateValueConfianza, updateValueDesvio, updateValueDistribucion, updateValueMedia, updateValueN, updateValueVarianza]",{"range":"649","text":"650"},"Update the dependencies array to be: [datos, updateValueConfianza, updateValueN, updateValueN2, updateValueP, updateValueP2, updateValueR, updateValueR2]",{"range":"651","text":"652"},{"range":"653","text":"640"},[1003,1005],"[datos]",[890,892],"[datos, updateValueConfianza, updateValueN, updateValueR]",[1077,1079],"[datos, updateValueConfianza, updateValueDesvio, updateValueE, updateValueP, updateValueVarianza]",[1290,1292],"[datos, updateValueConfianza, updateValueDesvio, updateValueDistribucion, updateValueMedia, updateValueN, updateValueVarianza, updateValuen]",[1616,1618],"[datos, updateValueConfianza, updateValueDesvio, updateValueDesvio2, updateValueMedia, updateValueMedia2, updateValueN, updateValueN2, updateValueVarianza, updateValueVarianza2]",[1215,1217],"[datos, updateValueConfianza, updateValueDesvio, updateValueDistribucion, updateValueMedia, updateValueN, updateValueVarianza]",[1329,1331],"[datos, updateValueConfianza, updateValueN, updateValueN2, updateValueP, updateValueP2, updateValueR, updateValueR2]",[977,979]]